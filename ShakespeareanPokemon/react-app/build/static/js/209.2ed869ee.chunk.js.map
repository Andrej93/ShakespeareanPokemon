{"version":3,"file":"static/js/209.2ed869ee.chunk.js","mappings":"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","sources":["../node_modules/@fluentui/react-hooks/src/useMergedRefs.ts","../node_modules/@fluentui/utilities/src/array.ts","../node_modules/@fluentui/utilities/src/createMergedRef.ts","../node_modules/@fluentui/dom-utilities/src/getParent.ts","../node_modules/@fluentui/dom-utilities/src/getVirtualParent.ts","../node_modules/@fluentui/dom-utilities/src/isVirtualElement.ts","../node_modules/@fluentui/dom-utilities/src/findElementRecursive.ts","../node_modules/@fluentui/dom-utilities/src/setPortalAttribute.ts","../node_modules/@fluentui/dom-utilities/src/portalContainsElement.ts","../node_modules/@fluentui/utilities/src/KeyCodes.ts","../node_modules/@fluentui/utilities/src/object.ts","../node_modules/@fluentui/utilities/src/EventGroup.ts","../node_modules/@fluentui/utilities/src/BaseComponent.ts","../node_modules/@fluentui/utilities/src/keyboard.ts","../node_modules/@fluentui/utilities/src/useFocusRects.ts","../node_modules/@fluentui/utilities/src/aria.ts","../node_modules/@fluentui/react/lib/components/src/components/Icon/ImageIcon.tsx","../node_modules/@fluentui/react/lib/src/common/DirectionalHint.ts","../node_modules/@fluentui/utilities/lib/src/renderFunction/composeRenderFunction.tsx","../node_modules/@fluentui/react/lib/components/src/components/ContextualMenu/ContextualMenu.types.ts","../node_modules/@fluentui/react-focus/lib/components/src/components/FocusZone/FocusZone.types.ts","../node_modules/@fluentui/dom-utilities/src/elementContains.ts","../node_modules/@fluentui/utilities/src/focus.ts","../node_modules/@fluentui/dom-utilities/src/elementContainsAttribute.ts","../node_modules/@fluentui/utilities/lib/src/dom/raiseClick.ts","../node_modules/@fluentui/utilities/src/scroll.ts","../node_modules/@fluentui/react-focus/lib/components/src/components/FocusZone/FocusZone.tsx","../node_modules/@fluentui/utilities/src/osDetector.ts","../node_modules/@fluentui/utilities/src/mobileDetector.ts","../node_modules/@fluentui/react/lib/utilities/src/utilities/positioning/positioning.types.ts","../node_modules/@fluentui/utilities/src/getPropsWithDefaults.ts","../node_modules/@fluentui/react/lib/utilities/src/utilities/contextualMenu/contextualMenuUtility.ts","../node_modules/@fluentui/utilities/lib/src/dom/on.ts","../node_modules/@fluentui/utilities/src/Rectangle.ts","../node_modules/@fluentui/react/lib/utilities/src/utilities/positioning/positioning.ts","../node_modules/@fluentui/react-hooks/src/useConst.ts","../node_modules/@fluentui/react-hooks/src/useAsync.ts","../node_modules/@fluentui/react-hooks/src/useOnEvent.ts","../node_modules/@fluentui/react-window-provider/src/WindowProvider.tsx","../node_modules/@fluentui/react/lib/components/src/components/Popup/Popup.tsx","../node_modules/@fluentui/react-hooks/src/useTarget.ts","../node_modules/@fluentui/react/lib/components/src/components/Callout/CalloutContent.base.tsx","../node_modules/@fluentui/react/lib/components/src/components/Callout/CalloutContent.styles.ts","../node_modules/@fluentui/react/lib/components/src/components/Callout/CalloutContent.tsx","../node_modules/@fluentui/utilities/lib/src/customizations/mergeSettings.ts","../node_modules/@fluentui/utilities/lib/src/customizations/Customizer.tsx","../node_modules/@fluentui/utilities/lib/src/customizations/mergeCustomizations.ts","../node_modules/@fluentui/react/lib/components/src/components/Fabric/Fabric.base.tsx","../node_modules/@fluentui/react/lib/components/src/components/Fabric/Fabric.styles.ts","../node_modules/@fluentui/react/lib/components/src/components/Fabric/Fabric.tsx","../node_modules/@fluentui/react/lib/components/src/components/Layer/Layer.notification.ts","../node_modules/@fluentui/react/lib/components/src/components/Layer/Layer.base.tsx","../node_modules/@fluentui/dom-utilities/src/setVirtualParent.ts","../node_modules/@fluentui/react/lib/components/src/components/Layer/Layer.styles.ts","../node_modules/@fluentui/react/lib/components/src/components/Layer/Layer.tsx","../node_modules/@fluentui/react/lib/components/src/components/Callout/Callout.tsx","../node_modules/@fluentui/react/lib/components/src/components/ContextualMenu/ContextualMenuItem.base.tsx","../node_modules/@fluentui/react/lib/utilities/src/utilities/keytips/KeytipConstants.ts","../node_modules/@fluentui/react/lib/components/src/components/Divider/VerticalDivider.classNames.ts","../node_modules/@fluentui/react/lib/components/src/components/ContextualMenu/ContextualMenu.cnstyles.ts","../node_modules/@fluentui/react/lib/components/src/components/ContextualMenu/ContextualMenu.classNames.ts","../node_modules/@fluentui/react/lib/components/src/components/ContextualMenu/ContextualMenuItem.ts","../node_modules/@fluentui/react/lib/components/ContextualMenu/src/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuItemWrapper.tsx","../node_modules/@fluentui/react-hooks/src/usePrevious.ts","../node_modules/@fluentui/react/lib/utilities/src/utilities/keytips/KeytipManager.ts","../node_modules/@fluentui/react/lib/utilities/src/utilities/keytips/KeytipUtils.ts","../node_modules/@fluentui/react/lib/components/src/components/KeytipData/useKeytipData.ts","../node_modules/@fluentui/react/lib/components/src/components/KeytipData/KeytipData.tsx","../node_modules/@fluentui/react/lib/components/ContextualMenu/src/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuAnchor.tsx","../node_modules/@fluentui/react/lib/components/src/components/Divider/VerticalDivider.base.tsx","../node_modules/@fluentui/react/lib/components/src/components/Divider/VerticalDivider.tsx","../node_modules/@fluentui/react/lib/components/src/components/Divider/VerticalDivider.styles.ts","../node_modules/@fluentui/react/lib/components/ContextualMenu/src/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuSplitButton.tsx","../node_modules/@fluentui/react/lib/components/ContextualMenu/src/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuButton.tsx","../node_modules/@fluentui/react-hooks/src/useId.ts","../node_modules/@fluentui/react-hooks/src/useWarnings.ts","../node_modules/@fluentui/react/lib/utilities/src/utilities/decorators/withResponsiveMode.tsx","../node_modules/@fluentui/react/lib/utilities/src/utilities/hooks/useResponsiveMode.tsx","../node_modules/@fluentui/react/lib/utilities/src/utilities/MenuContext/MenuContext.ts","../node_modules/@fluentui/react/lib/components/src/components/ContextualMenu/ContextualMenu.base.tsx","../node_modules/@fluentui/react/lib/components/src/components/ContextualMenu/ContextualMenu.styles.ts","../node_modules/@fluentui/react/lib/components/src/components/ContextualMenu/ContextualMenu.tsx","../node_modules/@fluentui/react/lib/components/src/components/Button/BaseButton.classNames.ts","../node_modules/@fluentui/react/lib/components/Button/src/components/Button/SplitButton/SplitButton.classNames.ts","../node_modules/@fluentui/utilities/lib/src/componentAs/composeComponentAs.tsx","../node_modules/@fluentui/react/lib/components/src/components/Button/BaseButton.tsx","../node_modules/@fluentui/react/lib/components/src/components/Button/BaseButton.styles.ts","../node_modules/@fluentui/react/lib/components/Button/src/components/Button/SplitButton/SplitButton.styles.ts","../node_modules/@fluentui/react/lib/components/Button/src/components/Button/DefaultButton/DefaultButton.styles.ts","../node_modules/@fluentui/react/lib/components/src/components/Button/ButtonThemes.ts","../node_modules/@fluentui/react/lib/components/Button/src/components/Button/DefaultButton/DefaultButton.tsx","../node_modules/@fluentui/utilities/lib/src/customizations/customizable.tsx","../node_modules/@fluentui/utilities/src/hoistStatics.ts","../node_modules/@fluentui/react/lib/components/src/components/Icon/FontIcon.tsx","../node_modules/@fluentui/react/lib/components/src/components/Icon/Icon.types.ts","../node_modules/@fluentui/react/lib/components/src/components/Icon/Icon.base.tsx","../node_modules/@fluentui/react/lib/components/src/components/Icon/Icon.tsx","../node_modules/@fluentui/react/lib/components/src/components/Icon/Icon.styles.ts","../node_modules/@fluentui/react/lib/components/src/components/Image/Image.base.tsx","../node_modules/@fluentui/react/lib/components/src/components/Image/Image.styles.ts","../node_modules/@fluentui/react/lib/components/src/components/Image/Image.tsx","../node_modules/@fluentui/react/lib/components/src/components/Image/Image.types.ts","../node_modules/@fluentui/react/lib/components/src/components/Label/Label.base.tsx","../node_modules/@fluentui/react/lib/components/src/components/Label/Label.tsx","../node_modules/@fluentui/react/lib/components/src/components/Label/Label.styles.ts","../node_modules/@fluentui/react/lib/components/src/components/TextField/TextField.base.tsx","../node_modules/@fluentui/utilities/src/ie11Detector.ts","../node_modules/@fluentui/utilities/src/controlled.ts","../node_modules/@fluentui/react/lib/components/src/components/TextField/TextField.styles.tsx","../node_modules/@fluentui/react/lib/components/src/components/TextField/TextField.ts","../node_modules/@fluentui/utilities/src/Async.ts","../node_modules/@fluentui/utilities/src/css.ts","../node_modules/@fluentui/utilities/src/getId.ts","../node_modules/@fluentui/utilities/src/appendFunction.ts","../node_modules/@fluentui/utilities/src/initializeComponentRef.ts","../node_modules/@fluentui/utilities/src/extendComponent.ts"],"sourcesContent":["import * as React from 'react';\n\n/**\n * A Ref function which can be treated like a ref object in that it has an attached\n * current property, which will be updated as the ref is evaluated.\n */\nexport type RefObjectFunction<T> = React.RefObject<T> & ((value: T) => void);\n\n/**\n * React hook to merge multiple React refs (either MutableRefObjects or ref callbacks) into a single ref callback that\n * updates all provided refs\n * @param refs - Refs to collectively update with one ref value.\n * @returns A function with an attached \"current\" prop, so that it can be treated like a RefObject.\n */\nexport function useMergedRefs<T>(...refs: (React.Ref<T> | undefined)[]): RefObjectFunction<T> {\n  const mergedCallback: RefObjectFunction<T> = (React.useCallback(\n    (value: T) => {\n      // Update the \"current\" prop hanging on the function.\n      ((mergedCallback as unknown) as React.MutableRefObject<T>).current = value;\n\n      for (const ref of refs) {\n        if (typeof ref === 'function') {\n          ref(value);\n        } else if (ref) {\n          // work around the immutability of the React.Ref type\n          ((ref as unknown) as React.MutableRefObject<T>).current = value;\n        }\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- already exhaustive\n    [...refs],\n  ) as unknown) as RefObjectFunction<T>;\n\n  return mergedCallback;\n}\n","/**\n * Helper to find the index of an item within an array, using a callback to\n * determine the match.\n *\n * @public\n * @param array - Array to search.\n * @param cb - Callback which returns true on matches.\n * @param fromIndex - Optional index to start from (defaults to 0)\n */\nexport function findIndex<T>(array: T[], cb: (item: T, index: number) => boolean, fromIndex: number = 0): number {\n  let index = -1;\n\n  for (let i = fromIndex; array && i < array.length; i++) {\n    if (cb(array[i], i)) {\n      index = i;\n      break;\n    }\n  }\n\n  return index;\n}\n\n/**\n * Helper to find the first item within an array that satisfies the callback.\n * @param array - Array to search\n * @param cb - Callback which returns true on matches\n */\nexport function find<T>(array: T[], cb: (item: T, index: number) => boolean): T | undefined {\n  let index = findIndex(array, cb);\n\n  if (index < 0) {\n    return undefined;\n  }\n\n  return array[index];\n}\n\n/**\n * Creates an array of a given size and helper method to populate.\n *\n * @public\n * @param size - Size of array.\n * @param getItem - Callback to populate given cell index.\n */\nexport function createArray<T>(size: number, getItem: (index: number) => T): T[] {\n  let array: T[] = [];\n\n  for (let i = 0; i < size; i++) {\n    array.push(getItem(i));\n  }\n\n  return array;\n}\n\n/**\n * Convert the given array to a matrix with columnCount number\n * of columns.\n *\n * @public\n * @param items - The array to convert\n * @param columnCount - The number of columns for the resulting matrix\n * @returns A matrix of items\n */\nexport function toMatrix<T>(items: T[], columnCount: number): T[][] {\n  return items.reduce((rows: T[][], currentValue: T, index: number) => {\n    if (index % columnCount === 0) {\n      rows.push([currentValue]);\n    } else {\n      rows[rows.length - 1].push(currentValue);\n    }\n    return rows;\n  }, [] as T[][]);\n}\n\n/**\n * Given an array, it returns a new array that does not contain the item at the given index.\n * @param array - The array to operate on\n * @param index - The index of the element to remove\n */\nexport function removeIndex<T>(array: T[], index: number): T[] {\n  return array.filter((_: T, i: number) => index !== i);\n}\n\n/**\n * Given an array, this function returns a new array where the element at a given index has been replaced.\n * @param array - The array to operate on\n * @param newElement - The element that will be placed in the new array\n * @param index - The index of the element that should be replaced\n */\nexport function replaceElement<T>(array: T[], newElement: T, index: number): T[] {\n  const copy = array.slice();\n  copy[index] = newElement;\n  return copy;\n}\n\n/**\n * Given an array, this function returns a new array where an element has been inserted at the given index.\n * @param array - The array to operate on\n * @param index - The index where an element should be inserted\n * @param itemToAdd - The element to insert\n */\nexport function addElementAtIndex<T>(array: T[], index: number, itemToAdd: T): T[] {\n  const copy = array.slice();\n  copy.splice(index, 0, itemToAdd);\n  return copy;\n}\n\n/**\n * Given an array where each element is of type T or T[], flatten it into an array of T\n * @param array - The array where each element can optionally also be an array\n */\nexport function flatten<T>(array: (T | T[])[]): T[] {\n  let result: T[] = [];\n  array.forEach((item: T | T[]): T[] => (result = result.concat(item)));\n  return result;\n}\n\n/**\n * Returns a boolean indicating if the two given arrays are equal in length and values.\n *\n * @param array1 - First array to compare\n * @param array2 - Second array to compare\n * @returns True if the arrays are the same length and have the same values in the same positions, false otherwise.\n */\nexport function arraysEqual<T>(array1: T[], array2: T[]): boolean {\n  if (array1.length !== array2.length) {\n    return false;\n  }\n  for (let i = 0; i < array1.length; i++) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","import * as React from 'react';\nimport { arraysEqual } from './array';\n\n/**\n * Internal state type for the ref.\n */\ntype LocalState<TType, TValue> = {\n  refs: (React.Ref<TType | null | TValue> | undefined)[];\n  resolver?: (newValue: TType | TValue | null) => void;\n};\n\n/**\n * Set up a ref resolver function given internal state managed for the ref.\n * @param local Set\n */\nconst createResolver = <TType, TValue>(local: LocalState<TType, TValue>) => (newValue: TType | TValue | null) => {\n  for (const ref of local.refs) {\n    if (typeof ref === 'function') {\n      ref(newValue);\n    } else if (ref) {\n      // work around the immutability of the React.Ref type\n      ((ref as unknown) as React.MutableRefObject<TType | TValue | null | undefined>).current = newValue;\n    }\n  }\n};\n\n/**\n * Helper to merge refs from within class components.\n */\nexport const createMergedRef = <TType, TValue = null>(value?: TValue) => {\n  const local: LocalState<TType, TValue> = {\n    refs: [] as LocalState<TType, TValue>['refs'],\n  };\n\n  return (\n    ...newRefs: (React.Ref<TType | null | TValue> | undefined)[]\n  ): ((newValue: TType | TValue | null) => void) => {\n    if (!local.resolver || !arraysEqual(local.refs, newRefs)) {\n      local.resolver = createResolver<TType, TValue>(local);\n    }\n\n    local.refs = newRefs;\n\n    return local.resolver!;\n  };\n};\n","import { getVirtualParent } from './getVirtualParent';\n/**\n * Gets the element which is the parent of a given element.\n * If `allowVirtuaParents` is `true`, this method prefers the virtual parent over\n * real DOM parent when present.\n *\n * @public\n */\nexport function getParent(child: HTMLElement, allowVirtualParents: boolean = true): HTMLElement | null {\n  return (\n    child &&\n    ((allowVirtualParents && getVirtualParent(child)) || (child.parentNode && (child.parentNode as HTMLElement)))\n  );\n}\n","import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the virtual parent given the child element, if it exists.\n *\n * @public\n */\nexport function getVirtualParent(child: HTMLElement): HTMLElement | undefined {\n  let parent: HTMLElement | undefined;\n  if (child && isVirtualElement(child)) {\n    parent = child._virtual.parent;\n  }\n  return parent;\n}\n","import { IVirtualElement } from './IVirtualElement';\n/**\n * Determines whether or not an element has the virtual hierarchy extension.\n *\n * @public\n */\nexport function isVirtualElement(element: HTMLElement | IVirtualElement): element is IVirtualElement {\n  return element && !!(<IVirtualElement>element)._virtual;\n}\n","import { getParent } from './getParent';\n/**\n * Finds the first parent element where the matchFunction returns true\n * @param element - element to start searching at\n * @param matchFunction - the function that determines if the element is a match\n * @returns the matched element or null no match was found\n */\nexport function findElementRecursive(\n  element: HTMLElement | null,\n  matchFunction: (element: HTMLElement) => boolean,\n): HTMLElement | null {\n  if (!element || element === document.body) {\n    return null;\n  }\n  return matchFunction(element) ? element : findElementRecursive(getParent(element), matchFunction);\n}\n","export const DATA_PORTAL_ATTRIBUTE = 'data-portal-element';\n\n/**\n * Identify element as a portal by setting an attribute.\n * @param element - Element to mark as a portal.\n */\nexport function setPortalAttribute(element: HTMLElement): void {\n  element.setAttribute(DATA_PORTAL_ATTRIBUTE, 'true');\n}\n","import { findElementRecursive } from './findElementRecursive';\nimport { DATA_PORTAL_ATTRIBUTE } from './setPortalAttribute';\n\n/**\n * Determine whether a target is within a portal from perspective of root or optional parent.\n * This function only works against portal components that use the setPortalAttribute function.\n * If both parent and child are within the same portal this function will return false.\n * @param target - Element to query portal containment status of.\n * @param parent - Optional parent perspective. Search for containing portal stops at parent\n * (or root if parent is undefined or invalid.)\n */\nexport function portalContainsElement(target: HTMLElement, parent?: HTMLElement): boolean {\n  const elementMatch = findElementRecursive(\n    target,\n    (testElement: HTMLElement) => parent === testElement || testElement.hasAttribute(DATA_PORTAL_ATTRIBUTE),\n  );\n  return elementMatch !== null && elementMatch.hasAttribute(DATA_PORTAL_ATTRIBUTE);\n}\n","/**\n * Simulated enum for keycodes. These will get inlined by uglify when used much like an enum\n *\n * @public\n * {@docCategory KeyCodes}\n */\nexport const KeyCodes = {\n  backspace: 8 as 8,\n  tab: 9 as 9,\n  enter: 13 as 13,\n  shift: 16 as 16,\n  ctrl: 17 as 17,\n  alt: 18 as 18,\n  pauseBreak: 19 as 19,\n  capslock: 20 as 20,\n  escape: 27 as 27,\n  space: 32 as 32,\n  pageUp: 33 as 33,\n  pageDown: 34 as 34,\n  end: 35 as 35,\n  home: 36 as 36,\n  left: 37 as 37,\n  up: 38 as 38,\n  right: 39 as 39,\n  down: 40 as 40,\n  insert: 45 as 45,\n  del: 46 as 46,\n  zero: 48 as 48,\n  one: 49 as 49,\n  two: 50 as 50,\n  three: 51 as 51,\n  four: 52 as 52,\n  five: 53 as 53,\n  six: 54 as 54,\n  seven: 55 as 55,\n  eight: 56 as 56,\n  nine: 57 as 57,\n  colon: 58 as 58,\n  a: 65 as 65,\n  b: 66 as 66,\n  c: 67 as 67,\n  d: 68 as 68,\n  e: 69 as 69,\n  f: 70 as 70,\n  g: 71 as 71,\n  h: 72 as 72,\n  i: 73 as 73,\n  j: 74 as 74,\n  k: 75 as 75,\n  l: 76 as 76,\n  m: 77 as 77,\n  n: 78 as 78,\n  o: 79 as 79,\n  p: 80 as 80,\n  q: 81 as 81,\n  r: 82 as 82,\n  s: 83 as 83,\n  t: 84 as 84,\n  u: 85 as 85,\n  v: 86 as 86,\n  w: 87 as 87,\n  x: 88 as 88,\n  y: 89 as 89,\n  z: 90 as 90,\n  leftWindow: 91 as 91,\n  rightWindow: 92 as 92,\n  select: 93 as 93,\n  /* eslint-disable @typescript-eslint/naming-convention */\n  zero_numpad: 96 as 96,\n  one_numpad: 97 as 97,\n  two_numpad: 98 as 98,\n  three_numpad: 99 as 99,\n  four_numpad: 100 as 100,\n  five_numpad: 101 as 101,\n  six_numpad: 102 as 102,\n  seven_numpad: 103 as 103,\n  eight_numpad: 104 as 104,\n  nine_numpad: 105 as 105,\n  /* eslint-enable @typescript-eslint/naming-convention */\n  multiply: 106 as 106,\n  add: 107 as 107,\n  subtract: 109 as 109,\n  decimalPoint: 110 as 110,\n  divide: 111 as 111,\n  f1: 112 as 112,\n  f2: 113 as 113,\n  f3: 114 as 114,\n  f4: 115 as 115,\n  f5: 116 as 116,\n  f6: 117 as 117,\n  f7: 118 as 118,\n  f8: 119 as 119,\n  f9: 120 as 120,\n  f10: 121 as 121,\n  f11: 122 as 122,\n  f12: 123 as 123,\n  numlock: 144 as 144,\n  scrollLock: 145 as 145,\n  semicolon: 186 as 186,\n  equalSign: 187 as 187,\n  comma: 188 as 188,\n  dash: 189 as 189,\n  period: 190 as 190,\n  forwardSlash: 191 as 191,\n  graveAccent: 192 as 192,\n  openBracket: 219 as 219,\n  backSlash: 220 as 220,\n  closeBracket: 221 as 221,\n  singleQuote: 222 as 222,\n};\nexport type KeyCodes = number;\n","/**\n * Compares a to b and b to a.\n *\n * @public\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function shallowCompare<TA extends any, TB extends any>(a: TA, b: TB): boolean {\n  for (let propName in a) {\n    if ((a as Object).hasOwnProperty(propName)) {\n      if (!(b as Object).hasOwnProperty(propName) || (b as { [key: string]: unknown })[propName] !== a[propName]) {\n        return false;\n      }\n    }\n  }\n  for (let propName in b) {\n    if ((b as Object).hasOwnProperty(propName)) {\n      if (!(a as Object).hasOwnProperty(propName)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * Makes a resulting merge of a bunch of objects. Pass in the target object followed by 1 or more\n * objects as arguments and they will be merged sequentially into the target. Note that this will\n * shallow merge; it will not create new cloned values for target members.\n *\n * @public\n * @param target - Target object to merge following object arguments into.\n * @param args - One or more objects that will be mixed into the target in the order they are provided.\n * @returns Resulting merged target.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function assign(this: any, target: any, ...args: any[]): any {\n  return filteredAssign.apply(this, [null, target].concat(args));\n}\n\n/**\n * Makes a resulting merge of a bunch of objects, but allows a filter function to be passed in to filter\n * the resulting merges. This allows for scenarios where you want to merge \"everything except that one thing\"\n * or \"properties that start with data-\". Note that this will shallow merge; it will not create new cloned\n * values for target members.\n *\n * @public\n * @param isAllowed - Callback to determine if the given propName is allowed in the result.\n * @param target - Target object to merge following object arguments into.\n * @param args - One or more objects that will be mixed into the target in the order they are provided.\n * @returns Resulting merged target.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function filteredAssign(isAllowed: (propName: string) => boolean, target: any, ...args: any[]): any {\n  target = target || {};\n\n  for (let sourceObject of args) {\n    if (sourceObject) {\n      for (let propName in sourceObject) {\n        if (sourceObject.hasOwnProperty(propName) && (!isAllowed || isAllowed(propName))) {\n          target[propName] = sourceObject[propName];\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\n/**\n * Takes an enum and iterates over each value of the enum (as a string), running the callback on each,\n * returning a mapped array.\n * @param theEnum - Enum to iterate over\n * @param callback - The first parameter the name of the entry, and the second parameter is the value\n * of that entry, which is the value you'd normally use when using the enum (usually a number).\n */\nexport function mapEnumByName<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  theEnum: any,\n  callback: (name?: string, value?: string | number) => T | undefined,\n): (T | undefined)[] | undefined {\n  // map<any> to satisfy compiler since it doesn't realize we strip out undefineds in the .filter() call\n  return Object.keys(theEnum)\n    .map<T | undefined>((p: string | number) => {\n      // map on each property name as a string\n      if (String(Number(p)) !== p) {\n        // if the property is not just a number (because enums in TypeScript will map both ways)\n        return callback(p as string, theEnum[p]);\n      }\n      return undefined;\n    })\n    .filter((v: T | undefined) => !!v); // only return elements with values\n}\n\n/**\n * Get all values in an object dictionary\n *\n * @param obj - The dictionary to get values for\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function values<T>(obj: any): T[] {\n  return Object.keys(obj).reduce((arr: T[], key: string): T[] => {\n    arr.push(obj[key]);\n    return arr;\n  }, []);\n}\n\n/**\n * Tiny helper to do the minimal amount of work in duplicating an object but omitting some\n * props. This ends up faster than using object ...rest or reduce to filter.\n *\n * This behaves very much like filteredAssign, but does not merge many objects together,\n * uses an exclusion object map, and avoids spreads all for optimal performance.\n *\n * See perf test for background:\n * https://jsperf.com/omit-vs-rest-vs-reduce/1\n *\n * @param obj - The object to clone\n * @param exclusions - The array of keys to exclude\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function omit<TObj extends Record<string, any>>(obj: TObj, exclusions: (keyof TObj)[]): TObj {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const result: Record<string, any> = {};\n\n  for (const key in obj) {\n    if (exclusions.indexOf(key) === -1 && obj.hasOwnProperty(key)) {\n      result[key] = obj[key];\n    }\n  }\n\n  return result as TObj;\n}\n","import { assign } from './object';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * @internal\n */\nexport interface IEventRecord {\n  target: any;\n  eventName: string;\n  parent: any;\n  callback: (args?: any) => void;\n  elementCallback?: (...args: any[]) => void;\n  objectCallback?: (args?: any) => void;\n  options?: boolean | AddEventListenerOptions;\n}\n\n/**\n * @internal\n */\nexport interface IEventRecordsByName {\n  [eventName: string]: IEventRecordList;\n}\n\n/**\n * @internal\n */\nexport interface IEventRecordList {\n  [id: string]: IEventRecord[] | number;\n  count: number;\n}\n\n/**\n * @internal\n */\nexport interface IDeclaredEventsByName {\n  [eventName: string]: boolean;\n}\n\n/** An instance of EventGroup allows anything with a handle to it to trigger events on it.\n *  If the target is an HTMLElement, the event will be attached to the element and can be\n *  triggered as usual (like clicking for onClick).\n *  The event can be triggered by calling EventGroup.raise() here. If the target is an\n *  HTMLElement, the event gets raised and is handled by the browser. Otherwise, it gets\n *  handled here in EventGroup, and the handler is called in the context of the parent\n *  (which is passed in in the constructor).\n *\n * @public\n * {@docCategory EventGroup}\n */\nexport class EventGroup {\n  private static _uniqueId: number = 0;\n  private _parent: any;\n  private _eventRecords: IEventRecord[];\n  private _id: number = EventGroup._uniqueId++;\n  private _isDisposed!: boolean;\n\n  /** For IE8, bubbleEvent is ignored here and must be dealt with by the handler.\n   *  Events raised here by default have bubbling set to false and cancelable set to true.\n   *  This applies also to built-in events being raised manually here on HTMLElements,\n   *  which may lead to unexpected behavior if it differs from the defaults.\n   *\n   */\n  public static raise(target: any, eventName: string, eventArgs?: any, bubbleEvent?: boolean): boolean | undefined {\n    let retVal;\n\n    if (EventGroup._isElement(target)) {\n      if (typeof document !== 'undefined' && document.createEvent) {\n        let ev = document.createEvent('HTMLEvents');\n\n        ev.initEvent(eventName, bubbleEvent || false, true);\n\n        assign(ev, eventArgs);\n\n        retVal = target.dispatchEvent(ev);\n      } else if (typeof document !== 'undefined' && (document as any).createEventObject) {\n        // IE8\n        let evObj = (document as any).createEventObject(eventArgs);\n        // cannot set cancelBubble on evObj, fireEvent will overwrite it\n        target.fireEvent('on' + eventName, evObj);\n      }\n    } else {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore  -- FIXME: strictBindCallApply error - https://github.com/microsoft/fluentui/issues/17331\n      while (target && retVal !== false) {\n        let events = <IEventRecordsByName>target.__events__;\n        let eventRecords = events ? events[eventName] : null;\n\n        if (eventRecords) {\n          for (let id in eventRecords) {\n            if (eventRecords.hasOwnProperty(id)) {\n              let eventRecordList = <IEventRecord[]>eventRecords[id];\n\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore  -- FIXME: strictBindCallApply error - https://github.com/microsoft/fluentui/issues/17331\n              for (let listIndex = 0; retVal !== false && listIndex < eventRecordList.length; listIndex++) {\n                let record = eventRecordList[listIndex];\n\n                if (record.objectCallback) {\n                  retVal = record.objectCallback.call(record.parent, eventArgs);\n                }\n              }\n            }\n          }\n        }\n\n        // If the target has a parent, bubble the event up.\n        target = bubbleEvent ? target.parent : null;\n      }\n    }\n\n    return retVal;\n  }\n\n  public static isObserved(target: any, eventName: string): boolean {\n    let events = target && <IEventRecordsByName>target.__events__;\n\n    return !!events && !!events[eventName];\n  }\n\n  /** Check to see if the target has declared support of the given event. */\n  public static isDeclared(target: any, eventName: string): boolean {\n    let declaredEvents = target && <IDeclaredEventsByName>target.__declaredEvents;\n\n    return !!declaredEvents && !!declaredEvents[eventName];\n  }\n\n  public static stopPropagation(event: any): void {\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      // IE8\n      event.cancelBubble = true;\n    }\n  }\n\n  private static _isElement(target: HTMLElement): boolean {\n    return (\n      !!target && (!!target.addEventListener || (typeof HTMLElement !== 'undefined' && target instanceof HTMLElement))\n    );\n  }\n\n  /** parent: the context in which events attached to non-HTMLElements are called */\n  public constructor(parent: any) {\n    this._parent = parent;\n    this._eventRecords = [];\n  }\n\n  public dispose(): void {\n    if (!this._isDisposed) {\n      this._isDisposed = true;\n\n      this.off();\n      this._parent = null;\n    }\n  }\n\n  /** On the target, attach a set of events, where the events object is a name to function mapping. */\n  public onAll(target: any, events: { [key: string]: (args?: any) => void }, useCapture?: boolean): void {\n    for (let eventName in events) {\n      if (events.hasOwnProperty(eventName)) {\n        this.on(target, eventName, events[eventName], useCapture);\n      }\n    }\n  }\n\n  /**\n   * On the target, attach an event whose handler will be called in the context of the parent\n   * of this instance of EventGroup.\n   */\n  public on(\n    target: any,\n    eventName: string,\n    callback: (args?: any) => void,\n    options?: boolean | AddEventListenerOptions,\n  ): void {\n    if (eventName.indexOf(',') > -1) {\n      let events = eventName.split(/[ ,]+/);\n\n      for (let i = 0; i < events.length; i++) {\n        this.on(target, events[i], callback, options);\n      }\n    } else {\n      let parent = this._parent;\n      let eventRecord: IEventRecord = {\n        target: target,\n        eventName: eventName,\n        parent: parent,\n        callback: callback,\n        options,\n      };\n\n      // Initialize and wire up the record on the target, so that it can call the callback if the event fires.\n      let events = <IEventRecordsByName>(target.__events__ = target.__events__ || {});\n      events[eventName] =\n        events[eventName] ||\n        <IEventRecordList>{\n          count: 0,\n        };\n      events[eventName][this._id] = events[eventName][this._id] || [];\n      (<IEventRecord[]>events[eventName][this._id]).push(eventRecord);\n      events[eventName].count++;\n\n      if (EventGroup._isElement(target)) {\n        let processElementEvent = (...args: any[]) => {\n          if (this._isDisposed) {\n            return;\n          }\n\n          let result;\n          try {\n            result = callback.apply(parent, args);\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore  -- FIXME: strictBindCallApply error - https://github.com/microsoft/fluentui/issues/17331\n            if (result === false && args[0]) {\n              let e = args[0];\n\n              if (e.preventDefault) {\n                e.preventDefault();\n              }\n\n              if (e.stopPropagation) {\n                e.stopPropagation();\n              }\n\n              e.cancelBubble = true;\n            }\n          } catch (e) {\n            // ignore\n          }\n\n          return result;\n        };\n\n        eventRecord.elementCallback = processElementEvent;\n\n        if (target.addEventListener) {\n          (<EventTarget>target).addEventListener(eventName, processElementEvent, options);\n        } else if (target.attachEvent) {\n          // IE8\n          target.attachEvent('on' + eventName, processElementEvent);\n        }\n      } else {\n        let processObjectEvent = (...args: any[]) => {\n          if (this._isDisposed) {\n            return;\n          }\n\n          return callback.apply(parent, args);\n        };\n\n        eventRecord.objectCallback = processObjectEvent;\n      }\n\n      // Remember the record locally, so that it can be removed.\n      this._eventRecords.push(eventRecord);\n    }\n  }\n\n  public off(\n    target?: any,\n    eventName?: string,\n    callback?: (args?: any) => void,\n    options?: boolean | AddEventListenerOptions,\n  ): void {\n    for (let i = 0; i < this._eventRecords.length; i++) {\n      let eventRecord = this._eventRecords[i];\n      if (\n        (!target || target === eventRecord.target) &&\n        (!eventName || eventName === eventRecord.eventName) &&\n        (!callback || callback === eventRecord.callback) &&\n        (typeof options !== 'boolean' || options === eventRecord.options)\n      ) {\n        let events = <IEventRecordsByName>eventRecord.target.__events__;\n        let targetArrayLookup = events[eventRecord.eventName];\n        let targetArray = targetArrayLookup ? <IEventRecord[]>targetArrayLookup[this._id] : null;\n\n        // We may have already target's entries, so check for null.\n        if (targetArray) {\n          if (targetArray.length === 1 || !callback) {\n            targetArrayLookup.count -= targetArray.length;\n            delete events[eventRecord.eventName][this._id];\n          } else {\n            targetArrayLookup.count--;\n            targetArray.splice(targetArray.indexOf(eventRecord), 1);\n          }\n\n          if (!targetArrayLookup.count) {\n            delete events[eventRecord.eventName];\n          }\n        }\n\n        if (eventRecord.elementCallback) {\n          if (eventRecord.target.removeEventListener) {\n            eventRecord.target.removeEventListener(\n              eventRecord.eventName,\n              eventRecord.elementCallback,\n              eventRecord.options,\n            );\n          } else if (eventRecord.target.detachEvent) {\n            // IE8\n            eventRecord.target.detachEvent('on' + eventRecord.eventName, eventRecord.elementCallback);\n          }\n        }\n\n        this._eventRecords.splice(i--, 1);\n      }\n    }\n  }\n\n  /** Trigger the given event in the context of this instance of EventGroup. */\n  public raise(eventName: string, eventArgs?: any, bubbleEvent?: boolean): boolean | undefined {\n    return EventGroup.raise(this._parent, eventName, eventArgs, bubbleEvent);\n  }\n\n  /** Declare an event as being supported by this instance of EventGroup. */\n  public declare(event: string | string[]): void {\n    let declaredEvents = (this._parent.__declaredEvents = this._parent.__declaredEvents || {});\n\n    if (typeof event === 'string') {\n      declaredEvents[event] = true;\n    } else {\n      for (let i = 0; i < event.length; i++) {\n        declaredEvents[event[i]] = true;\n      }\n    }\n  }\n}\n","import * as React from 'react';\nimport { Async } from './Async';\nimport { EventGroup } from './EventGroup';\nimport { warnConditionallyRequiredProps } from './warn/warnConditionallyRequiredProps';\nimport { warnMutuallyExclusive } from './warn/warnMutuallyExclusive';\nimport { warnDeprecations } from './warn/warnDeprecations';\nimport type { IDisposable } from './IDisposable';\nimport type { ISettingsMap } from './warn/warn';\nimport type { IRefObject } from './createRef';\nimport type { IBaseProps } from './BaseComponent.types';\n\n/**\n * BaseComponent class, which provides basic helpers for all components.\n *\n * @public\n * {@docCategory BaseComponent}\n *\n * @deprecated Do not use. We are moving away from class component.\n */\nexport class BaseComponent<TProps extends IBaseProps = {}, TState = {}> extends React.Component<TProps, TState> {\n  /**\n   * @deprecated Use React's error boundaries instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public static onError: (errorMessage?: string, ex?: any) => void;\n\n  /**\n   * Controls whether the componentRef prop will be resolved by this component instance. If you are\n   * implementing a passthrough (higher-order component), you would set this to false and pass through\n   * the props to the inner component, allowing it to resolve the componentRef.\n   */\n  protected _skipComponentRefResolution!: boolean;\n\n  private __async!: Async;\n  private __events!: EventGroup;\n  private __disposables!: IDisposable[] | null;\n  private __resolves!: { [name: string]: (ref: React.ReactNode) => React.ReactNode };\n  private __className!: string;\n\n  /**\n   * BaseComponent constructor\n   * @param props - The props for the component.\n   * @param context - The context for the component.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(props: TProps, context?: any) {\n    super(props, context);\n\n    // eslint-disable-next-line deprecation/deprecation\n    _makeAllSafe(this, BaseComponent.prototype, [\n      'componentDidMount',\n      'shouldComponentUpdate',\n      'getSnapshotBeforeUpdate',\n      'render',\n      'componentDidUpdate',\n      'componentWillUnmount',\n    ]);\n  }\n\n  /**\n   * When the component receives props, make sure the componentRef is updated.\n   */\n  public componentDidUpdate(prevProps: TProps, prevState: TState): void {\n    this._updateComponentRef(prevProps, this.props);\n  }\n\n  /**\n   * When the component has mounted, update the componentRef.\n   */\n  public componentDidMount(): void {\n    this._setComponentRef(this.props.componentRef, this);\n  }\n\n  /**\n   * If we have disposables, dispose them automatically on unmount.\n   */\n  public componentWillUnmount(): void {\n    this._setComponentRef(this.props.componentRef, null);\n\n    if (this.__disposables) {\n      for (let i = 0, len = this._disposables.length; i < len; i++) {\n        let disposable = this.__disposables[i];\n\n        if (disposable.dispose) {\n          disposable.dispose();\n        }\n      }\n      this.__disposables = null;\n    }\n  }\n\n  /**\n   * Gets the object's class name.\n   */\n  public get className(): string {\n    if (!this.__className) {\n      let funcNameRegex = /function (.{1,})\\(/;\n      let results = funcNameRegex.exec(this.constructor.toString());\n\n      this.__className = results && results.length > 1 ? results[1] : '';\n    }\n\n    return this.__className;\n  }\n\n  /**\n   * Allows subclasses to push things to this._disposables to be auto disposed.\n   */\n  protected get _disposables(): IDisposable[] {\n    if (!this.__disposables) {\n      this.__disposables = [];\n    }\n    return this.__disposables;\n  }\n\n  /**\n   * Gets the async instance associated with the component, created on demand. The async instance gives\n   * subclasses a way to execute setTimeout/setInterval async calls safely, where the callbacks\n   * will be cleared/ignored automatically after unmounting. The helpers within the async object also\n   * preserve the this pointer so that you don't need to \"bind\" the callbacks.\n   */\n  protected get _async(): Async {\n    if (!this.__async) {\n      this.__async = new Async(this);\n      this._disposables.push(this.__async);\n    }\n\n    return this.__async;\n  }\n\n  /**\n   * Gets the event group instance assocaited with the component, created on demand. The event instance\n   * provides on/off methods for listening to DOM (or regular javascript object) events. The event callbacks\n   * will be automatically disconnected after unmounting. The helpers within the events object also\n   * preserve the this reference so that you don't need to \"bind\" the callbacks.\n   */\n  protected get _events(): EventGroup {\n    if (!this.__events) {\n      this.__events = new EventGroup(this);\n      this._disposables.push(this.__events);\n    }\n\n    return this.__events;\n  }\n\n  /**\n   * Helper to return a memoized ref resolver function.\n   * @param refName - Name of the member to assign the ref to.\n   * @returns A function instance keyed from the given refname.\n   * @deprecated Use `createRef` from React.createRef.\n   */\n  protected _resolveRef(refName: string): (ref: React.ReactNode) => React.ReactNode {\n    if (!this.__resolves) {\n      this.__resolves = {};\n    }\n\n    if (!this.__resolves[refName]) {\n      this.__resolves[refName] = (ref: React.ReactNode) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return ((this as any)[refName] = ref);\n      };\n    }\n\n    return this.__resolves[refName];\n  }\n\n  /**\n   * Updates the componentRef (by calling it with \"this\" when necessary.)\n   */\n  protected _updateComponentRef(currentProps: IBaseProps, newProps: IBaseProps = {}): void {\n    // currentProps *should* always be defined, but verify that just in case a subclass is manually\n    // calling a lifecycle method with no parameters (which has happened) or other odd usage.\n    if (currentProps && newProps && currentProps.componentRef !== newProps.componentRef) {\n      this._setComponentRef(currentProps.componentRef, null);\n      this._setComponentRef(newProps.componentRef, this);\n    }\n  }\n\n  /**\n   * Warns when a deprecated props are being used.\n   *\n   * @param deprecationMap - The map of deprecations, where key is the prop name and the value is\n   * either null or a replacement prop name.\n   */\n  protected _warnDeprecations(deprecationMap: ISettingsMap<TProps>): void {\n    warnDeprecations(this.className, this.props, deprecationMap);\n  }\n\n  /**\n   * Warns when props which are mutually exclusive with each other are both used.\n   *\n   * @param mutuallyExclusiveMap - The map of mutually exclusive props.\n   */\n  protected _warnMutuallyExclusive(mutuallyExclusiveMap: ISettingsMap<TProps>): void {\n    warnMutuallyExclusive(this.className, this.props, mutuallyExclusiveMap);\n  }\n\n  /**\n   * Warns when props are required if a condition is met.\n   *\n   * @param requiredProps - The name of the props that are required when the condition is met.\n   * @param conditionalPropName - The name of the prop that the condition is based on.\n   * @param condition - Whether the condition is met.\n   */\n  protected _warnConditionallyRequiredProps(\n    requiredProps: string[],\n    conditionalPropName: string,\n    condition: boolean,\n  ): void {\n    warnConditionallyRequiredProps(this.className, this.props, requiredProps, conditionalPropName, condition);\n  }\n\n  private _setComponentRef<TRefInterface>(\n    ref: IRefObject<TRefInterface> | undefined,\n    value: TRefInterface | null,\n  ): void {\n    if (!this._skipComponentRefResolution && ref) {\n      if (typeof ref === 'function') {\n        ref(value);\n      }\n\n      if (typeof ref === 'object') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (ref as any).current = value;\n      }\n    }\n  }\n}\n\n/**\n * Helper to override a given method with a wrapper method that can try/catch the original, but also\n * ensures that the BaseComponent's methods are called before the subclass's. This ensures that\n * componentWillUnmount in the base is called and that things in the _disposables array are disposed.\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction _makeAllSafe(obj: BaseComponent<{}, {}>, prototype: Object, methodNames: string[]): void {\n  for (let i = 0, len = methodNames.length; i < len; i++) {\n    _makeSafe(obj, prototype, methodNames[i]);\n  }\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction _makeSafe(obj: BaseComponent<{}, {}>, prototype: Object, methodName: string): void {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  let classMethod = (obj as any)[methodName];\n  let prototypeMethod = (prototype as any)[methodName];\n\n  if (classMethod || prototypeMethod) {\n    (obj as any)[methodName] = function (...args: any[]): any {\n      /* eslint-enable @typescript-eslint/no-explicit-any */\n      let retVal;\n\n      if (prototypeMethod) {\n        retVal = prototypeMethod.apply(this, args);\n      }\n      if (classMethod !== prototypeMethod) {\n        retVal = classMethod.apply(this, args);\n      }\n\n      return retVal;\n    };\n  }\n}\n\n/**\n * Simple constant function for returning null, used to render empty templates in JSX.\n *\n * @public\n */\nexport function nullRender(): JSX.Element | null {\n  return null;\n}\n","import { KeyCodes } from './KeyCodes';\n\nconst DirectionalKeyCodes: { [key: number]: number } = {\n  [KeyCodes.up]: 1,\n  [KeyCodes.down]: 1,\n  [KeyCodes.left]: 1,\n  [KeyCodes.right]: 1,\n  [KeyCodes.home]: 1,\n  [KeyCodes.end]: 1,\n  [KeyCodes.tab]: 1,\n  [KeyCodes.pageUp]: 1,\n  [KeyCodes.pageDown]: 1,\n};\n\n/**\n * Returns true if the keycode is a directional keyboard key.\n */\nexport function isDirectionalKeyCode(which: number): boolean {\n  return !!DirectionalKeyCodes[which];\n}\n\n/**\n * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to add global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\nexport function addDirectionalKeyCode(which: number): void {\n  DirectionalKeyCodes[which] = 1;\n}\n","import * as React from 'react';\nimport { getWindow } from './dom/getWindow';\nimport { isDirectionalKeyCode } from './keyboard';\nimport { setFocusVisibility } from './setFocusVisibility';\n\n/**\n * Counter for mounted component that uses focus rectangle.\n * We want to cleanup the listners before last component that uses focus rectangle unmounts.\n */\nlet mountCounters = new WeakMap<Window, number>();\n\nfunction setMountCounters(key: Window, delta: number): number {\n  let newValue;\n  const currValue = mountCounters.get(key);\n  if (currValue) {\n    newValue = currValue + delta;\n  } else {\n    newValue = 1;\n  }\n\n  mountCounters.set(key, newValue);\n  return newValue;\n}\n\ntype AppWindow = (Window & { FabricConfig?: { disableFocusRects?: boolean } }) | undefined;\n\n/**\n * Initializes the logic which:\n *\n * 1. Subscribes keydown and mousedown events. (It will only do it once per window,\n *    so it's safe to call this method multiple times.)\n * 2. When the user presses directional keyboard keys, adds the 'ms-Fabric--isFocusVisible' classname\n *    to the document body, removes the 'ms-Fabric-isFocusHidden' classname.\n * 3. When the user clicks a mouse button, adds the 'ms-Fabric-isFocusHidden' classname to the\n *    document body, removes the 'ms-Fabric--isFocusVisible' classname.\n *\n * This logic allows components on the page to conditionally render focus treatments based on\n * the existence of global classnames, which simplifies logic overall.\n *\n * @param rootRef - A Ref object. Focus rectangle can be applied on itself and all its children.\n */\nexport function useFocusRects(rootRef?: React.RefObject<HTMLElement>): void {\n  React.useEffect(() => {\n    const win = getWindow(rootRef?.current) as AppWindow;\n\n    if (!win || win.FabricConfig?.disableFocusRects === true) {\n      return undefined;\n    }\n\n    let count = setMountCounters(win, 1);\n    if (count <= 1) {\n      win.addEventListener('mousedown', _onMouseDown, true);\n      win.addEventListener('pointerdown', _onPointerDown, true);\n      win.addEventListener('keydown', _onKeyDown, true);\n    }\n\n    return () => {\n      if (!win || win.FabricConfig?.disableFocusRects === true) {\n        return;\n      }\n\n      count = setMountCounters(win, -1);\n      if (count === 0) {\n        win.removeEventListener('mousedown', _onMouseDown, true);\n        win.removeEventListener('pointerdown', _onPointerDown, true);\n        win.removeEventListener('keydown', _onKeyDown, true);\n      }\n    };\n  }, [rootRef]);\n}\n\n/**\n * Function Component wrapper which enables calling `useFocusRects` hook.\n * Renders nothing.\n */\nexport const FocusRects: React.FunctionComponent<{ rootRef?: React.RefObject<HTMLElement> }> = props => {\n  useFocusRects(props.rootRef);\n  return null;\n};\n\nfunction _onMouseDown(ev: MouseEvent): void {\n  setFocusVisibility(false, ev.target as Element);\n}\n\nfunction _onPointerDown(ev: PointerEvent): void {\n  if (ev.pointerType !== 'mouse') {\n    setFocusVisibility(false, ev.target as Element);\n  }\n}\n\nfunction _onKeyDown(ev: KeyboardEvent): void {\n  // eslint-disable-next-line deprecation/deprecation\n  if (isDirectionalKeyCode(ev.which)) {\n    setFocusVisibility(true, ev.target as Element);\n  }\n}\n","/**\n * ARIA helper to concatenate attributes, returning undefined if all attributes\n * are undefined. (Empty strings are not a valid ARIA attribute value.)\n *\n * @param ariaAttributes - ARIA attributes to merge\n */\nexport function mergeAriaAttributeValues(...ariaAttributes: (string | undefined | false)[]): string | undefined {\n  const mergedAttribute = ariaAttributes\n    .filter((arg: string | undefined | false) => arg)\n    .join(' ')\n    .trim();\n  return mergedAttribute === '' ? undefined : mergedAttribute;\n}\n","import * as React from 'react';\nimport { Image } from '../Image/Image';\nimport { css, getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { classNames, MS_ICON } from './Icon.styles';\nimport type { IImageIconProps } from './Icon.types';\n\n/**\n * Fast icon component which only supports images (not font glyphs) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport const ImageIcon: React.FunctionComponent<IImageIconProps> = props => {\n  const { className, imageProps } = props;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, htmlElementProperties, [\n    'aria-label',\n    'aria-labelledby',\n    'title',\n    'aria-describedby',\n  ]);\n  const altText = imageProps.alt || props['aria-label'];\n  const hasName =\n    altText ||\n    props['aria-labelledby'] ||\n    props.title ||\n    imageProps['aria-label'] ||\n    imageProps['aria-labelledby'] ||\n    imageProps.title;\n\n  // move naming or describing attributes from the container (where they are invalid) to the image\n  const imageNameProps = {\n    'aria-labelledby': props['aria-labelledby'],\n    'aria-describedby': props['aria-describedby'],\n    title: props.title,\n  };\n\n  const containerProps = hasName\n    ? {}\n    : {\n        'aria-hidden': true,\n      };\n\n  return (\n    <div {...containerProps} {...nativeProps} className={css(MS_ICON, classNames.root, classNames.image, className)}>\n      <Image {...imageNameProps} {...imageProps} alt={hasName ? altText : ''} />\n    </div>\n  );\n};\n","export const DirectionalHint = {\n  /**\n   * Appear above the target element, with the left edges of the callout and target aligning.\n   */\n  topLeftEdge: 0 as 0,\n\n  /**\n   * Appear above the target element, with the centers of the callout and target aligning.\n   */\n  topCenter: 1 as 1,\n\n  /**\n   * Appear above the target element, with the right edges of the callout and target aligning.\n   */\n  topRightEdge: 2 as 2,\n\n  /**\n   * Appear above the target element, aligning with the target element such that the callout tends toward\n   * the center of the screen.\n   */\n  topAutoEdge: 3 as 3,\n\n  /**\n   * Appear below the target element, with the left edges of the callout and target aligning.\n   */\n  bottomLeftEdge: 4 as 4,\n\n  /**\n   * Appear below the target element, with the centers of the callout and target aligning.\n   */\n  bottomCenter: 5 as 5,\n\n  /**\n   * Appear below the target element, with the right edges of the callout and target aligning.\n   */\n  bottomRightEdge: 6 as 6,\n\n  /**\n   * Appear below the target element, aligning with the target element such that the callout tends toward\n   * the center of the screen.\n   */\n  bottomAutoEdge: 7 as 7,\n\n  /**\n   * Appear to the left of the target element, with the top edges of the callout and target aligning.\n   */\n  leftTopEdge: 8 as 8,\n\n  /**\n   * Appear to the left of the target element, with the centers of the callout and target aligning.\n   */\n  leftCenter: 9 as 9,\n\n  /**\n   * Appear to the left of the target element, with the bottom edges of the callout and target aligning.\n   */\n  leftBottomEdge: 10 as 10,\n\n  /**\n   * Appear to the right of the target element, with the top edges of the callout and target aligning.\n   */\n  rightTopEdge: 11 as 11,\n\n  /**\n   * Appear to the right of the target element, with the centers of the callout and target aligning.\n   */\n  rightCenter: 12 as 12,\n\n  /**\n   * Appear to the right of the target element, with the bottom edges of the callout and target aligning.\n   */\n  rightBottomEdge: 13 as 13,\n};\n\nexport type DirectionalHint = typeof DirectionalHint[keyof typeof DirectionalHint];\n","import { createMemoizer } from '../memoize';\nimport type { IRenderFunction } from '../IRenderFunction';\n\ninterface IRenderFunctionComposer {\n  <TProps>(outer: IRenderFunction<TProps>): (inner: IRenderFunction<TProps>) => IRenderFunction<TProps>;\n}\n\nfunction createComposedRenderFunction<TProps>(\n  outer: IRenderFunction<TProps>,\n): (inner: IRenderFunction<TProps>) => IRenderFunction<TProps> {\n  const outerMemoizer = createMemoizer((inner: IRenderFunction<TProps>) => {\n    const innerMemoizer = createMemoizer((defaultRender: IRenderFunction<TProps>) => {\n      return (innerProps?: TProps) => {\n        return inner(innerProps, defaultRender);\n      };\n    });\n\n    return (outerProps?: TProps, defaultRender?: IRenderFunction<TProps>) => {\n      return outer(outerProps, defaultRender ? innerMemoizer(defaultRender) : inner);\n    };\n  });\n\n  return outerMemoizer;\n}\n\nconst memoizer = createMemoizer<IRenderFunctionComposer>(createComposedRenderFunction);\n\n/**\n * Composes two 'render functions' to produce a final render function that renders\n * the outer function, passing the inner function as 'default render'. The inner function\n * is then passed the original 'default render' prop.\n * @public\n */\nexport function composeRenderFunction<TProps>(\n  outer: IRenderFunction<TProps>,\n  inner: IRenderFunction<TProps>,\n): IRenderFunction<TProps> {\n  return memoizer(outer)(inner);\n}\n","import * as React from 'react';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport type { IFocusZoneProps } from '../../FocusZone';\nimport type { IIconProps } from '../../Icon';\nimport type { ICalloutProps, ICalloutContentStyleProps } from '../../Callout';\nimport type { ITheme, IStyle } from '../../Styling';\nimport type { IButtonStyles } from '../../Button';\nimport type { IRefObject, IBaseProps, IRectangle, IRenderFunction, IStyleFunctionOrObject } from '../../Utilities';\nimport type { IWithResponsiveModeState } from '../../ResponsiveMode';\nimport type { IContextualMenuClassNames, IMenuItemClassNames } from './ContextualMenu.classNames';\nimport type { IVerticalDividerClassNames } from '../Divider/VerticalDivider.types';\nimport type {\n  IContextualMenuItemProps,\n  IContextualMenuRenderItem,\n  IContextualMenuItemStyleProps,\n  IContextualMenuItemRenderFunctions,\n} from './ContextualMenuItem.types';\nimport type { IKeytipProps } from '../../Keytip';\nimport type { Target } from '@fluentui/react-hooks';\nimport type { IPopupRestoreFocusParams } from '../../Popup';\n\nexport { DirectionalHint } from '../../common/DirectionalHint';\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport enum ContextualMenuItemType {\n  Normal = 0,\n  Divider = 1,\n  Header = 2,\n  Section = 3,\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenu {}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuProps\n  extends IBaseProps<IContextualMenu>,\n    React.RefAttributes<HTMLDivElement>,\n    // eslint-disable-next-line deprecation/deprecation\n    IWithResponsiveModeState {\n  /**\n   * Optional callback to access the IContextualMenu interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IContextualMenu>;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IContextualMenuStyleProps, IContextualMenuStyles>;\n\n  /**\n   * Theme provided by higher-order component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional CSS class to apply to the ContextualMenu.\n   */\n  className?: string;\n\n  /**\n   * The target that the ContextualMenu should try to position itself based on.\n   * It can be either an element, a query selector string resolving to a valid element,\n   * or a MouseEvent. If a MouseEvent is given, the origin point of the event will be used.\n   */\n  target?: Target;\n\n  /**\n   * How the menu should be positioned\n   * @defaultvalue DirectionalHint.bottomAutoEdge\n   */\n  directionalHint?: DirectionalHint;\n\n  /**\n   * How the menu should be positioned in RTL layouts.\n   * If not specified, a mirror of `directionalHint` will be used.\n   */\n  directionalHintForRTL?: DirectionalHint;\n\n  /**\n   * The gap between the ContextualMenu and the target\n   * @defaultvalue 0\n   */\n  gapSpace?: number;\n\n  /**\n   * The width of the beak.\n   * @defaultvalue 16\n   */\n  beakWidth?: number;\n\n  /**\n   * If true the context menu will render as the same width as the target element\n   * @defaultvalue false\n   */\n  useTargetWidth?: boolean;\n\n  /**\n   * If true the context menu will have a minimum width equal to the width of the target element\n   * @defaultvalue false\n   */\n  useTargetAsMinWidth?: boolean;\n\n  /**\n   * The bounding rectangle (or callback that returns a rectangle) which the contextual menu can appear in.\n   */\n  bounds?: IRectangle | ((target?: Target, targetWindow?: Window) => IRectangle | undefined);\n\n  /**\n   * If true then the beak is visible. If false it will not be shown.\n   */\n  isBeakVisible?: boolean;\n\n  /**\n   * If true, the menu will be positioned to cover the target.\n   * If false, it will be positioned next to the target.\n   * @defaultvalue false\n   */\n  coverTarget?: boolean;\n\n  /**\n   * If true the positioning logic will prefer to flip edges rather than to nudge the rectangle to fit within bounds,\n   * thus making sure the element aligns perfectly with target's alignment edge\n   */\n  alignTargetEdge?: boolean;\n\n  /**\n   * Menu items to display.\n   */\n  items: IContextualMenuItem[];\n\n  /**\n   * Used as `aria-labelledby` for the menu element inside the callout.\n   */\n  labelElementId?: string;\n\n  /**\n   * Whether to focus on the menu when mounted.\n   * @defaultvalue true\n   */\n  shouldFocusOnMount?: boolean;\n\n  /**\n   * Whether to focus on the contextual menu container (as opposed to the first menu item).\n   *\n   * Avoid using as it breaks the default focus behaviour when using assistive technologies.\n   */\n  shouldFocusOnContainer?: boolean;\n\n  /**\n   * Callback when the ContextualMenu tries to close. If `dismissAll` is true then all\n   * submenus will be dismissed.\n   */\n  onDismiss?: (ev?: Event | React.MouseEvent | React.KeyboardEvent, dismissAll?: boolean) => void;\n\n  /**\n   * Click handler which is invoked if `onClick` is not passed for individual contextual\n   * menu item.\n   * Returning true will dismiss the menu even if `ev.preventDefault()` was called.\n   */\n  onItemClick?: (\n    ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    item?: IContextualMenuItem,\n  ) => boolean | void;\n\n  /**\n   * Whether this menu is a submenu of another menu.\n   */\n  isSubMenu?: boolean;\n\n  /**\n   * ID for the ContextualMenu's root element (inside the callout).\n   * Should be used for `aria-owns` and other such uses, rather than direct reference for programmatic purposes.\n   */\n  id?: string;\n\n  /**\n   * Accessible label for the ContextualMenu's root element (inside the callout).\n   */\n  ariaLabel?: string;\n\n  /**\n   * If true do not render on a new layer. If false render on a new layer.\n   * @defaultvalue false\n   */\n  doNotLayer?: boolean;\n\n  /**\n   * If true the position will not change sides in an attempt to fit the ContextualMenu within bounds.\n   * It will still attempt to align it to whatever bounds are given.\n   * @defaultvalue false\n   */\n  directionalHintFixed?: boolean;\n\n  /**\n   * Callback for when the menu has been opened.\n   */\n  onMenuOpened?: (contextualMenu?: IContextualMenuProps) => void;\n\n  /**\n   * Callback for when the menu is being closed (removing from the DOM).\n   */\n  onMenuDismissed?: (contextualMenu?: IContextualMenuProps) => void;\n\n  /**\n   * Additional custom props for the Callout.\n   */\n  calloutProps?: ICalloutProps;\n\n  /**\n   * Title to be displayed at the top of the menu, above the items.\n   */\n  title?: string;\n\n  /**\n   * Method to provide the classnames to style the contextual menu.\n   * @deprecated Use `styles` instead to leverage mergeStyles API.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  getMenuClassNames?: (theme: ITheme, className?: string) => IContextualMenuClassNames;\n\n  /** Custom render function for a submenu. */\n  onRenderSubMenu?: IRenderFunction<IContextualMenuProps>;\n\n  /**\n   * Method to override the render of the list of menu items.\n   */\n  onRenderMenuList?: IRenderFunction<IContextualMenuListProps>;\n\n  /**\n   * Delay (in milliseconds) to wait before expanding / dismissing a submenu on mouseEnter or mouseLeave\n   */\n  subMenuHoverDelay?: number;\n\n  /**\n   * Custom component to use for rendering individual menu items.\n   * @defaultvalue ContextualMenuItem\n   */\n  contextualMenuItemAs?:\n    | React.ComponentClass<IContextualMenuItemProps>\n    | React.FunctionComponent<IContextualMenuItemProps>;\n\n  /**\n   * Props to pass down to the FocusZone.\n   * NOTE: the default FocusZoneDirection will be used unless a direction\n   * is specified in the focusZoneProps (even if other focusZoneProps are defined)\n   * @defaultvalue \\{ direction: FocusZoneDirection.vertical \\}\n   */\n  focusZoneProps?: IFocusZoneProps;\n\n  /**\n   * Custom component to use for rendering the focus zone (the root).\n   * @defaultValue FocusZone\n   */\n  focusZoneAs?: React.ComponentClass<IFocusZoneProps> | React.FunctionComponent<IFocusZoneProps>;\n\n  /**\n   * If true, renders the ContextualMenu in a hidden state.\n   * Use this flag, rather than rendering a ContextualMenu conditionally based on visibility,\n   * to improve rendering performance when it becomes visible.\n   * Note: When ContextualMenu is hidden its content will not be rendered. It will only render\n   * once the ContextualMenu is visible.\n   */\n  hidden?: boolean;\n\n  /**\n   * If true, the menu will be updated even when `hidden=true`. Note that this will consume\n   * resources to update even when nothing is being shown to the user. This might be helpful if\n   * your updates are small and you want the menu to display quickly when `hidden` is set to false.\n   */\n  shouldUpdateWhenHidden?: boolean;\n\n  /**\n   * If true, the contextual menu will not be updated until focus enters the menu via other means.\n   * This will only result in different behavior when `shouldFocusOnMount = false`.\n   */\n  delayUpdateFocusOnHover?: boolean;\n\n  /**\n   * Called when the component is unmounting, and focus needs to be restored. If this is provided,\n   * focus will not be restored automatically, and you'll need to call `params.originalElement.focus()`.\n   */\n  onRestoreFocus?: (params: IPopupRestoreFocusParams) => void;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuItemRenderProps extends IContextualMenuItem {\n  index: number;\n  focusableElementIndex: number;\n  totalItemCount: number;\n  hasCheckmarks: boolean;\n  hasIcons: boolean;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuListProps {\n  items: IContextualMenuItem[];\n  totalItemCount: number;\n  hasCheckmarks: boolean;\n  hasIcons: boolean;\n  defaultMenuItemRenderer: (item: IContextualMenuItemRenderProps) => React.ReactNode;\n  ariaLabel?: string;\n  labelElementId?: string;\n  role?: string;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuItem {\n  /**\n   * Optional callback to access the IContextualMenuRenderItem interface.\n   * This will get passed down to ContextualMenuItem.\n   */\n  componentRef?: IRefObject<IContextualMenuRenderItem>;\n\n  /**\n   * Unique id to identify the item\n   */\n  key: string;\n\n  /**\n   * Text of the menu item.\n   * If a standard hyphen (-) is passed in, then the item will be rendered as a divider.\n   * If a dash must appear as text, use an emdash (—), figuredash (‒), or minus symbol (−) instead.\n   */\n  text?: string;\n\n  /**\n   * Secondary description for the menu item to display\n   */\n  secondaryText?: string;\n\n  itemType?: ContextualMenuItemType;\n\n  /**\n   * Props for an icon to display next to the item.\n   */\n  iconProps?: IIconProps;\n\n  /**\n   * Custom render function for the menu item icon\n   */\n  onRenderIcon?: IRenderFunction<IContextualMenuItemProps>;\n\n  /**\n   * Props for the Icon used for the chevron.\n   */\n  submenuIconProps?: IIconProps;\n\n  /**\n   * Whether the menu item is disabled\n   * @defaultvalue false\n   */\n  disabled?: boolean;\n\n  /**\n   * If the menu item is a split button, this prop disables purely the primary action of the button.\n   * @defaultvalue false\n   */\n  primaryDisabled?: boolean;\n\n  /**\n   * @deprecated Not used\n   */\n  shortCut?: string;\n\n  /**\n   * Whether or not this menu item can be checked\n   * @defaultvalue false\n   */\n  canCheck?: boolean;\n\n  /**\n   * Whether or not this menu item is currently checked.\n   * @defaultvalue false\n   */\n  checked?: boolean;\n\n  /**\n   * Whether or not this menu item is a splitButton.\n   * @defaultvalue false\n   */\n  split?: boolean;\n\n  /**\n   * Any custom data the developer wishes to associate with the menu item.\n   */\n  data?: any;\n\n  /**\n   * Callback for when the menu item is invoked. If `ev.preventDefault()` is called in `onClick`,\n   * the click will not close the menu.\n   *\n   * Only for ContextualMenu items, returning true will dismiss the menu even if `ev.preventDefault()`\n   * was called (does not apply for button or CommandBar sub-menu items).\n   */\n  onClick?: (\n    ev?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    item?: IContextualMenuItem,\n  ) => boolean | void;\n\n  /**\n   * Navigate to this URL when the menu item is clicked.\n   */\n  href?: string;\n\n  /**\n   * Target window when using `href`.\n   */\n  target?: string;\n\n  /**\n   * Link relation setting when using `href`.\n   * If `target` is `_blank`, `rel` is defaulted to a value to prevent clickjacking.\n   */\n  rel?: string;\n\n  /**\n   * Properties to apply to a submenu to this item.\n   *\n   * The ContextualMenu will provide default values for `target`, `onDismiss`, `isSubMenu`,\n   * `id`, `shouldFocusOnMount`, `directionalHint`, `className`, and `gapSpace`, all of which\n   * can be overridden.\n   */\n  subMenuProps?: IContextualMenuProps;\n\n  /**\n   * Method to provide the classnames to style the individual items inside a menu.\n   * @deprecated Use `styles` prop of `IContextualMenuItemProps` to leverage mergeStyles API.\n   */\n  getItemClassNames?: (\n    theme: ITheme,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    isAnchorLink: boolean,\n    knownIcon: boolean,\n    itemClassName?: string,\n    dividerClassName?: string,\n    iconClassName?: string,\n    subMenuClassName?: string,\n    primaryDisabled?: boolean,\n  ) => // eslint-disable-next-line deprecation/deprecation\n  IMenuItemClassNames;\n\n  /**\n   * Optional IContextualMenuItemProps overrides to customize behaviors such as item styling via `styles`.\n   */\n  itemProps?: Partial<IContextualMenuItemProps>;\n\n  /**\n   * Method to provide the classnames to style the Vertical Divider of a split button inside a menu.\n   * Default value is the `getSplitButtonVerticalDividerClassNames` func defined in `ContextualMenu.classnames.ts`.\n   * @defaultvalue getSplitButtonVerticalDividerClassNames\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  getSplitButtonVerticalDividerClassNames?: (theme: ITheme) => IVerticalDividerClassNames;\n\n  /**\n   * Properties to apply to render this item as a section.\n   * This prop is mutually exclusive with `subMenuProps`.\n   */\n  sectionProps?: IContextualMenuSection;\n\n  /**\n   * Additional CSS class to apply to the menu item.\n   */\n  className?: string;\n\n  /**\n   * Additional styles to apply to the menu item\n   * @deprecated Use `styles` instead to leverage mergeStyles API.\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Custom accessible label for the element.\n   * If no override is specified, the `aria-label` attribute will contain the item name.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Title (tooltip) text displayed when hovering over an item.\n   */\n  title?: string;\n\n  /**\n   * Method to custom render this menu item.\n   * For keyboard accessibility, the top-level rendered item should be a focusable element\n   * (like an anchor or a button) or have the `data-is-focusable` property set to true.\n   *\n   * @param item - Item to render. Will typically be of type `IContextualMenuItem`.\n   * (When rendering a command bar item, will be `ICommandBarItemProps`.)\n   * @param dismissMenu - Function to dismiss the menu. Can be used to ensure that a custom menu\n   * item click dismisses the menu. (Will be undefined if rendering a command bar item.)\n   */\n  onRender?: (item: any, dismissMenu: (ev?: any, dismissAll?: boolean) => void) => React.ReactNode;\n\n  /**\n   * Method to customize sub-components rendering of this menu item.\n   *\n   * @param props - Props used to pass into render functions\n   * @param defaultRenders - Default render functions that renders default sub-components\n   */\n  onRenderContent?: (\n    props: IContextualMenuItemProps,\n    defaultRenders: IContextualMenuItemRenderFunctions,\n  ) => React.ReactNode;\n\n  /**\n   * A function to be executed on mouse down. This is executed before an `onClick` event and can\n   * be used to interrupt native on click events as well. The click event should still handle\n   * the commands. This should only be used in special cases when react and non-react are mixed.\n   */\n  onMouseDown?: (item: IContextualMenuItem, event: React.MouseEvent<HTMLElement>) => void;\n\n  /**\n   * Optional override for the menu button's role.\n   * @default `menuitem` or `menuitemcheckbox`\n   */\n  role?: string;\n\n  /**\n   * When rendering a custom menu component that is passed in, the component might also be a list of\n   * elements. We want to keep track of the correct index our menu is using based off of\n   * the length of the custom list. It is up to the user to increment the count for their list.\n   */\n  customOnRenderListLength?: number;\n\n  /**\n   * Keytip for this contextual menu item\n   */\n  keytipProps?: IKeytipProps;\n\n  /**\n   * @deprecated Use subMenuProps.items instead.\n   */\n  items?: IContextualMenuItem[];\n\n  /**\n   * Any additional properties to use when custom rendering menu items.\n   */\n  [propertyName: string]: any;\n\n  /**\n   * Detailed description of the menu item for the benefit of screen readers.\n   */\n  ariaDescription?: string;\n\n  /**\n   * ID of the element that contains additional detailed descriptive information for screen readers\n   */\n  ariaDescribedBy?: string;\n\n  /**\n   * @deprecated No longer used. All contextual menu items are now focusable when disabled.\n   */\n  inactive?: boolean;\n\n  /**\n   * Text of the menu item.\n   * @deprecated Use `text` instead.\n   */\n  name?: string;\n\n  /**\n   * Flag which indicates that, when the item is clicked, the 'target' for the click event should be\n   * overridden to reflect the launch target from the root menu.\n   * This avoids a situation where the 'target' of the event may wind up detached from the DOM\n   * when the menu is dismissed in response to the click.\n   */\n  preferMenuTargetAsEventTarget?: boolean;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuSection extends React.ClassAttributes<any> {\n  /**\n   * The items to include inside the section.\n   */\n  items: IContextualMenuItem[];\n\n  /**\n   * The optional section title.\n   */\n  title?: string | IContextualMenuItem;\n\n  /**\n   * If set to true, the section will display a divider at the top of the section.\n   */\n  topDivider?: boolean;\n\n  /**\n   * If set to true, the section will display a divider at the bottom of the section.\n   */\n  bottomDivider?: boolean;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IMenuItemStyles extends IButtonStyles {\n  /**\n   * Styles for a menu item that is an anchor link.\n   */\n  item?: IStyle;\n\n  /**\n   * Styles for the content inside the button/link of the menuItem.\n   */\n  linkContent?: IStyle;\n\n  /**\n   * Styles for a menu item that is an anchor link.\n   */\n  anchorLink?: IStyle;\n\n  /**\n   * Default icon color style for known icons.\n   */\n  iconColor?: IStyle;\n\n  /**\n   * Default style for checkmark icons.\n   */\n  checkmarkIcon?: IStyle;\n\n  /**\n   * Styles for the submenu icon of a menu item.\n   */\n  subMenuIcon?: IStyle;\n\n  /**\n   * Styles for a divider item of a ContextualMenu.\n   */\n  divider?: IStyle;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuStyleProps {\n  theme: ITheme;\n\n  className?: string;\n\n  // Insert ContextualMenu style props below\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuStyles {\n  /**\n   * Style override for the contextual menu title.\n   */\n  title: IStyle;\n\n  /**\n   * Style for the container which parents all menu items.\n   */\n  container: IStyle;\n\n  /**\n   * Base styles for the root element of all ContextualMenus.\n   */\n  root: IStyle;\n\n  /**\n   * Styles for the header item of a ContextualMenu\n   */\n  header: IStyle;\n\n  /**\n   * Styles for the list that contains all menuItems.\n   */\n  list: IStyle;\n\n  /**\n   * SubComponent styles.\n   */\n  subComponentStyles: IContextualMenuSubComponentStyles;\n}\n\n/**\n * {@docCategory ContextualMenu}\n */\nexport interface IContextualMenuSubComponentStyles {\n  /** Styles for the callout that hosts the ContextualMenu options. */\n  callout: IStyleFunctionOrObject<ICalloutContentStyleProps, any>;\n\n  /** Styles for each menu item. */\n  menuItem: IStyleFunctionOrObject<IContextualMenuItemStyleProps, any>;\n}\n","import * as React from 'react';\nimport type { IRefObject, Point } from '@fluentui/utilities';\n\n/**\n * FocusZone component class interface.\n * {@docCategory FocusZone}\n */\nexport interface IFocusZone {\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even\n   * if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focus(forceIntoFirstElement?: boolean): boolean;\n\n  /**\n   * Sets focus to the last tabbable item in the zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusLast(): boolean;\n\n  /**\n   * Sets focus to a specific child element within the zone. This can be used in conjunction with\n   * shouldReceiveFocus to create delayed focus scenarios (like animate the scroll position to the correct\n   * location and then focus.)\n   * @param childElement - The child element within the zone to focus.\n   * @param forceAlignment - If true, focus alignment will be set according to the element provided.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusElement(childElement?: HTMLElement, forceAlignment?: boolean): boolean;\n\n  /**\n   * Forces horizontal alignment in the context of vertical arrowing to use specific point as the reference, rather\n   * than a center based on the last horizontal motion.\n   * @param point - the new reference point.\n   */\n  setFocusAlignment(point: Point): void;\n}\n\n/**\n * FocusZone component props.\n * {@docCategory FocusZone}\n */\nexport interface IFocusZoneProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * Optional callback to access the IFocusZone interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IFocusZone>;\n\n  /**\n   * Optional callback to access the root DOM element.\n   * @deprecated Temporary solution which will be replaced with ref in the V8 release.\n   */\n  elementRef?: React.Ref<HTMLElement>;\n\n  /**\n   * Additional class name to provide on the root element, in addition to the ms-FocusZone class.\n   */\n  className?: string;\n\n  /**\n   * Defines which arrows to react to.\n   * @defaultvalue FocusZoneDirection.bidirectional\n   */\n  direction?: FocusZoneDirection;\n\n  /**\n   * Optionally defines the initial tabbable element inside the FocusZone.\n   * If a string is passed then it is treated as a selector for identifying the initial tabbable element.\n   * If a function is passed then it uses the root element as a parameter to return the initial tabbable element.\n   */\n  defaultTabbableElement?: string | ((root: HTMLElement) => HTMLElement);\n\n  /**\n   * Optionally provide a selector for identifying the initial active element.\n   * @deprecated Use `defaultTabbableElement` instead.\n   */\n  defaultActiveElement?: string;\n\n  /**\n   * Determines if a default tabbable element should be force focused on FocusZone mount.\n   * @default false\n   */\n  shouldFocusOnMount?: boolean;\n\n  /**\n   * If set, the FocusZone will not be tabbable and keyboard navigation will be disabled.\n   * This does not affect disabled attribute of any child.\n   */\n  disabled?: boolean;\n\n  /**\n   * Element type the root element will use. Default is \"div\".\n   * @deprecated Use `as` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  elementType?: any /* TODO should be `keyof React.ReactHTML`, tracking with https://github.com/Microsoft/TypeScript/issues/30050 */;\n\n  /**\n   * A component that should be used as the root element of the FocusZone component.\n   */\n  as?: React.ElementType;\n\n  /**\n   * If set, will cycle to the beginning of the targets once the user navigates to the\n   * next target while at the end, and to the end when navigate to the previous at the beginning.\n   */\n  isCircularNavigation?: boolean;\n\n  /**\n   * If provided, this callback will be executed on keypresses to determine if the user\n   * intends to navigate into the inner zone. Returning true will ask the first inner zone to\n   * set focus.\n   * @deprecated Use `shouldEnterInnerZone` instead.\n   */\n  isInnerZoneKeystroke?: (ev: React.KeyboardEvent<HTMLElement>) => boolean;\n\n  /**\n   * Callback function that will be executed on keypresses to determine if the user intends to navigate into\n   * the inner (nested) zone. Returning true will ask the first inner zone to set focus.\n   */\n  shouldEnterInnerZone?: (ev: React.KeyboardEvent<HTMLElement>) => boolean;\n\n  /**\n   * Sets the aria-labelledby attribute.\n   * @deprecated Directly use the `aria-labelledby` attribute instead\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * Sets the aria-describedby attribute.\n   * @deprecated Directly use the `aria-describedby` attribute instead\n   */\n  ariaDescribedBy?: string;\n\n  /**\n   * Callback for when one of immediate children elements gets active by getting focused\n   * or by having one of its respective children elements focused.\n   */\n  onActiveElementChanged?: (element?: HTMLElement, ev?: React.FocusEvent<HTMLElement>) => void;\n\n  /**\n   * @deprecated Div props provided to the FocusZone will be mixed into the root element.\n   * Deprecated at v1.12.1.\n   */\n  rootProps?: React.HTMLAttributes<HTMLDivElement>;\n\n  /**\n   * Callback method for determining if focus should indeed be set on the given element.\n   * @param element - The child element within the zone to focus.\n   * @returns True if focus should be set to the given element, false to avoid setting focus.\n   * @deprecated Use `shouldReceiveFocus` instead.\n   */\n  onBeforeFocus?: (childElement?: HTMLElement) => boolean;\n\n  /**\n   * Callback method for determining if focus should indeed be set on the given element.\n   * @param element - The child element within the zone to focus.\n   * @returns True if focus should be set to the given element, false to avoid setting focus.\n   */\n  shouldReceiveFocus?: (childElement?: HTMLElement) => boolean;\n\n  /** Allows focus to park on root when focus is in the `FocusZone` at render time. */\n  allowFocusRoot?: boolean;\n\n  /**\n   * Allows tab key to be handled to tab through a list of items in the focus zone,\n   * an unfortunate side effect is that users will not be able to tab out of the focus zone\n   * and have to hit escape or some other key.\n   * @deprecated Use `handleTabKey` instead.\n   *\n   */\n  allowTabKey?: boolean;\n\n  /**\n   * Allows tab key to be handled to tab through a list of items in the focus zone,\n   * an unfortunate side effect is that users will not be able to tab out of the focus zone\n   * and have to hit escape or some other key.\n   */\n  handleTabKey?: FocusZoneTabbableElements;\n\n  /**\n   * If true and FocusZone's root element (container) receives focus, the focus will land either on the\n   * defaultTabbableElement (if set) or on the first tabbable element of this FocusZone.\n   * Usually a case for nested focus zones, when the nested focus zone's container is a focusable element.\n   */\n  shouldFocusInnerElementWhenReceivedFocus?: boolean;\n\n  /**\n   * If true and TAB key is not handled by FocusZone, resets current active element to null value.\n   * For example, when roving index is not desirable and focus should always reset to the default tabbable element.\n   */\n  shouldResetActiveElementWhenTabFromZone?: boolean;\n\n  /**\n   * Determines whether the FocusZone will walk up the DOM trying to invoke click callbacks on focusable elements on\n   * Enter and Space keydowns to ensure accessibility for tags that don't guarantee this behavior.\n   * @defaultvalue true\n   */\n  shouldRaiseClicks?: boolean;\n\n  /**\n   * Relates to `shouldRaiseClicks`.\n   * Allows the click event raising for the \"Enter\" key to be set independently from `shouldRaiseClicks`.\n   * Inherits the value of `shouldRaiseClicks` if not set explicitly.\n   */\n  shouldRaiseClicksOnEnter?: boolean;\n\n  /**\n   * Relates to `shouldRaiseClicks`.\n   * Allows the click event raising for the \"Space\" key to be set independently from `shouldRaiseClicks`.\n   * Inherits the value of `shouldRaiseClicks` if not set explicitly.\n   */\n  shouldRaiseClicksOnSpace?: boolean;\n\n  /**\n   * A callback method to determine if the input element should lose focus on arrow keys\n   *  @param inputElement - The input element which is to loose focus.\n   *  @returns True if input element should loose focus or false otherwise.\n   */\n  shouldInputLoseFocusOnArrowKey?: (inputElement: HTMLInputElement) => boolean;\n\n  /**\n   * Determines whether to disable the paging support for Page Up and Page Down keyboard scenarios.\n   * @defaultvalue false\n   */\n  pagingSupportDisabled?: boolean;\n\n  /**\n   * Determines whether to check for data-no-horizontal-wrap or data-no-vertical-wrap attributes\n   * when determining how to move focus\n   * @defaultvalue false\n   */\n  checkForNoWrap?: boolean;\n\n  /**\n   * Whether the FocusZone should allow focus events to propagate past the FocusZone.\n   * @deprecated Use `stopFocusPropagation` instead.\n   */\n  doNotAllowFocusEventToPropagate?: boolean;\n\n  /**\n   * Whether the FocusZone should allow focus events to propagate past the FocusZone.\n   */\n  stopFocusPropagation?: boolean;\n\n  /**\n   * Callback to notify creators that focus has been set on the FocusZone\n   * @deprecated Use `onFocus` instead.\n   */\n  onFocusNotification?: () => void;\n\n  /**\n   * Callback called when \"focus\" event triggered in FocusZone.\n   * @param event - React's original FocusEvent.\n   */\n  onFocus?: (event: React.FocusEvent<HTMLElement>) => void;\n\n  /**\n   * If true, FocusZone prevents the default behavior of Keyboard events when changing focus between elements.\n   * @defaultvalue false\n   */\n  preventDefaultWhenHandled?: boolean;\n\n  /**\n   * If true, prevents the FocusZone from attempting to restore the focus to the inner element when the focus is on the\n   * root element after componentDidUpdate.\n   * @defaultvalue false\n   */\n  preventFocusRestoration?: boolean;\n}\n/**\n * {@docCategory FocusZone}\n */\nexport const FocusZoneTabbableElements = {\n  /** Tabbing is not allowed */\n  none: 0 as 0,\n\n  /** All tabbing action is allowed */\n  all: 1 as 1,\n\n  /** Tabbing is allowed only on input elements */\n  inputOnly: 2 as 2,\n};\n\n/**\n * {@docCategory FocusZone}\n */\nexport type FocusZoneTabbableElements = typeof FocusZoneTabbableElements[keyof typeof FocusZoneTabbableElements];\n\n/**\n * {@docCategory FocusZone}\n */\nexport enum FocusZoneDirection {\n  /** Only react to up/down arrows. */\n  vertical = 0,\n\n  /** Only react to left/right arrows. */\n  horizontal = 1,\n\n  /** React to all arrows. */\n  bidirectional = 2,\n\n  /**\n   * React to all arrows. Navigate next item in DOM on right/down arrow keys and previous - left/up arrow keys.\n   * Right and Left arrow keys are swapped in RTL mode.\n   */\n  domOrder = 3,\n}\n","import { getParent } from './getParent';\n/**\n * Determines whether or not a parent element contains a given child element.\n * If `allowVirtualParents` is true, this method may return `true` if the child\n * has the parent in its virtual element hierarchy.\n *\n * @public\n */\nexport function elementContains(\n  parent: HTMLElement | null,\n  child: HTMLElement | null,\n  allowVirtualParents: boolean = true,\n): boolean {\n  let isContained = false;\n\n  if (parent && child) {\n    if (allowVirtualParents) {\n      if (parent === child) {\n        isContained = true;\n      } else {\n        isContained = false;\n\n        while (child) {\n          const nextParent: HTMLElement | null = getParent(child);\n\n          if (nextParent === parent) {\n            isContained = true;\n            break;\n          }\n\n          child = nextParent;\n        }\n      }\n    } else if (parent.contains) {\n      isContained = parent.contains(child);\n    }\n  }\n\n  return isContained;\n}\n","import { elementContainsAttribute } from './dom/elementContainsAttribute';\nimport { elementContains } from './dom/elementContains';\nimport { getParent } from './dom/getParent';\nimport { getWindow } from './dom/getWindow';\nimport { getDocument } from './dom/getDocument';\n\nconst IS_FOCUSABLE_ATTRIBUTE = 'data-is-focusable';\nconst IS_VISIBLE_ATTRIBUTE = 'data-is-visible';\nconst FOCUSZONE_ID_ATTRIBUTE = 'data-focuszone-id';\nconst FOCUSZONE_SUB_ATTRIBUTE = 'data-is-sub-focuszone';\n\n/**\n * Gets the first focusable element.\n *\n * @public\n */\nexport function getFirstFocusable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean,\n): HTMLElement | null {\n  return getNextElement(\n    rootElement,\n    currentElement,\n    true /*checkNode*/,\n    false /*suppressParentTraversal*/,\n    false /*suppressChildTraversal*/,\n    includeElementsInFocusZones,\n  );\n}\n\n/**\n * Gets the last focusable element.\n *\n * @public\n */\nexport function getLastFocusable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean,\n): HTMLElement | null {\n  return getPreviousElement(\n    rootElement,\n    currentElement,\n    true /*checkNode*/,\n    false /*suppressParentTraversal*/,\n    true /*traverseChildren*/,\n    includeElementsInFocusZones,\n  );\n}\n\n/**\n * Gets the first tabbable element. (The difference between focusable and tabbable is that tabbable elements are\n * focusable elements that also have tabIndex != -1.)\n * @param rootElement - The parent element to search beneath.\n * @param currentElement - The descendant of rootElement to start the search at.  This element is the first one checked,\n * and iteration continues forward.  Typical use passes rootElement.firstChild.\n * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.\n * @param checkNode - Include currentElement in search when true. Defaults to true.\n * @public\n */\nexport function getFirstTabbable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean,\n  checkNode: boolean = true,\n): HTMLElement | null {\n  return getNextElement(\n    rootElement,\n    currentElement,\n    checkNode,\n    false /*suppressParentTraversal*/,\n    false /*suppressChildTraversal*/,\n    includeElementsInFocusZones,\n    false /*allowFocusRoot*/,\n    true /*tabbable*/,\n  );\n}\n\n/**\n * Gets the last tabbable element. (The difference between focusable and tabbable is that tabbable elements are\n * focusable elements that also have tabIndex != -1.)\n * @param rootElement - The parent element to search beneath.\n * @param currentElement - The descendant of rootElement to start the search at.  This element is the first one checked,\n * and iteration continues in reverse.  Typical use passes rootElement.lastChild.\n * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.\n * @param checkNode - Include currentElement in search when true. Defaults to true.\n * @public\n */\nexport function getLastTabbable(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement,\n  includeElementsInFocusZones?: boolean,\n  checkNode: boolean = true,\n): HTMLElement | null {\n  return getPreviousElement(\n    rootElement,\n    currentElement,\n    checkNode,\n    false /*suppressParentTraversal*/,\n    true /*traverseChildren*/,\n    includeElementsInFocusZones,\n    false /*allowFocusRoot*/,\n    true /*tabbable*/,\n  );\n}\n\n/**\n * Attempts to focus the first focusable element that is a child or child's child of the rootElement.\n *\n * @public\n * @param rootElement - Element to start the search for a focusable child.\n * @returns True if focus was set, false if it was not.\n */\nexport function focusFirstChild(rootElement: HTMLElement): boolean {\n  let element: HTMLElement | null = getNextElement(rootElement, rootElement, true, false, false, true);\n\n  if (element) {\n    focusAsync(element);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Traverse to find the previous element.\n * If tabbable is true, the element must have tabIndex != -1.\n *\n * @public\n */\nexport function getPreviousElement(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement | null,\n  checkNode?: boolean,\n  suppressParentTraversal?: boolean,\n  traverseChildren?: boolean,\n  includeElementsInFocusZones?: boolean,\n  allowFocusRoot?: boolean,\n  tabbable?: boolean,\n): HTMLElement | null {\n  if (!currentElement || (!allowFocusRoot && currentElement === rootElement)) {\n    return null;\n  }\n\n  let isCurrentElementVisible = isElementVisible(currentElement);\n\n  // Check its children.\n  if (\n    traverseChildren &&\n    isCurrentElementVisible &&\n    (includeElementsInFocusZones || !(isElementFocusZone(currentElement) || isElementFocusSubZone(currentElement)))\n  ) {\n    const childMatch = getPreviousElement(\n      rootElement,\n      currentElement.lastElementChild as HTMLElement,\n      true,\n      true,\n      true,\n      includeElementsInFocusZones,\n      allowFocusRoot,\n      tabbable,\n    );\n\n    if (childMatch) {\n      if ((tabbable && isElementTabbable(childMatch, true)) || !tabbable) {\n        return childMatch;\n      }\n\n      const childMatchSiblingMatch = getPreviousElement(\n        rootElement,\n        childMatch.previousElementSibling as HTMLElement,\n        true,\n        true,\n        true,\n        includeElementsInFocusZones,\n        allowFocusRoot,\n        tabbable,\n      );\n      if (childMatchSiblingMatch) {\n        return childMatchSiblingMatch;\n      }\n\n      let childMatchParent = childMatch.parentElement;\n\n      // At this point if we have not found any potential matches\n      // start looking at the rest of the subtree under the currentParent.\n      // NOTE: We do not want to recurse here because doing so could\n      // cause elements to get skipped.\n      while (childMatchParent && childMatchParent !== currentElement) {\n        const childMatchParentMatch = getPreviousElement(\n          rootElement,\n          childMatchParent.previousElementSibling as HTMLElement,\n          true,\n          true,\n          true,\n          includeElementsInFocusZones,\n          allowFocusRoot,\n          tabbable,\n        );\n\n        if (childMatchParentMatch) {\n          return childMatchParentMatch;\n        }\n\n        childMatchParent = childMatchParent.parentElement;\n      }\n    }\n  }\n\n  // Check the current node, if it's not the first traversal.\n  if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement, tabbable)) {\n    return currentElement;\n  }\n\n  // Check its previous sibling.\n  const siblingMatch = getPreviousElement(\n    rootElement,\n    currentElement.previousElementSibling as HTMLElement,\n    true,\n    true,\n    true,\n    includeElementsInFocusZones,\n    allowFocusRoot,\n    tabbable,\n  );\n\n  if (siblingMatch) {\n    return siblingMatch;\n  }\n\n  // Check its parent.\n  if (!suppressParentTraversal) {\n    return getPreviousElement(\n      rootElement,\n      currentElement.parentElement,\n      true,\n      false,\n      false,\n      includeElementsInFocusZones,\n      allowFocusRoot,\n      tabbable,\n    );\n  }\n\n  return null;\n}\n\n/**\n * Traverse to find the next focusable element.\n * If tabbable is true, the element must have tabIndex != -1.\n *\n * @public\n * @param checkNode - Include currentElement in search when true.\n */\nexport function getNextElement(\n  rootElement: HTMLElement,\n  currentElement: HTMLElement | null,\n  checkNode?: boolean,\n  suppressParentTraversal?: boolean,\n  suppressChildTraversal?: boolean,\n  includeElementsInFocusZones?: boolean,\n  allowFocusRoot?: boolean,\n  tabbable?: boolean,\n): HTMLElement | null {\n  if (!currentElement || (currentElement === rootElement && suppressChildTraversal && !allowFocusRoot)) {\n    return null;\n  }\n\n  let isCurrentElementVisible = isElementVisible(currentElement);\n\n  // Check the current node, if it's not the first traversal.\n  if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement, tabbable)) {\n    return currentElement;\n  }\n\n  // Check its children.\n  if (\n    !suppressChildTraversal &&\n    isCurrentElementVisible &&\n    (includeElementsInFocusZones || !(isElementFocusZone(currentElement) || isElementFocusSubZone(currentElement)))\n  ) {\n    const childMatch = getNextElement(\n      rootElement,\n      currentElement.firstElementChild as HTMLElement,\n      true,\n      true,\n      false,\n      includeElementsInFocusZones,\n      allowFocusRoot,\n      tabbable,\n    );\n\n    if (childMatch) {\n      return childMatch;\n    }\n  }\n\n  if (currentElement === rootElement) {\n    return null;\n  }\n\n  // Check its sibling.\n  const siblingMatch = getNextElement(\n    rootElement,\n    currentElement.nextElementSibling as HTMLElement,\n    true,\n    true,\n    false,\n    includeElementsInFocusZones,\n    allowFocusRoot,\n    tabbable,\n  );\n\n  if (siblingMatch) {\n    return siblingMatch;\n  }\n\n  if (!suppressParentTraversal) {\n    return getNextElement(\n      rootElement,\n      currentElement.parentElement,\n      false,\n      false,\n      true,\n      includeElementsInFocusZones,\n      allowFocusRoot,\n      tabbable,\n    );\n  }\n\n  return null;\n}\n\n/**\n * Determines if an element is visible.\n *\n * @public\n */\nexport function isElementVisible(element: HTMLElement | undefined | null): boolean {\n  // If the element is not valid, return false.\n  if (!element || !element.getAttribute) {\n    return false;\n  }\n\n  const visibilityAttribute = element.getAttribute(IS_VISIBLE_ATTRIBUTE);\n\n  // If the element is explicitly marked with the visibility attribute, return that value as boolean.\n  if (visibilityAttribute !== null && visibilityAttribute !== undefined) {\n    return visibilityAttribute === 'true';\n  }\n\n  // Fallback to other methods of determining actual visibility.\n  return (\n    element.offsetHeight !== 0 ||\n    element.offsetParent !== null ||\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (element as any).isVisible === true\n  ); // used as a workaround for testing.\n}\n\n/**\n * Determines if an element is visible and not hidden\n * @param element - Element to check\n * @returns Returns true if the given element is visible and not hidden\n *\n * @public\n */\nexport function isElementVisibleAndNotHidden(element: HTMLElement | undefined | null): boolean {\n  return (\n    !!element &&\n    isElementVisible(element) &&\n    !element.hidden &&\n    window.getComputedStyle(element).visibility !== 'hidden'\n  );\n}\n\n/**\n * Determines if an element can receive focus programmatically or via a mouse click.\n * If checkTabIndex is true, additionally checks to ensure the element can be focused with the tab key,\n * meaning tabIndex != -1.\n *\n * @public\n */\nexport function isElementTabbable(element: HTMLElement, checkTabIndex?: boolean): boolean {\n  // If this element is null or is disabled, it is not considered tabbable.\n  if (!element || (element as HTMLButtonElement).disabled) {\n    return false;\n  }\n\n  let tabIndex = 0;\n  let tabIndexAttributeValue = null;\n\n  if (element && element.getAttribute) {\n    tabIndexAttributeValue = element.getAttribute('tabIndex');\n\n    if (tabIndexAttributeValue) {\n      tabIndex = parseInt(tabIndexAttributeValue, 10);\n    }\n  }\n\n  let isFocusableAttribute = element.getAttribute ? element.getAttribute(IS_FOCUSABLE_ATTRIBUTE) : null;\n  let isTabIndexSet = tabIndexAttributeValue !== null && tabIndex >= 0;\n\n  const result =\n    !!element &&\n    isFocusableAttribute !== 'false' &&\n    (element.tagName === 'A' ||\n      element.tagName === 'BUTTON' ||\n      element.tagName === 'INPUT' ||\n      element.tagName === 'TEXTAREA' ||\n      element.tagName === 'SELECT' ||\n      isFocusableAttribute === 'true' ||\n      isTabIndexSet);\n\n  return checkTabIndex ? tabIndex !== -1 && result : result;\n}\n\n/**\n * Determines if a given element is a focus zone.\n *\n * @public\n */\nexport function isElementFocusZone(element?: HTMLElement): boolean {\n  return !!(element && element.getAttribute && !!element.getAttribute(FOCUSZONE_ID_ATTRIBUTE));\n}\n\n/**\n * Determines if a given element is a focus sub zone.\n *\n * @public\n */\nexport function isElementFocusSubZone(element?: HTMLElement): boolean {\n  return !!(element && element.getAttribute && element.getAttribute(FOCUSZONE_SUB_ATTRIBUTE) === 'true');\n}\n\n/**\n * Determines if an element, or any of its children, contain focus.\n *\n * @public\n */\nexport function doesElementContainFocus(element: HTMLElement): boolean {\n  let document = getDocument(element);\n  let currentActiveElement: HTMLElement | undefined = document && (document.activeElement as HTMLElement);\n  if (currentActiveElement && elementContains(element, currentActiveElement)) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Determines if an, or any of its ancestors, sepcificies that it doesn't want focus to wrap\n * @param element - element to start searching from\n * @param noWrapDataAttribute - the no wrap data attribute to match (either)\n * @returns true if focus should wrap, false otherwise\n */\nexport function shouldWrapFocus(\n  element: HTMLElement,\n  noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap',\n): boolean {\n  return elementContainsAttribute(element, noWrapDataAttribute) === 'true' ? false : true;\n}\n\nlet targetToFocusOnNextRepaint: HTMLElement | { focus: () => void } | null | undefined = undefined;\n\n/**\n * Sets focus to an element asynchronously. The focus will be set at the next browser repaint,\n * meaning it won't cause any extra recalculations. If more than one focusAsync is called during one frame,\n * only the latest called focusAsync element will actually be focused\n * @param element - The element to focus\n */\nexport function focusAsync(element: HTMLElement | { focus: () => void } | undefined | null): void {\n  if (element) {\n    // An element was already queued to be focused, so replace that one with the new element\n    if (targetToFocusOnNextRepaint) {\n      targetToFocusOnNextRepaint = element;\n      return;\n    }\n\n    targetToFocusOnNextRepaint = element;\n\n    const win = getWindow(element as Element);\n\n    if (win) {\n      // element.focus() is a no-op if the element is no longer in the DOM, meaning this is always safe\n      win.requestAnimationFrame(() => {\n        targetToFocusOnNextRepaint && targetToFocusOnNextRepaint.focus();\n\n        // We are done focusing for this frame, so reset the queued focus element\n        targetToFocusOnNextRepaint = undefined;\n      });\n    }\n  }\n}\n\n/**\n * Finds the closest focusable element via an index path from a parent. See\n * `getElementIndexPath` for getting an index path from an element to a child.\n */\nexport function getFocusableByIndexPath(parent: HTMLElement, path: number[]): HTMLElement | undefined {\n  let element = parent;\n\n  for (const index of path) {\n    const nextChild = element.children[Math.min(index, element.children.length - 1)] as HTMLElement;\n\n    if (!nextChild) {\n      break;\n    }\n    element = nextChild;\n  }\n\n  element =\n    isElementTabbable(element) && isElementVisible(element)\n      ? element\n      : getNextElement(parent, element, true) || getPreviousElement(parent, element)!;\n\n  return element as HTMLElement;\n}\n\n/**\n * Finds the element index path from a parent element to a child element.\n *\n * If you had this node structure: \"A has children [B, C] and C has child D\",\n * the index path from A to D would be [1, 0], or `parent.chidren[1].children[0]`.\n */\nexport function getElementIndexPath(fromElement: HTMLElement, toElement: HTMLElement): number[] {\n  const path: number[] = [];\n\n  while (toElement && fromElement && toElement !== fromElement) {\n    const parent = getParent(toElement, true);\n\n    if (parent === null) {\n      return [];\n    }\n\n    path.unshift(Array.prototype.indexOf.call(parent.children, toElement));\n    toElement = parent;\n  }\n\n  return path;\n}\n","import { findElementRecursive } from './findElementRecursive';\n\n/**\n * Determines if an element, or any of its ancestors, contain the given attribute\n * @param element - element to start searching at\n * @param attribute - the attribute to search for\n * @returns the value of the first instance found\n */\nexport function elementContainsAttribute(element: HTMLElement, attribute: string): string | null {\n  const elementMatch = findElementRecursive(element, (testElement: HTMLElement) => testElement.hasAttribute(attribute));\n\n  return elementMatch && elementMatch.getAttribute(attribute);\n}\n","/** Raises a click event. */\nexport function raiseClick(target: Element): void {\n  const event = createNewEvent('MouseEvents');\n  event.initEvent('click', true, true);\n  target.dispatchEvent(event);\n}\n\nfunction createNewEvent(eventName: string): Event {\n  let event;\n  if (typeof Event === 'function') {\n    // Chrome, Opera, Firefox\n    event = new Event(eventName);\n  } else {\n    // IE\n    event = document.createEvent('Event');\n    event.initEvent(eventName, true, true);\n  }\n  return event;\n}\n","import { getDocument } from './dom/getDocument';\nimport { mergeStyles } from '@fluentui/merge-styles';\nimport { EventGroup } from './EventGroup';\nimport { getWindow } from './dom/getWindow';\n\nlet _scrollbarWidth: number;\nlet _bodyScrollDisabledCount = 0;\n\nconst DisabledScrollClassName = mergeStyles({\n  overflow: 'hidden !important' as 'hidden',\n});\n\n/**\n * Placing this attribute on scrollable divs optimizes detection to know\n * if the div is scrollable or not (given we can avoid expensive operations\n * like getComputedStyle.)\n *\n * @public\n */\nexport const DATA_IS_SCROLLABLE_ATTRIBUTE = 'data-is-scrollable';\n\n/**\n * Allows the user to scroll within a element,\n * while preventing the user from scrolling the body\n */\nexport const allowScrollOnElement = (element: HTMLElement | null, events: EventGroup): void => {\n  if (!element) {\n    return;\n  }\n\n  let _previousClientY = 0;\n  let _element: Element | null = null;\n\n  // remember the clientY for future calls of _preventOverscrolling\n  const _saveClientY = (event: TouchEvent): void => {\n    if (event.targetTouches.length === 1) {\n      _previousClientY = event.targetTouches[0].clientY;\n    }\n  };\n\n  // prevent the body from scrolling when the user attempts\n  // to scroll past the top or bottom of the element\n  const _preventOverscrolling = (event: TouchEvent): void => {\n    // only respond to a single-finger touch\n    if (event.targetTouches.length !== 1) {\n      return;\n    }\n\n    // prevent the body touchmove handler from firing\n    // so that scrolling is allowed within the element\n    event.stopPropagation();\n\n    if (!_element) {\n      return;\n    }\n\n    const clientY = event.targetTouches[0].clientY - _previousClientY;\n\n    const scrollableParent = findScrollableParent(event.target as HTMLElement) as HTMLElement;\n    if (scrollableParent) {\n      _element = scrollableParent;\n    }\n\n    // if the element is scrolled to the top,\n    // prevent the user from scrolling up\n    if (_element.scrollTop === 0 && clientY > 0) {\n      event.preventDefault();\n    }\n\n    // if the element is scrolled to the bottom,\n    // prevent the user from scrolling down\n    if (_element.scrollHeight - Math.ceil(_element.scrollTop) <= _element.clientHeight && clientY < 0) {\n      event.preventDefault();\n    }\n  };\n\n  events.on(element, 'touchstart', _saveClientY, { passive: false });\n  events.on(element, 'touchmove', _preventOverscrolling, { passive: false });\n\n  _element = element;\n};\n\n/**\n * Same as allowScrollOnElement but does not prevent overscrolling.\n */\nexport const allowOverscrollOnElement = (element: HTMLElement | null, events: EventGroup): void => {\n  if (!element) {\n    return;\n  }\n  const _allowElementScroll = (event: TouchEvent) => {\n    event.stopPropagation();\n  };\n  events.on(element, 'touchmove', _allowElementScroll, { passive: false });\n};\n\nconst _disableIosBodyScroll = (event: TouchEvent) => {\n  event.preventDefault();\n};\n\n/**\n * Disables the body scrolling.\n *\n * @public\n */\nexport function disableBodyScroll(): void {\n  let doc = getDocument();\n\n  if (doc && doc.body && !_bodyScrollDisabledCount) {\n    doc.body.classList.add(DisabledScrollClassName);\n    doc.body.addEventListener('touchmove', _disableIosBodyScroll, { passive: false, capture: false });\n  }\n\n  _bodyScrollDisabledCount++;\n}\n\n/**\n * Enables the body scrolling.\n *\n * @public\n */\nexport function enableBodyScroll(): void {\n  if (_bodyScrollDisabledCount > 0) {\n    let doc = getDocument();\n\n    if (doc && doc.body && _bodyScrollDisabledCount === 1) {\n      doc.body.classList.remove(DisabledScrollClassName);\n      doc.body.removeEventListener('touchmove', _disableIosBodyScroll);\n    }\n\n    _bodyScrollDisabledCount--;\n  }\n}\n\n/**\n * Calculates the width of a scrollbar for the browser/os.\n *\n * @public\n */\nexport function getScrollbarWidth(): number {\n  if (_scrollbarWidth === undefined) {\n    let scrollDiv: HTMLElement = document.createElement('div');\n    scrollDiv.style.setProperty('width', '100px');\n    scrollDiv.style.setProperty('height', '100px');\n    scrollDiv.style.setProperty('overflow', 'scroll');\n    scrollDiv.style.setProperty('position', 'absolute');\n    scrollDiv.style.setProperty('top', '-9999px');\n    document.body.appendChild(scrollDiv);\n    // Get the scrollbar width\n    _scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n    // Delete the DIV\n    document.body.removeChild(scrollDiv);\n  }\n\n  return _scrollbarWidth;\n}\n\n/**\n * Traverses up the DOM for the element with the data-is-scrollable=true attribute, or returns\n * document.body.\n *\n * @public\n */\nexport function findScrollableParent(startingElement: HTMLElement | null): HTMLElement | Window | undefined | null {\n  let el: HTMLElement | Window | undefined | null = startingElement;\n  const doc = getDocument(startingElement)!;\n\n  // First do a quick scan for the scrollable attribute.\n  while (el && el !== doc.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) === 'true') {\n      return el;\n    }\n    el = el.parentElement;\n  }\n\n  // If we haven't found it, the use the slower method: compute styles to evaluate if overflow is set.\n  el = startingElement;\n\n  while (el && el !== doc.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) !== 'false') {\n      const computedStyles = getComputedStyle(el);\n      let overflowY = computedStyles ? computedStyles.getPropertyValue('overflow-y') : '';\n\n      if (overflowY && (overflowY === 'scroll' || overflowY === 'auto')) {\n        return el;\n      }\n    }\n\n    el = el.parentElement;\n  }\n\n  // Fall back to window scroll.\n  if (!el || el === doc.body) {\n    el = getWindow(startingElement);\n  }\n\n  return el;\n}\n","import * as React from 'react';\nimport { FocusZoneDirection, FocusZoneTabbableElements } from './FocusZone.types';\nimport {\n  KeyCodes,\n  css,\n  elementContains,\n  getDocument,\n  getElementIndexPath,\n  getFocusableByIndexPath,\n  getId,\n  getNativeProps,\n  getNextElement,\n  getParent,\n  getPreviousElement,\n  getRTL,\n  htmlElementProperties,\n  initializeComponentRef,\n  isElementFocusSubZone,\n  isElementFocusZone,\n  isElementTabbable,\n  raiseClick,\n  shouldWrapFocus,\n  warnDeprecations,\n  portalContainsElement,\n  getWindow,\n  findScrollableParent,\n  createMergedRef,\n} from '@fluentui/utilities';\nimport { mergeStyles } from '@fluentui/merge-styles';\nimport { getTheme } from '@fluentui/style-utilities';\nimport type { IFocusZone, IFocusZoneProps } from './FocusZone.types';\nimport type { Point } from '@fluentui/utilities';\nimport type { ITheme } from '@fluentui/style-utilities';\n\nconst IS_FOCUSABLE_ATTRIBUTE = 'data-is-focusable';\nconst IS_ENTER_DISABLED_ATTRIBUTE = 'data-disable-click-on-enter';\nconst FOCUSZONE_ID_ATTRIBUTE = 'data-focuszone-id';\nconst TABINDEX = 'tabindex';\nconst NO_VERTICAL_WRAP = 'data-no-vertical-wrap';\nconst NO_HORIZONTAL_WRAP = 'data-no-horizontal-wrap';\nconst LARGE_DISTANCE_FROM_CENTER = 999999999;\nconst LARGE_NEGATIVE_DISTANCE_FROM_CENTER = -999999999;\n\nlet focusZoneStyles: string;\n\nconst focusZoneClass: string = 'ms-FocusZone';\n\n// Helper function that will return a class for when the root is focused\nfunction getRootClass(): string {\n  if (!focusZoneStyles) {\n    focusZoneStyles = mergeStyles(\n      {\n        selectors: {\n          ':focus': {\n            outline: 'none',\n          },\n        },\n      },\n      focusZoneClass,\n    );\n  }\n  return focusZoneStyles;\n}\n\nconst _allInstances: {\n  [key: string]: FocusZone;\n} = {};\nconst _outerZones: Set<FocusZone> = new Set();\n\nconst ALLOWED_INPUT_TYPES = ['text', 'number', 'password', 'email', 'tel', 'url', 'search'];\n\nconst ALLOW_VIRTUAL_ELEMENTS = false;\n\nexport class FocusZone extends React.Component<IFocusZoneProps> implements IFocusZone {\n  public static defaultProps: IFocusZoneProps = {\n    isCircularNavigation: false,\n    direction: FocusZoneDirection.bidirectional,\n    shouldRaiseClicks: true,\n  };\n\n  private _root: React.RefObject<HTMLElement> = React.createRef();\n  private _mergedRef = createMergedRef<HTMLElement>();\n\n  private _id: string;\n\n  /** The most recently focused child element. */\n  private _activeElement: HTMLElement | null;\n\n  /**\n   * The index path to the last focused child element.\n   */\n  private _lastIndexPath: number[] | undefined;\n\n  /**\n   * Flag to define when we've intentionally parked focus on the root element to temporarily\n   * hold focus until items appear within the zone.\n   */\n  private _isParked: boolean;\n\n  /** The child element with tabindex=0. */\n  private _defaultFocusElement: HTMLElement | null;\n  private _focusAlignment: Point;\n  private _isInnerZone: boolean;\n  private _parkedTabIndex: string | null | undefined;\n\n  /** Used to allow moving to next focusable element even when we're focusing on a input element when pressing tab */\n  private _processingTabKey: boolean;\n\n  /** Provides granular control over `shouldRaiseClicks` and should be preferred over `props.shouldRaiseClicks`. */\n  private _shouldRaiseClicksOnEnter: boolean;\n  private _shouldRaiseClicksOnSpace: boolean;\n\n  private _windowElement: Window | undefined;\n\n  /** Used for testing purposes only. */\n  public static getOuterZones(): number {\n    return _outerZones.size;\n  }\n\n  /**\n   * Handle global tab presses so that we can patch tabindexes on the fly.\n   * HEADS UP: This must not be an arrow function in order to be referentially equal among instances\n   * for ref counting to work correctly!\n   */\n  private static _onKeyDownCapture(ev: KeyboardEvent): void {\n    // eslint-disable-next-line deprecation/deprecation, @fluentui/deprecated-keyboard-event-props\n    if (ev.which === KeyCodes.tab) {\n      _outerZones.forEach((zone: FocusZone) => zone._updateTabIndexes());\n    }\n  }\n\n  constructor(props: IFocusZoneProps) {\n    super(props);\n    // Manage componentRef resolution.\n    initializeComponentRef(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('FocusZone', props, {\n        rootProps: undefined,\n        allowTabKey: 'handleTabKey',\n        elementType: 'as',\n        ariaDescribedBy: 'aria-describedby',\n        ariaLabelledBy: 'aria-labelledby',\n      });\n    }\n\n    this._id = getId('FocusZone');\n\n    this._focusAlignment = {\n      left: 0,\n      top: 0,\n    };\n\n    this._processingTabKey = false;\n\n    const shouldRaiseClicksFallback = props.shouldRaiseClicks ?? FocusZone.defaultProps.shouldRaiseClicks ?? true;\n    this._shouldRaiseClicksOnEnter = props.shouldRaiseClicksOnEnter ?? shouldRaiseClicksFallback;\n    this._shouldRaiseClicksOnSpace = props.shouldRaiseClicksOnSpace ?? shouldRaiseClicksFallback;\n  }\n\n  public componentDidMount(): void {\n    const { current: root } = this._root;\n\n    _allInstances[this._id] = this;\n\n    if (root) {\n      this._windowElement = getWindow(root);\n      let parentElement = getParent(root, ALLOW_VIRTUAL_ELEMENTS);\n\n      while (parentElement && parentElement !== this._getDocument().body && parentElement.nodeType === 1) {\n        if (isElementFocusZone(parentElement)) {\n          this._isInnerZone = true;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n      }\n\n      if (!this._isInnerZone) {\n        _outerZones.add(this);\n\n        if (this._windowElement && _outerZones.size === 1) {\n          this._windowElement.addEventListener('keydown', FocusZone._onKeyDownCapture, true);\n        }\n      }\n\n      this._root.current && this._root.current.addEventListener('blur', this._onBlur, true);\n\n      // Assign initial tab indexes so that we can set initial focus as appropriate.\n      this._updateTabIndexes();\n\n      if (this.props.defaultTabbableElement && typeof this.props.defaultTabbableElement === 'string') {\n        this._activeElement = this._getDocument().querySelector(this.props.defaultTabbableElement) as HTMLElement;\n        // eslint-disable-next-line deprecation/deprecation\n      } else if (this.props.defaultActiveElement) {\n        // eslint-disable-next-line deprecation/deprecation\n        this._activeElement = this._getDocument().querySelector(this.props.defaultActiveElement) as HTMLElement;\n      }\n\n      if (this.props.shouldFocusOnMount) {\n        this.focus();\n      }\n    }\n  }\n\n  public componentDidUpdate(): void {\n    const { current: root } = this._root;\n    const doc = this._getDocument();\n\n    if (\n      !this.props.preventFocusRestoration &&\n      doc &&\n      this._lastIndexPath &&\n      (doc.activeElement === doc.body || doc.activeElement === null || doc.activeElement === root)\n    ) {\n      // The element has been removed after the render, attempt to restore focus.\n      const elementToFocus = getFocusableByIndexPath(root as HTMLElement, this._lastIndexPath);\n\n      if (elementToFocus) {\n        this._setActiveElement(elementToFocus, true);\n        elementToFocus.focus();\n        this._setParkedFocus(false);\n      } else {\n        // We had a focus path to restore, but now that path is unresolvable. Park focus\n        // on the container until we can try again.\n        this._setParkedFocus(true);\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    delete _allInstances[this._id];\n\n    if (!this._isInnerZone) {\n      _outerZones.delete(this);\n\n      // If this is the last outer zone, remove the keydown listener.\n      if (this._windowElement && _outerZones.size === 0) {\n        this._windowElement.removeEventListener('keydown', FocusZone._onKeyDownCapture, true);\n      }\n    }\n\n    if (this._root.current) {\n      this._root.current.removeEventListener('blur', this._onBlur, true);\n    }\n\n    this._activeElement = null;\n    this._defaultFocusElement = null;\n  }\n\n  public render(): React.ReactNode {\n    // eslint-disable-next-line deprecation/deprecation\n    const { as: tag, elementType, rootProps, ariaDescribedBy, ariaLabelledBy, className } = this.props;\n    const divProps = getNativeProps(this.props, htmlElementProperties);\n\n    const Tag = tag || elementType || 'div';\n\n    // Note, right before rendering/reconciling proceeds, we need to record if focus\n    // was in the zone before the update. This helper will track this and, if focus\n    // was actually in the zone, what the index path to the element is at this time.\n    // Then, later in componentDidUpdate, we can evaluate if we need to restore it in\n    // the case the element was removed.\n    this._evaluateFocusBeforeRender();\n\n    // Only support RTL defined in global theme, not contextual theme/RTL.\n    const theme: ITheme = getTheme();\n\n    return (\n      <Tag\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        {...divProps}\n        {\n          // root props has been deprecated and should get removed.\n          // it needs to be marked as \"any\" since root props expects a div element, but really Tag can\n          // be any native element so typescript rightly flags this as a problem.\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(rootProps as any)\n        }\n        // Once the getClassName correctly memoizes inputs this should\n        // be replaced so that className is passed to getRootClass and is included there so\n        // the class names will always be in the same order.\n        className={css(getRootClass(), className)}\n        // eslint-disable-next-line deprecation/deprecation\n        ref={this._mergedRef(this.props.elementRef, this._root)}\n        data-focuszone-id={this._id}\n        // eslint-disable-next-line react/jsx-no-bind\n        onKeyDown={(ev: React.KeyboardEvent<HTMLElement>) => this._onKeyDown(ev, theme)}\n        onFocus={this._onFocus}\n        onMouseDownCapture={this._onMouseDown}\n      >\n        {this.props.children}\n      </Tag>\n    );\n  }\n\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even\n   * if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focus(forceIntoFirstElement: boolean = false): boolean {\n    if (this._root.current) {\n      if (\n        !forceIntoFirstElement &&\n        this._root.current.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        this._isInnerZone\n      ) {\n        const ownerZoneElement = this._getOwnerZone(this._root.current) as HTMLElement;\n\n        if (ownerZoneElement !== this._root.current) {\n          const ownerZone = _allInstances[ownerZoneElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n\n          return !!ownerZone && ownerZone.focusElement(this._root.current);\n        }\n\n        return false;\n      } else if (\n        !forceIntoFirstElement &&\n        this._activeElement &&\n        elementContains(this._root.current, this._activeElement) &&\n        isElementTabbable(this._activeElement)\n      ) {\n        this._activeElement.focus();\n        return true;\n      } else {\n        const firstChild = this._root.current.firstChild as HTMLElement;\n\n        return this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Sets focus to the last tabbable item in the zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focusLast(): boolean {\n    if (this._root.current) {\n      const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n\n      return this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement);\n    }\n\n    return false;\n  }\n\n  /**\n   * Sets focus to a specific child element within the zone. This can be used in conjunction with\n   * shouldReceiveFocus to create delayed focus scenarios (like animate the scroll position to the correct\n   * location and then focus.)\n   * @param element - The child element within the zone to focus.\n   * @param forceAlignment - If true, focus alignment will be set according to the element provided.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focusElement(element: HTMLElement, forceAlignment?: boolean): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    const { onBeforeFocus, shouldReceiveFocus } = this.props;\n\n    if ((shouldReceiveFocus && !shouldReceiveFocus(element)) || (onBeforeFocus && !onBeforeFocus(element))) {\n      return false;\n    }\n\n    if (element) {\n      // when we set focus to a specific child, we should recalculate the alignment depending on its position.\n      this._setActiveElement(element, forceAlignment);\n      if (this._activeElement) {\n        this._activeElement.focus();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Forces horizontal alignment in the context of vertical arrowing to use specific point as the reference,\n   * rather than a center based on the last horizontal motion.\n   * @param point - the new reference point.\n   */\n  public setFocusAlignment(point: Point): void {\n    this._focusAlignment = point;\n  }\n\n  private _evaluateFocusBeforeRender(): void {\n    const { current: root } = this._root;\n\n    const doc = this._getDocument();\n    if (doc) {\n      const focusedElement = doc.activeElement as HTMLElement;\n\n      // Only update the index path if we are not parked on the root.\n      if (focusedElement !== root) {\n        const shouldRestoreFocus = elementContains(root, focusedElement, false);\n        this._lastIndexPath = shouldRestoreFocus ? getElementIndexPath(root as HTMLElement, focusedElement) : undefined;\n      }\n    }\n  }\n\n  private _onFocus = (ev: React.FocusEvent<HTMLElement>): void => {\n    if (this._portalContainsElement(ev.target as HTMLElement)) {\n      // If the event target is inside a portal do not process the event.\n      return;\n    }\n\n    const {\n      onActiveElementChanged,\n      // eslint-disable-next-line deprecation/deprecation\n      doNotAllowFocusEventToPropagate,\n      stopFocusPropagation,\n      // eslint-disable-next-line deprecation/deprecation\n      onFocusNotification,\n      onFocus,\n      shouldFocusInnerElementWhenReceivedFocus,\n      defaultTabbableElement,\n    } = this.props;\n    const isImmediateDescendant = this._isImmediateDescendantOfZone(ev.target as HTMLElement);\n    let newActiveElement: HTMLElement | null | undefined;\n\n    if (isImmediateDescendant) {\n      newActiveElement = ev.target as HTMLElement;\n    } else {\n      let parentElement = ev.target as HTMLElement;\n\n      while (parentElement && parentElement !== this._root.current) {\n        if (isElementTabbable(parentElement) && this._isImmediateDescendantOfZone(parentElement)) {\n          newActiveElement = parentElement;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n      }\n    }\n\n    // If an inner focusable element should be focused when FocusZone container receives focus\n    if (shouldFocusInnerElementWhenReceivedFocus && ev.target === this._root.current) {\n      const maybeElementToFocus =\n        defaultTabbableElement &&\n        typeof defaultTabbableElement === 'function' &&\n        this._root.current &&\n        defaultTabbableElement(this._root.current);\n\n      // try to focus defaultTabbable element\n      if (maybeElementToFocus && isElementTabbable(maybeElementToFocus)) {\n        newActiveElement = maybeElementToFocus;\n        maybeElementToFocus.focus();\n      } else {\n        // force focus on first focusable element\n        this.focus(true);\n        if (this._activeElement) {\n          // set to null as new active element was handled in method above\n          newActiveElement = null;\n        }\n      }\n    }\n\n    const initialElementFocused = !this._activeElement;\n\n    // If the new active element is a child of this zone and received focus,\n    // update alignment an immediate descendant\n    if (newActiveElement && newActiveElement !== this._activeElement) {\n      if (isImmediateDescendant || initialElementFocused) {\n        this._setFocusAlignment(newActiveElement, true, true);\n      }\n\n      this._activeElement = newActiveElement;\n\n      if (initialElementFocused) {\n        this._updateTabIndexes();\n      }\n    }\n\n    if (onActiveElementChanged) {\n      onActiveElementChanged(this._activeElement as HTMLElement, ev);\n    }\n\n    if (stopFocusPropagation || doNotAllowFocusEventToPropagate) {\n      ev.stopPropagation();\n    }\n\n    if (onFocus) {\n      onFocus(ev);\n    } else if (onFocusNotification) {\n      onFocusNotification();\n    }\n  };\n\n  /**\n   * When focus is in the zone at render time but then all focusable elements are removed,\n   * we \"park\" focus temporarily on the root. Once we update with focusable children, we restore\n   * focus to the closest path from previous. If the user tabs away from the parked container,\n   * we restore focusability to the pre-parked state.\n   */\n  private _setParkedFocus(isParked: boolean): void {\n    const { current: root } = this._root;\n\n    if (root && this._isParked !== isParked) {\n      this._isParked = isParked;\n\n      if (isParked) {\n        if (!this.props.allowFocusRoot) {\n          this._parkedTabIndex = root.getAttribute('tabindex');\n          root.setAttribute('tabindex', '-1');\n        }\n        root.focus();\n      } else if (!this.props.allowFocusRoot) {\n        if (this._parkedTabIndex) {\n          root.setAttribute('tabindex', this._parkedTabIndex);\n          this._parkedTabIndex = undefined;\n        } else {\n          root.removeAttribute('tabindex');\n        }\n      }\n    }\n  }\n\n  private _onBlur = (): void => {\n    this._setParkedFocus(false);\n  };\n\n  private _onMouseDown = (ev: React.MouseEvent<HTMLElement>): void => {\n    if (this._portalContainsElement(ev.target as HTMLElement)) {\n      // If the event target is inside a portal do not process the event.\n      return;\n    }\n\n    const { disabled } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    let target = ev.target as HTMLElement;\n    const path = [];\n\n    while (target && target !== this._root.current) {\n      path.push(target);\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    }\n\n    while (path.length) {\n      target = path.pop() as HTMLElement;\n\n      if (target && isElementTabbable(target)) {\n        this._setActiveElement(target, true);\n      }\n\n      if (isElementFocusZone(target)) {\n        // Stop here since the focus zone will take care of its own children.\n        break;\n      }\n    }\n  };\n\n  private _setActiveElement(element: HTMLElement, forceAlignment?: boolean): void {\n    const previousActiveElement = this._activeElement;\n\n    this._activeElement = element;\n\n    if (previousActiveElement) {\n      if (isElementFocusZone(previousActiveElement)) {\n        this._updateTabIndexes(previousActiveElement);\n      }\n\n      previousActiveElement.tabIndex = -1;\n    }\n\n    if (this._activeElement) {\n      if (!this._focusAlignment || forceAlignment) {\n        this._setFocusAlignment(element, true, true);\n      }\n\n      this._activeElement.tabIndex = 0;\n    }\n  }\n\n  private _preventDefaultWhenHandled(ev: React.KeyboardEvent<HTMLElement>): void {\n    this.props.preventDefaultWhenHandled && ev.preventDefault();\n  }\n\n  /**\n   * Handle the keystrokes.\n   */\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>, theme: ITheme): boolean | undefined => {\n    if (this._portalContainsElement(ev.target as HTMLElement)) {\n      // If the event target is inside a portal do not process the event.\n      return;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const { direction, disabled, isInnerZoneKeystroke, pagingSupportDisabled, shouldEnterInnerZone } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // If the default has been prevented, do not process keyboard events.\n    if (ev.isDefaultPrevented()) {\n      return;\n    }\n\n    if (this._getDocument().activeElement === this._root.current && this._isInnerZone) {\n      // If this element has focus, it is being controlled by a parent.\n      // Ignore the keystroke.\n      return;\n    }\n\n    if (\n      ((shouldEnterInnerZone && shouldEnterInnerZone(ev)) || (isInnerZoneKeystroke && isInnerZoneKeystroke(ev))) &&\n      this._isImmediateDescendantOfZone(ev.target as HTMLElement)\n    ) {\n      // Try to focus\n      const innerZone = this._getFirstInnerZone();\n\n      if (innerZone) {\n        if (!innerZone.focus(true)) {\n          return;\n        }\n      } else if (isElementFocusSubZone(ev.target as HTMLElement)) {\n        if (\n          !this.focusElement(\n            getNextElement(\n              ev.target as HTMLElement,\n              (ev.target as HTMLElement).firstChild as HTMLElement,\n              true,\n            ) as HTMLElement,\n          )\n        ) {\n          return;\n        }\n      } else {\n        return;\n      }\n    } else if (ev.altKey) {\n      return;\n    } else {\n      // eslint-disable-next-line @fluentui/deprecated-keyboard-event-props, deprecation/deprecation\n      switch (ev.which) {\n        case KeyCodes.space:\n          if (this._shouldRaiseClicksOnSpace && this._tryInvokeClickForFocusable(ev.target as HTMLElement)) {\n            break;\n          }\n          return;\n\n        case KeyCodes.left:\n          if (direction !== FocusZoneDirection.vertical) {\n            this._preventDefaultWhenHandled(ev);\n            if (this._moveFocusLeft(theme)) {\n              break;\n            }\n          }\n          return;\n\n        case KeyCodes.right:\n          if (direction !== FocusZoneDirection.vertical) {\n            this._preventDefaultWhenHandled(ev);\n            if (this._moveFocusRight(theme)) {\n              break;\n            }\n          }\n          return;\n\n        case KeyCodes.up:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this._preventDefaultWhenHandled(ev);\n            if (this._moveFocusUp()) {\n              break;\n            }\n          }\n          return;\n\n        case KeyCodes.down:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this._preventDefaultWhenHandled(ev);\n            if (this._moveFocusDown()) {\n              break;\n            }\n          }\n          return;\n        case KeyCodes.pageDown:\n          if (!pagingSupportDisabled && this._moveFocusPaging(true)) {\n            break;\n          }\n          return;\n        case KeyCodes.pageUp:\n          if (!pagingSupportDisabled && this._moveFocusPaging(false)) {\n            break;\n          }\n          return;\n\n        case KeyCodes.tab:\n          if (\n            // eslint-disable-next-line deprecation/deprecation\n            this.props.allowTabKey ||\n            this.props.handleTabKey === FocusZoneTabbableElements.all ||\n            (this.props.handleTabKey === FocusZoneTabbableElements.inputOnly &&\n              this._isElementInput(ev.target as HTMLElement))\n          ) {\n            let focusChanged = false;\n            this._processingTabKey = true;\n            if (\n              direction === FocusZoneDirection.vertical ||\n              !this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP)\n            ) {\n              focusChanged = ev.shiftKey ? this._moveFocusUp() : this._moveFocusDown();\n            } else {\n              const tabWithDirection = getRTL(theme) ? !ev.shiftKey : ev.shiftKey;\n              focusChanged = tabWithDirection ? this._moveFocusLeft(theme) : this._moveFocusRight(theme);\n            }\n            this._processingTabKey = false;\n            if (focusChanged) {\n              break;\n            } else if (this.props.shouldResetActiveElementWhenTabFromZone) {\n              this._activeElement = null;\n            }\n          }\n          return;\n\n        case KeyCodes.home:\n          if (\n            this._isContentEditableElement(ev.target as HTMLElement) ||\n            (this._isElementInput(ev.target as HTMLElement) &&\n              !this._shouldInputLoseFocus(ev.target as HTMLInputElement, false))\n          ) {\n            return false;\n          }\n          const firstChild = this._root.current && (this._root.current.firstChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            firstChild &&\n            this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return;\n\n        case KeyCodes.end:\n          if (\n            this._isContentEditableElement(ev.target as HTMLElement) ||\n            (this._isElementInput(ev.target as HTMLElement) &&\n              !this._shouldInputLoseFocus(ev.target as HTMLInputElement, true))\n          ) {\n            return false;\n          }\n\n          const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return;\n\n        case KeyCodes.enter:\n          if (this._shouldRaiseClicksOnEnter && this._tryInvokeClickForFocusable(ev.target as HTMLElement)) {\n            break;\n          }\n          return;\n\n        default:\n          return;\n      }\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n\n  /**\n   * Walk up the dom try to find a focusable element.\n   */\n  private _tryInvokeClickForFocusable(target: HTMLElement): boolean {\n    if (target === this._root.current) {\n      return false;\n    }\n\n    do {\n      if (\n        target.tagName === 'BUTTON' ||\n        target.tagName === 'A' ||\n        target.tagName === 'INPUT' ||\n        target.tagName === 'TEXTAREA'\n      ) {\n        return false;\n      }\n\n      if (\n        this._isImmediateDescendantOfZone(target) &&\n        target.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        target.getAttribute(IS_ENTER_DISABLED_ATTRIBUTE) !== 'true'\n      ) {\n        raiseClick(target);\n        return true;\n      }\n\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    } while (target !== this._root.current);\n\n    return false;\n  }\n\n  /**\n   * Traverse to find first child zone.\n   */\n  private _getFirstInnerZone(rootElement?: HTMLElement | null): FocusZone | null {\n    rootElement = rootElement || this._activeElement || this._root.current;\n\n    if (!rootElement) {\n      return null;\n    }\n\n    if (isElementFocusZone(rootElement)) {\n      return _allInstances[rootElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n    }\n\n    let child = rootElement.firstElementChild as HTMLElement | null;\n\n    while (child) {\n      if (isElementFocusZone(child)) {\n        return _allInstances[child.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n      }\n      const match = this._getFirstInnerZone(child);\n\n      if (match) {\n        return match;\n      }\n\n      child = child.nextElementSibling as HTMLElement | null;\n    }\n\n    return null;\n  }\n\n  private _moveFocus(\n    isForward: boolean,\n    getDistanceFromCenter: (activeRect: ClientRect, targetRect: ClientRect) => number,\n    ev?: Event,\n    useDefaultWrap: boolean = true,\n  ): boolean {\n    let element = this._activeElement;\n    let candidateDistance = -1;\n    let candidateElement: HTMLElement | undefined = undefined;\n    let changedFocus = false;\n    const isBidirectional = this.props.direction === FocusZoneDirection.bidirectional;\n\n    if (!element || !this._root.current) {\n      return false;\n    }\n\n    if (this._isElementInput(element)) {\n      if (!this._shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n\n    const activeRect = isBidirectional ? element.getBoundingClientRect() : null;\n\n    do {\n      element = (isForward\n        ? getNextElement(this._root.current, element)\n        : getPreviousElement(this._root.current, element)) as HTMLElement;\n\n      if (isBidirectional) {\n        if (element) {\n          const targetRect = element.getBoundingClientRect();\n          const elementDistance = getDistanceFromCenter(activeRect as ClientRect, targetRect);\n\n          if (elementDistance === -1 && candidateDistance === -1) {\n            candidateElement = element;\n            break;\n          }\n\n          if (elementDistance > -1 && (candidateDistance === -1 || elementDistance < candidateDistance)) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n\n          if (candidateDistance >= 0 && elementDistance < 0) {\n            break;\n          }\n        }\n      } else {\n        candidateElement = element;\n        break;\n      }\n    } while (element);\n\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      } else {\n        return this.focusElement(\n          getPreviousElement(\n            this._root.current,\n            this._root.current.lastElementChild as HTMLElement,\n            true,\n            true,\n            true,\n          ) as HTMLElement,\n        );\n      }\n    }\n\n    return changedFocus;\n  }\n\n  private _moveFocusDown(): boolean {\n    let targetTop = -1;\n    // eslint-disable-next-line deprecation/deprecation\n    const leftAlignment = this._focusAlignment.left || this._focusAlignment.x || 0;\n\n    if (\n      this._moveFocus(true, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n\n        if (targetRectTop < activeRectBottom) {\n          if (!this._shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectTop >= activeRectBottom) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, false, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusUp(): boolean {\n    let targetTop = -1;\n    // eslint-disable-next-line deprecation/deprecation\n    const leftAlignment = this._focusAlignment.left || this._focusAlignment.x || 0;\n\n    if (\n      this._moveFocus(false, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectTop = Math.floor(activeRect.top);\n\n        if (targetRectBottom > activeRectTop) {\n          if (!this._shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectBottom <= activeRectTop) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, false, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusLeft(theme: ITheme): boolean {\n    const shouldWrap = this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this._moveFocus(\n        getRTL(theme),\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (getRTL(theme)) {\n            // When in RTL, this comparison should be the same as the one in _moveFocusRight for LTR.\n            // Going left at a leftmost rectangle will go down a line instead of up a line like in LTR.\n            // This is important, because we want to be comparing the top of the target rect\n            // with the bottom of the active rect.\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.right <= activeRect.right &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = activeRect.right - targetRect.right;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /*ev*/,\n        shouldWrap,\n      )\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _moveFocusRight(theme: ITheme): boolean {\n    const shouldWrap = this._shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this._moveFocus(\n        !getRTL(theme),\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (getRTL(theme)) {\n            // When in RTL, this comparison should be the same as the one in _moveFocusLeft for LTR.\n            // Going right at a rightmost rectangle will go up a line instead of down a line like in LTR.\n            // This is important, because we want to be comparing the bottom of the target rect\n            // with the top of the active rect.\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.left >= activeRect.left &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = targetRect.left - activeRect.left;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /*ev*/,\n        shouldWrap,\n      )\n    ) {\n      this._setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getHorizontalDistanceFromCenter = (\n    isForward: boolean,\n    activeRect: ClientRect,\n    targetRect: ClientRect,\n  ): number => {\n    // eslint-disable-next-line deprecation/deprecation\n    const leftAlignment = this._focusAlignment.left || this._focusAlignment.x || 0;\n    // ClientRect values can be floats that differ by very small fractions of a decimal.\n    // If the difference between top and bottom are within a pixel then we should treat\n    // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n    // but without Math.Floor they will be handled incorrectly.\n    const targetRectTop = Math.floor(targetRect.top);\n    const activeRectBottom = Math.floor(activeRect.bottom);\n    const targetRectBottom = Math.floor(targetRect.bottom);\n    const activeRectTop = Math.floor(activeRect.top);\n    const isValidCandidateOnpagingDown = isForward && targetRectTop > activeRectBottom;\n    const isValidCandidateOnpagingUp = !isForward && targetRectBottom < activeRectTop;\n\n    if (isValidCandidateOnpagingDown || isValidCandidateOnpagingUp) {\n      if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n        return 0;\n      }\n      return Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n    }\n\n    if (!this._shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n      return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n    }\n    return LARGE_DISTANCE_FROM_CENTER;\n  };\n\n  private _moveFocusPaging(isForward: boolean, useDefaultWrap: boolean = true): boolean {\n    let element = this._activeElement;\n    if (!element || !this._root.current) {\n      return false;\n    }\n    if (this._isElementInput(element)) {\n      if (!this._shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n    const scrollableParent = findScrollableParent(element);\n    if (!scrollableParent) {\n      return false;\n    }\n    let candidateDistance = -1;\n    let candidateElement = undefined;\n    let targetTop = -1;\n    let targetBottom = -1;\n    const pagesize = (scrollableParent as HTMLElement).clientHeight;\n    const activeRect = element.getBoundingClientRect();\n    do {\n      element = isForward\n        ? getNextElement(this._root.current, element)\n        : getPreviousElement(this._root.current, element);\n      if (element) {\n        const targetRect = element.getBoundingClientRect();\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const activeRectTop = Math.floor(activeRect.top);\n        const elementDistance = this._getHorizontalDistanceFromCenter(isForward, activeRect, targetRect);\n        const isElementPassedPageSizeOnPagingDown = isForward && targetRectTop > activeRectBottom + pagesize;\n        const isElementPassedPageSizeOnPagingUp = !isForward && targetRectBottom < activeRectTop - pagesize;\n\n        if (isElementPassedPageSizeOnPagingDown || isElementPassedPageSizeOnPagingUp) {\n          break;\n        }\n        if (elementDistance > -1) {\n          // for paging down\n          if (isForward && targetRectTop > targetTop) {\n            targetTop = targetRectTop;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else if (!isForward && targetRectBottom < targetBottom) {\n            // for paging up\n            targetBottom = targetRectBottom;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else if (candidateDistance === -1 || elementDistance <= candidateDistance) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n        }\n      }\n    } while (element);\n\n    let changedFocus = false;\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n      this._setFocusAlignment(candidateElement as HTMLElement, false, true);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      }\n      return this.focusElement(\n        getPreviousElement(\n          this._root.current,\n          this._root.current.lastElementChild as HTMLElement,\n          true,\n          true,\n          true,\n        ) as HTMLElement,\n      );\n    }\n    return changedFocus;\n  }\n\n  private _setFocusAlignment(element: HTMLElement, isHorizontal?: boolean, isVertical?: boolean): void {\n    if (\n      this.props.direction === FocusZoneDirection.bidirectional &&\n      (!this._focusAlignment || isHorizontal || isVertical)\n    ) {\n      const rect = element.getBoundingClientRect();\n      const left = rect.left + rect.width / 2;\n      const top = rect.top + rect.height / 2;\n\n      if (!this._focusAlignment) {\n        this._focusAlignment = { left, top };\n      }\n\n      if (isHorizontal) {\n        this._focusAlignment.left = left;\n      }\n\n      if (isVertical) {\n        this._focusAlignment.top = top;\n      }\n    }\n  }\n\n  private _isImmediateDescendantOfZone(element?: HTMLElement): boolean {\n    return this._getOwnerZone(element) === this._root.current;\n  }\n\n  private _getOwnerZone(element?: HTMLElement): HTMLElement | null {\n    let parentElement = getParent(element as HTMLElement, ALLOW_VIRTUAL_ELEMENTS);\n\n    while (parentElement && parentElement !== this._root.current && parentElement !== this._getDocument().body) {\n      if (isElementFocusZone(parentElement)) {\n        return parentElement;\n      }\n\n      parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n    }\n\n    return parentElement;\n  }\n\n  private _updateTabIndexes(element?: HTMLElement): void {\n    if (\n      !this._activeElement &&\n      this.props.defaultTabbableElement &&\n      typeof this.props.defaultTabbableElement === 'function'\n    ) {\n      this._activeElement = this.props.defaultTabbableElement(this._root.current as HTMLElement);\n    }\n\n    if (!element && this._root.current) {\n      this._defaultFocusElement = null;\n      element = this._root.current;\n      if (this._activeElement && !elementContains(element, this._activeElement)) {\n        this._activeElement = null;\n      }\n    }\n\n    // If active element changes state to disabled, set it to null.\n    // Otherwise, we lose keyboard accessibility to other elements in focus zone.\n    if (this._activeElement && !isElementTabbable(this._activeElement)) {\n      this._activeElement = null;\n    }\n\n    const childNodes = element && element.children;\n\n    for (let childIndex = 0; childNodes && childIndex < childNodes.length; childIndex++) {\n      const child = childNodes[childIndex] as HTMLElement;\n\n      if (!isElementFocusZone(child)) {\n        // If the item is explicitly set to not be focusable then TABINDEX needs to be set to -1.\n        if (child.getAttribute && child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'false') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n\n        if (isElementTabbable(child)) {\n          if (this.props.disabled) {\n            child.setAttribute(TABINDEX, '-1');\n          } else if (\n            !this._isInnerZone &&\n            ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n          ) {\n            this._defaultFocusElement = child;\n            if (child.getAttribute(TABINDEX) !== '0') {\n              child.setAttribute(TABINDEX, '0');\n            }\n          } else if (child.getAttribute(TABINDEX) !== '-1') {\n            child.setAttribute(TABINDEX, '-1');\n          }\n        } else if (child.tagName === 'svg' && child.getAttribute('focusable') !== 'false') {\n          // Disgusting IE hack. Sad face.\n          child.setAttribute('focusable', 'false');\n        }\n      } else if (child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true') {\n        if (\n          !this._isInnerZone &&\n          ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n        ) {\n          this._defaultFocusElement = child;\n          if (child.getAttribute(TABINDEX) !== '0') {\n            child.setAttribute(TABINDEX, '0');\n          }\n        } else if (child.getAttribute(TABINDEX) !== '-1') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n      }\n\n      this._updateTabIndexes(child);\n    }\n  }\n\n  private _isContentEditableElement(element: HTMLElement): boolean {\n    return element && element.getAttribute('contenteditable') === 'true';\n  }\n\n  private _isElementInput(element: HTMLElement): boolean {\n    if (\n      element &&\n      element.tagName &&\n      (element.tagName.toLowerCase() === 'input' || element.tagName.toLowerCase() === 'textarea')\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private _shouldInputLoseFocus(element: HTMLInputElement, isForward?: boolean): boolean {\n    // If a tab was used, we want to focus on the next element.\n    if (\n      !this._processingTabKey &&\n      element &&\n      element.type &&\n      ALLOWED_INPUT_TYPES.indexOf(element.type.toLowerCase()) > -1\n    ) {\n      const selectionStart = element.selectionStart;\n      const selectionEnd = element.selectionEnd;\n      const isRangeSelected = selectionStart !== selectionEnd;\n      const inputValue = element.value;\n      const isReadonly = element.readOnly;\n\n      // We shouldn't lose focus in the following cases:\n      // 1. There is range selected.\n      // 2. When selection start is larger than 0 and it is backward and not readOnly.\n      // 3. when selection start is not the end of length, it is forward and not readOnly.\n      // 4. We press any of the arrow keys when our handleTabKey isn't none or undefined (only losing focus if we hit\n      // tab) and if shouldInputLoseFocusOnArrowKey is defined, if scenario prefers to not loose the focus which is\n      // determined by calling the callback shouldInputLoseFocusOnArrowKey\n      if (\n        isRangeSelected ||\n        (selectionStart! > 0 && !isForward && !isReadonly) ||\n        (selectionStart !== inputValue.length && isForward && !isReadonly) ||\n        (!!this.props.handleTabKey &&\n          !(this.props.shouldInputLoseFocusOnArrowKey && this.props.shouldInputLoseFocusOnArrowKey(element)))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private _shouldWrapFocus(\n    element: HTMLElement,\n    noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap',\n  ): boolean {\n    return this.props.checkForNoWrap ? shouldWrapFocus(element, noWrapDataAttribute) : true;\n  }\n\n  /**\n   * Returns true if the element is a descendant of the FocusZone through a React portal.\n   */\n  private _portalContainsElement(element: HTMLElement): boolean {\n    return element && !!this._root.current && portalContainsElement(element, this._root.current);\n  }\n\n  private _getDocument(): Document {\n    return getDocument(this._root.current)!;\n  }\n}\n","import { getWindow } from './dom/getWindow';\n\nlet isMacResult: boolean | undefined;\n\n/**\n * Returns true if the user is on a Mac. Caches the result value.\n * @param reset - Reset the cached result value (mainly for testing).\n */\nexport function isMac(reset?: boolean): boolean {\n  if (typeof isMacResult === 'undefined' || reset) {\n    const win = getWindow();\n    // In certain SSR frameworks, `window` will be defined even on the server but `navigator` will be undefined\n    const userAgent = win?.navigator?.userAgent;\n    isMacResult = !!userAgent && userAgent.indexOf('Macintosh') !== -1;\n  }\n  return !!isMacResult;\n}\n","/**\n * Returns true if and only if the user is on a iOS device.\n * Used to determine whether iOS-specific behavior should be applied.\n */\nexport const isIOS = (): boolean => {\n  if (!window || !window.navigator || !window.navigator.userAgent) {\n    return false;\n  }\n  return /iPad|iPhone|iPod/i.test(window.navigator.userAgent);\n};\n","import { DirectionalHint } from '../../common/DirectionalHint';\nimport type { IRectangle, Point } from '../../Utilities';\n\nexport enum RectangleEdge {\n  top = 1,\n  bottom = -1,\n  left = 2,\n  right = -2,\n}\n\nexport enum Position {\n  top = 0,\n  bottom = 1,\n  start = 2,\n  end = 3,\n}\n\n/**\n * Window with typings for experimental features regarding Dual Screen devices.\n */\nexport interface IWindowWithSegments extends Window {\n  getWindowSegments?: () => DOMRect[];\n}\n\nexport interface IPositionProps {\n  target?: Element | MouseEvent | Point;\n  /** how the element should be positioned */\n  directionalHint?: DirectionalHint;\n  /**\n   * How the element should be positioned in RTL layouts.\n   * If not specified, a mirror of `directionalHint` will be used instead\n   */\n  directionalHintForRTL?: DirectionalHint;\n  /** The gap between the callout and the target */\n  gapSpace?: number;\n  /**\n   * The bounding rectangle for which  the contextual menu can appear in.\n   */\n  bounds?: IRectangle;\n  /**\n   * If true the position returned will have the menu element cover the target.\n   * If false then it will position next to the target;\n   */\n  coverTarget?: boolean;\n  /**\n   * If true the position will not change edges in an attempt to fit the rectangle within bounds.\n   * It will still attempt to align it to whatever bounds are given.\n   * @defaultvalue false\n   */\n  directionalHintFixed?: boolean;\n\n  /**\n   * If true the positioning logic will prefer flipping edges over nudging the rectangle to fit within bounds,\n   * thus making sure the element align perfectly with target.\n   */\n  alignTargetEdge?: boolean;\n}\n\nexport interface ICalloutPositionProps extends IPositionProps {\n  /**\n   * The width of the beak.\n   */\n  beakWidth?: number;\n\n  /**\n   * Whether or not the beak is visible\n   */\n  isBeakVisible?: boolean;\n}\n\nexport interface IPositionedData {\n  /**\n   * The new position of the element.\n   */\n  elementPosition: IPosition;\n  /**\n   * The finalized target edge that element is aligning to. For instance RectangleEdge.bottom would mean\n   * that the bottom edge of the target is being aligned to by the RectangleEdge.top of the element\n   * that is being positioned.\n   */\n  targetEdge: RectangleEdge;\n  /**\n   * The finalized alignment edge that the element is aligning too. For instance, RectangleEdge.left means\n   * that the left edge of the target should be in line with the left edge of the element being positioned.\n   */\n  alignmentEdge?: RectangleEdge;\n}\n\nexport interface ICalloutPositionedInfo extends IPositionedData {\n  beakPosition: ICalloutBeakPositionedInfo;\n}\n\nexport interface ICalloutBeakPositionedInfo extends IPositionedData {\n  closestEdge: RectangleEdge;\n  hideBeak?: boolean;\n}\n\n/**\n * Gives the position of some element on the page. Only a pair of vertical and horizontal edges need to be\n * given. So top/left or bottom/left is sufficient.\n * The number given is the distance in pixels from whatever host was given..\n * So bottom: 100 would be 100px up from the bottom of the host while top: 100px from the top.\n */\nexport interface IPosition {\n  top?: number;\n  left?: number;\n  bottom?: number;\n  right?: number;\n  [key: string]: number | undefined;\n}\n\nexport interface IPositionDirectionalHintData {\n  targetEdge: RectangleEdge;\n  alignmentEdge?: RectangleEdge;\n  isAuto?: boolean;\n  alignTargetEdge?: boolean;\n}\n\nexport interface IRelativePositions {\n  calloutPosition: IPosition;\n  beakPosition: { position: IPosition | undefined; display: 'block' };\n  directionalClassName: string;\n  submenuDirection: DirectionalHint;\n}\n\n// eslint-disable-next-line deprecation/deprecation\nexport type { Point, IPoint } from '../../Utilities';\n","/**\n * Function to apply default values to a component props object. This function is intended for function components,\n * to maintain parity with the `defaultProps` feature of class components. It accounts for properties that are\n * specified, but undefined.\n * @param defaultProps- An object with default values for various properties\n * @param propsWithoutDefaults- The props object passed into the component\n */\nexport function getPropsWithDefaults<TProps extends {}>(\n  defaultProps: Partial<TProps>,\n  propsWithoutDefaults: TProps,\n): TProps {\n  const props = { ...propsWithoutDefaults };\n  for (const key of Object.keys(defaultProps) as (keyof TProps)[]) {\n    if (props[key] === undefined) {\n      props[key] = defaultProps[key]!;\n    }\n  }\n\n  return props;\n}\n","import type { IContextualMenuItem } from '../../index';\n\n/**\n * Determines the effective checked state of a menu item.\n *\n * @param item {IContextualMenuItem} to get the check state of.\n * @returns {true} if the item is checked.\n * @returns {false} if the item is unchecked.\n * @returns {null} if the item is not checkable.\n */\nexport function getIsChecked(item: IContextualMenuItem): boolean | null {\n  if (item.canCheck) {\n    return !!(item.isChecked || item.checked);\n  }\n\n  if (typeof item.isChecked === 'boolean') {\n    return item.isChecked;\n  }\n\n  if (typeof item.checked === 'boolean') {\n    return item.checked;\n  }\n\n  // Item is not checkable.\n  return null;\n}\n\nexport function hasSubmenu(item: IContextualMenuItem): boolean {\n  // eslint-disable-next-line deprecation/deprecation\n  return !!(item.subMenuProps || item.items);\n}\n\nexport function isItemDisabled(item: IContextualMenuItem): boolean {\n  return !!(item.isDisabled || item.disabled);\n}\n\nexport function getMenuItemAriaRole(item: IContextualMenuItem): string {\n  const isChecked = getIsChecked(item);\n  const canCheck: boolean = isChecked !== null;\n  return canCheck ? 'menuitemcheckbox' : 'menuitem';\n}\n","export function on(\n  element: Element | Window | Document,\n  eventName: string,\n  callback: (ev: Event) => void,\n  options?: boolean,\n): () => void {\n  element.addEventListener(eventName, callback, options);\n\n  return () => element.removeEventListener(eventName, callback, options);\n}\n","/**\n * Rectangle helper class.\n *\n * @public\n * {@docCategory Rectangle}\n */\nexport class Rectangle {\n  public top: number;\n  public bottom: number;\n  public left: number;\n  public right: number;\n\n  constructor(left: number = 0, right: number = 0, top: number = 0, bottom: number = 0) {\n    this.top = top;\n    this.bottom = bottom;\n    this.left = left;\n    this.right = right;\n  }\n\n  /**\n   * Calculated automatically by subtracting the right from left\n   */\n  public get width(): number {\n    return this.right - this.left;\n  }\n\n  /**\n   * Calculated automatically by subtracting the bottom from top.\n   */\n  public get height(): number {\n    return this.bottom - this.top;\n  }\n\n  /**\n   * Tests if another rect is approximately equal to this rect (within 4 decimal places.)\n   */\n  public equals(rect: Rectangle): boolean {\n    // Fixing to 4 decimal places because it allows enough precision and will handle cases when something\n    // should be rounded, like .999999 should round to 1.\n    return (\n      parseFloat(this.top.toFixed(4)) === parseFloat(rect.top.toFixed(4)) &&\n      parseFloat(this.bottom.toFixed(4)) === parseFloat(rect.bottom.toFixed(4)) &&\n      parseFloat(this.left.toFixed(4)) === parseFloat(rect.left.toFixed(4)) &&\n      parseFloat(this.right.toFixed(4)) === parseFloat(rect.right.toFixed(4))\n    );\n  }\n}\n","import { DirectionalHint } from '../../common/DirectionalHint';\nimport { getScrollbarWidth, getRTL } from '../../Utilities';\nimport { RectangleEdge } from './positioning.types';\nimport { Rectangle } from '../../Utilities';\nimport type { IRectangle, Point } from '../../Utilities';\nimport type {\n  IPositionDirectionalHintData,\n  IPositionedData,\n  ICalloutPositionedInfo,\n  ICalloutBeakPositionedInfo,\n  IPositionProps,\n  ICalloutPositionProps,\n  IWindowWithSegments,\n} from './positioning.types';\n\nfunction _createPositionData(\n  targetEdge: RectangleEdge,\n  alignmentEdge?: RectangleEdge,\n  isAuto?: boolean,\n): IPositionDirectionalHintData {\n  return {\n    targetEdge: targetEdge,\n    alignmentEdge: alignmentEdge,\n    isAuto: isAuto,\n  };\n}\n\n// Currently the beakPercent is set to 50 for all positions meaning that it should tend to the center of the target\nconst DirectionalDictionary: { [key: number]: IPositionDirectionalHintData } = {\n  [DirectionalHint.topLeftEdge]: _createPositionData(RectangleEdge.top, RectangleEdge.left),\n  [DirectionalHint.topCenter]: _createPositionData(RectangleEdge.top),\n  [DirectionalHint.topRightEdge]: _createPositionData(RectangleEdge.top, RectangleEdge.right),\n  [DirectionalHint.topAutoEdge]: _createPositionData(RectangleEdge.top, undefined, true),\n  [DirectionalHint.bottomLeftEdge]: _createPositionData(RectangleEdge.bottom, RectangleEdge.left),\n  [DirectionalHint.bottomCenter]: _createPositionData(RectangleEdge.bottom),\n  [DirectionalHint.bottomRightEdge]: _createPositionData(RectangleEdge.bottom, RectangleEdge.right),\n  [DirectionalHint.bottomAutoEdge]: _createPositionData(RectangleEdge.bottom, undefined, true),\n  [DirectionalHint.leftTopEdge]: _createPositionData(RectangleEdge.left, RectangleEdge.top),\n  [DirectionalHint.leftCenter]: _createPositionData(RectangleEdge.left),\n  [DirectionalHint.leftBottomEdge]: _createPositionData(RectangleEdge.left, RectangleEdge.bottom),\n  [DirectionalHint.rightTopEdge]: _createPositionData(RectangleEdge.right, RectangleEdge.top),\n  [DirectionalHint.rightCenter]: _createPositionData(RectangleEdge.right),\n  [DirectionalHint.rightBottomEdge]: _createPositionData(RectangleEdge.right, RectangleEdge.bottom),\n};\n\n/**\n * Do not call methods from this directly, use either positionCallout or positionElement or make another function that\n * utilizes them.\n * START Private functions and interfaces\n */\n\nexport interface IElementPosition {\n  elementRectangle: Rectangle;\n  targetEdge: RectangleEdge;\n  alignmentEdge: RectangleEdge | undefined;\n  forcedInBounds?: boolean;\n}\n\nexport interface IElementPositionInfo extends IElementPosition {\n  targetRectangle: Rectangle;\n}\n\ntype PartialIRectangle = Partial<IRectangle>;\n\ninterface IPartialIRectangle extends PartialIRectangle {\n  [key: string]: number | undefined;\n}\n\nfunction _isRectangleWithinBounds(rect: Rectangle, boundingRect: Rectangle): boolean {\n  if (rect.top < boundingRect.top) {\n    return false;\n  }\n  if (rect.bottom > boundingRect.bottom) {\n    return false;\n  }\n  if (rect.left < boundingRect.left) {\n    return false;\n  }\n  if (rect.right > boundingRect.right) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Gets all of the edges of a rectangle that are outside of the given bounds.\n * If there are no out of bounds edges it returns an empty array.\n */\nfunction _getOutOfBoundsEdges(rect: Rectangle, boundingRect: Rectangle): RectangleEdge[] {\n  const outOfBounds: RectangleEdge[] = [];\n\n  if (rect.top < boundingRect.top) {\n    outOfBounds.push(RectangleEdge.top);\n  }\n  if (rect.bottom > boundingRect.bottom) {\n    outOfBounds.push(RectangleEdge.bottom);\n  }\n  if (rect.left < boundingRect.left) {\n    outOfBounds.push(RectangleEdge.left);\n  }\n  if (rect.right > boundingRect.right) {\n    outOfBounds.push(RectangleEdge.right);\n  }\n\n  return outOfBounds;\n}\n\nfunction _getEdgeValue(rect: Rectangle, edge: RectangleEdge): number {\n  return (rect as any)[RectangleEdge[edge]] as number;\n}\n\nfunction _setEdgeValue(rect: Rectangle, edge: RectangleEdge, value: number) {\n  (rect as any)[RectangleEdge[edge]] = value;\n  return rect;\n}\n\n/**\n * Returns the middle value of an edge. Only returns 1 value rather than xy coordinates as\n * the itself already contains the other coordinate.\n * For instance, a bottom edge's current value is it's y coordinate, so the number returned is the x.\n */\nfunction _getCenterValue(rect: Rectangle, edge: RectangleEdge): number {\n  const edges = _getFlankingEdges(edge);\n  return (_getEdgeValue(rect, edges.positiveEdge) + _getEdgeValue(rect, edges.negativeEdge)) / 2;\n}\n\n/**\n * Flips the value depending on the edge.\n * If the edge is a \"positive\" edge, Top or Left, then the value should stay as it is.\n * If the edge is a \"negative\" edge, Bottom or Right, then the value should be flipped.\n * This is to account for the fact that the coordinates are effectively reserved in certain cases for the\n * \"negative\" edges.\n *\n * For example, when testing to see if a bottom edge 1 is within the bounds of another bottom edge 2:\n * If edge 1 is greater than edge 2 then it is out of bounds. This is reversed for top edge 1 and top edge 2.\n * If top edge 1 is less than edge 2 then it is out of bounds.\n */\nfunction _getRelativeEdgeValue(edge: RectangleEdge, value: number): number {\n  if (edge > 0) {\n    return value;\n  } else {\n    return value * -1;\n  }\n}\n\nfunction _getRelativeRectEdgeValue(edge: RectangleEdge, rect: Rectangle): number {\n  return _getRelativeEdgeValue(edge, _getEdgeValue(rect, edge));\n}\n\nfunction _getRelativeEdgeDifference(rect: Rectangle, hostRect: Rectangle, edge: RectangleEdge): number {\n  const edgeDifference = _getEdgeValue(rect, edge) - _getEdgeValue(hostRect, edge);\n  return _getRelativeEdgeValue(edge, edgeDifference);\n}\n\n/**\n * Moves the edge of a rectangle to the value given. It only moves the edge in a linear direction based on that edge.\n * For example, if it's a bottom edge it will only change y coordinates.\n * if maintainSize is set to false, it will only adjust the specified edge value\n */\nfunction _moveEdge(rect: Rectangle, edge: RectangleEdge, newValue: number, maintainSize = true): Rectangle {\n  const difference = _getEdgeValue(rect, edge) - newValue;\n  let returnRect = _setEdgeValue(rect, edge, newValue);\n  if (maintainSize) {\n    returnRect = _setEdgeValue(rect, edge * -1, _getEdgeValue(rect, edge * -1) - difference);\n  }\n  return returnRect;\n}\n\n/**\n * Aligns the edge on the passed in rect to the target. If there is a gap then it will have that space between the two.\n */\nfunction _alignEdges(rect: Rectangle, target: Rectangle, edge: RectangleEdge, gap: number = 0): Rectangle {\n  return _moveEdge(rect, edge, _getEdgeValue(target, edge) + _getRelativeEdgeValue(edge, gap));\n}\n\n/**\n * Aligns the targetEdge on the passed in target to the rects corresponding opposite edge.\n * For instance if targetEdge is bottom, then the rects top will be moved to match it.\n */\nfunction _alignOppositeEdges(\n  rect: Rectangle,\n  target: Rectangle,\n  targetEdge: RectangleEdge,\n  gap: number = 0,\n): Rectangle {\n  const oppositeEdge = targetEdge * -1;\n  const adjustedGap = _getRelativeEdgeValue(oppositeEdge, gap);\n  return _moveEdge(rect, targetEdge * -1, _getEdgeValue(target, targetEdge) + adjustedGap);\n}\n\n/**\n * Tests to see if the given edge is within the bounds of the given rectangle.\n */\nfunction _isEdgeInBounds(rect: Rectangle, bounds: Rectangle, edge: RectangleEdge): boolean {\n  const adjustedRectValue = _getRelativeRectEdgeValue(edge, rect);\n  return adjustedRectValue > _getRelativeRectEdgeValue(edge, bounds);\n}\n\n/**\n * Returns a measure of how much a rectangle is out of bounds for a given alignment;\n * this can be used to compare which rectangle is more or less out of bounds.\n * A value of 0 means the rectangle is entirely in bounds\n */\nfunction _getOutOfBoundsDegree(rect: Rectangle, bounds: Rectangle) {\n  const breakingEdges = _getOutOfBoundsEdges(rect, bounds);\n  let total = 0;\n  for (const edge of breakingEdges) {\n    total += _getRelativeEdgeDifference(rect, bounds, edge) ** 2;\n  }\n\n  return total;\n}\n\n/**\n * Attempts to move the rectangle through various sides of the target to find a place to fit.\n * If no fit is found, the least bad option should be returned.\n */\nfunction _flipToFit(\n  rect: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n): IElementPosition {\n  const directions: RectangleEdge[] = [\n    RectangleEdge.left,\n    RectangleEdge.right,\n    RectangleEdge.bottom,\n    RectangleEdge.top,\n  ];\n  // In RTL page, RectangleEdge.right has a higher priority than RectangleEdge.left, so the order should be updated.\n  if (getRTL()) {\n    directions[0] *= -1;\n    directions[1] *= -1;\n  }\n  let currentEstimate = rect;\n  let currentEdge = positionData.targetEdge;\n  let currentAlignment = positionData.alignmentEdge;\n\n  // keep track of least bad option, in case no sides fit\n  let oobDegree;\n  let bestEdge = currentEdge;\n  let bestAlignment = currentAlignment;\n\n  // Keep switching sides until one is found with enough space.\n  // If all sides don't fit then return the unmodified element.\n  for (let i = 0; i < 4; i++) {\n    if (!_isEdgeInBounds(currentEstimate, bounding, currentEdge)) {\n      // update least-bad edges\n      const currentOOBDegree = _getOutOfBoundsDegree(currentEstimate, bounding);\n      if (!oobDegree || currentOOBDegree < oobDegree) {\n        oobDegree = currentOOBDegree;\n        bestEdge = currentEdge;\n        bestAlignment = currentAlignment;\n      }\n\n      directions.splice(directions.indexOf(currentEdge), 1);\n      if (directions.length > 0) {\n        if (directions.indexOf(currentEdge * -1) > -1) {\n          currentEdge = currentEdge * -1;\n        } else {\n          currentAlignment = currentEdge;\n          currentEdge = directions.slice(-1)[0];\n        }\n        currentEstimate = _estimatePosition(\n          rect,\n          target,\n          { targetEdge: currentEdge, alignmentEdge: currentAlignment },\n          gap,\n        );\n      }\n    } else {\n      return {\n        elementRectangle: currentEstimate,\n        targetEdge: currentEdge,\n        alignmentEdge: currentAlignment,\n      };\n    }\n  }\n\n  // nothing fits, use least-bad option\n  currentEstimate = _estimatePosition(rect, target, { targetEdge: bestEdge, alignmentEdge: bestAlignment }, gap);\n  return {\n    elementRectangle: currentEstimate,\n    targetEdge: bestEdge,\n    alignmentEdge: bestAlignment,\n  };\n}\n\n/**\n * Flips only the alignment edge of an element rectangle. This is used instead of nudging the alignment edges\n * into position, when `alignTargetEdge` is specified.\n */\nfunction _flipAlignmentEdge(\n  elementEstimate: IElementPosition,\n  target: Rectangle,\n  gap: number,\n  coverTarget?: boolean,\n): IElementPosition {\n  const { alignmentEdge, targetEdge, elementRectangle } = elementEstimate;\n  const oppositeEdge = alignmentEdge! * -1;\n  const newEstimate = _estimatePosition(\n    elementRectangle,\n    target,\n    { targetEdge: targetEdge, alignmentEdge: oppositeEdge },\n    gap,\n    coverTarget,\n  );\n\n  return {\n    elementRectangle: newEstimate,\n    targetEdge: targetEdge,\n    alignmentEdge: oppositeEdge,\n  };\n}\n\n/**\n * Adjusts a element rectangle to fit within the bounds given. If directionalHintFixed or covertarget is passed in\n * then the element will not flip sides on the target. They will, however, be nudged to fit within the bounds given.\n */\nfunction _adjustFitWithinBounds(\n  element: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n  directionalHintFixed?: boolean,\n  coverTarget?: boolean,\n): IElementPosition {\n  const { alignmentEdge, alignTargetEdge } = positionData;\n  let elementEstimate: IElementPosition = {\n    elementRectangle: element,\n    targetEdge: positionData.targetEdge,\n    alignmentEdge: alignmentEdge,\n  };\n\n  if (!directionalHintFixed && !coverTarget) {\n    elementEstimate = _flipToFit(element, target, bounding, positionData, gap);\n  }\n  const outOfBounds = _getOutOfBoundsEdges(elementEstimate.elementRectangle, bounding);\n  // if directionalHintFixed is specified, we need to force the target edge to not change\n  // we need *-1 because targetEdge refers to the target's edge; the callout edge is the opposite\n  const fixedEdge = directionalHintFixed ? -elementEstimate.targetEdge : undefined;\n\n  if (outOfBounds.length > 0) {\n    if (alignTargetEdge) {\n      // The edge opposite to the alignment edge might be out of bounds.\n      // Flip alignment to see if we can get it within bounds.\n      if (elementEstimate.alignmentEdge && outOfBounds.indexOf(elementEstimate.alignmentEdge * -1) > -1) {\n        const flippedElementEstimate = _flipAlignmentEdge(elementEstimate, target, gap, coverTarget);\n        if (_isRectangleWithinBounds(flippedElementEstimate.elementRectangle, bounding)) {\n          return flippedElementEstimate;\n        } else {\n          // If the flipped elements edges are still out of bounds, try nudging it.\n          elementEstimate = _alignOutOfBoundsEdges(\n            _getOutOfBoundsEdges(flippedElementEstimate.elementRectangle, bounding),\n            elementEstimate,\n            bounding,\n            fixedEdge,\n          );\n        }\n      } else {\n        elementEstimate = _alignOutOfBoundsEdges(outOfBounds, elementEstimate, bounding, fixedEdge);\n      }\n    } else {\n      elementEstimate = _alignOutOfBoundsEdges(outOfBounds, elementEstimate, bounding, fixedEdge);\n    }\n  }\n\n  return elementEstimate;\n}\n\n/**\n * Iterates through a list of out of bounds edges and tries to nudge and align them.\n * @param outOfBoundsEdges - Array of edges that are out of bounds\n * @param elementEstimate - The current element positioning estimate\n * @param bounding - The current bounds\n * @param preserveEdge - Specify an edge that should not be modified\n */\nfunction _alignOutOfBoundsEdges(\n  outOfBoundsEdges: RectangleEdge[],\n  elementEstimate: IElementPosition,\n  bounding: Rectangle,\n  preserveEdge?: RectangleEdge,\n) {\n  for (const direction of outOfBoundsEdges) {\n    let edgeAttempt;\n\n    // if preserveEdge is specified, do not call _alignEdges, skip directly to _moveEdge\n    // this is because _alignEdges will move the opposite edge\n    if (preserveEdge && preserveEdge === direction * -1) {\n      edgeAttempt = _moveEdge(elementEstimate.elementRectangle, direction, _getEdgeValue(bounding, direction), false);\n      elementEstimate.forcedInBounds = true;\n    } else {\n      edgeAttempt = _alignEdges(elementEstimate.elementRectangle, bounding, direction);\n      const inBounds = _isEdgeInBounds(edgeAttempt, bounding, direction * -1);\n      // only update estimate if the attempt didn't break out of the opposite bounding edge\n      if (!inBounds) {\n        edgeAttempt = _moveEdge(edgeAttempt, direction * -1, _getEdgeValue(bounding, direction * -1), false);\n        elementEstimate.forcedInBounds = true;\n      }\n    }\n\n    elementEstimate.elementRectangle = edgeAttempt;\n  }\n\n  return elementEstimate;\n}\n\n/**\n * Moves the middle point on an edge to the point given.\n * Only moves in one direction. For instance if a bottom edge is passed in, then\n * the bottom edge will be moved in the x axis to match the point.\n */\nfunction _centerEdgeToPoint(rect: Rectangle, edge: RectangleEdge, point: number): Rectangle {\n  const { positiveEdge } = _getFlankingEdges(edge);\n  const elementMiddle = _getCenterValue(rect, edge);\n  const distanceToMiddle = elementMiddle - _getEdgeValue(rect, positiveEdge);\n  return _moveEdge(rect, positiveEdge, point - distanceToMiddle);\n}\n\n/**\n * Moves the element rectangle to be appropriately positioned relative to a given target.\n * Does not flip or adjust the element.\n */\nfunction _estimatePosition(\n  elementToPosition: Rectangle,\n  target: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number = 0,\n  coverTarget?: boolean,\n): Rectangle {\n  let estimatedElementPosition = new Rectangle(\n    elementToPosition.left,\n    elementToPosition.right,\n    elementToPosition.top,\n    elementToPosition.bottom,\n  );\n  const { alignmentEdge, targetEdge } = positionData;\n  const elementEdge = coverTarget ? targetEdge : targetEdge * -1;\n  estimatedElementPosition = coverTarget\n    ? _alignEdges(estimatedElementPosition, target, targetEdge, gap)\n    : _alignOppositeEdges(estimatedElementPosition, target, targetEdge, gap);\n  // if no alignment edge is provided it's supposed to be centered.\n  if (!alignmentEdge) {\n    const targetMiddlePoint = _getCenterValue(target, targetEdge);\n    estimatedElementPosition = _centerEdgeToPoint(estimatedElementPosition, elementEdge, targetMiddlePoint);\n  } else {\n    estimatedElementPosition = _alignEdges(estimatedElementPosition, target, alignmentEdge);\n  }\n\n  return estimatedElementPosition;\n}\n\n/**\n * Returns the non-opposite edges of the target edge.\n * For instance if bottom is passed in then left and right will be returned.\n */\nfunction _getFlankingEdges(edge: RectangleEdge): { positiveEdge: RectangleEdge; negativeEdge: RectangleEdge } {\n  if (edge === RectangleEdge.top || edge === RectangleEdge.bottom) {\n    return {\n      positiveEdge: RectangleEdge.left,\n      negativeEdge: RectangleEdge.right,\n    };\n  } else {\n    return {\n      positiveEdge: RectangleEdge.top,\n      negativeEdge: RectangleEdge.bottom,\n    };\n  }\n}\n\n/**\n * Retrieve the final value for the return edge of `elementRectangle`. If the `elementRectangle` is closer to one side\n * of the bounds versus the other, the return edge is flipped to grow inward.\n */\nfunction _finalizeReturnEdge(\n  elementRectangle: Rectangle,\n  returnEdge: RectangleEdge,\n  bounds?: Rectangle,\n): RectangleEdge {\n  if (\n    bounds &&\n    Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge)) >\n      Math.abs(_getRelativeEdgeDifference(elementRectangle, bounds, returnEdge * -1))\n  ) {\n    return returnEdge * -1;\n  }\n\n  return returnEdge;\n}\n\n/**\n * Whether or not the considered edge of the elementRectangle is lying on the edge of the bounds\n * @param elementRectangle The rectangle whose edge we are considering\n * @param bounds The rectangle marking the bounds\n * @param edge The target edge we're considering\n * @returns If the target edge of the elementRectangle is in the same location as that edge of the bounds\n */\nfunction _isEdgeOnBounds(elementRectangle: Rectangle, edge: RectangleEdge, bounds?: Rectangle): boolean {\n  return bounds !== undefined && _getEdgeValue(elementRectangle, edge) === _getEdgeValue(bounds, edge);\n}\n\n/**\n * Finalizes the element position based on the hostElement. Only returns the\n * rectangle values to position such that they are anchored to the target.\n * This helps prevent resizing from looking very strange.\n * For instance, if the target edge is top and aligned with the left side then\n * the bottom and left values are returned so as the Callout shrinks it shrinks towards that corner.\n */\nfunction _finalizeElementPosition(\n  elementRectangle: Rectangle,\n  hostElement: HTMLElement,\n  targetEdge: RectangleEdge,\n  bounds?: Rectangle,\n  alignmentEdge?: RectangleEdge,\n  coverTarget?: boolean,\n  doNotFinalizeReturnEdge?: boolean,\n  forceWithinBounds?: boolean,\n): IPartialIRectangle {\n  const returnValue: IPartialIRectangle = {};\n\n  const hostRect: Rectangle = _getRectangleFromElement(hostElement);\n  const elementEdge = coverTarget ? targetEdge : targetEdge * -1;\n  let returnEdge = alignmentEdge ? alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge;\n\n  // If we are finalizing the return edge, choose the edge such that we grow away from the bounds\n  // If we are not finalizing the return edge but the opposite edge is flush against the bounds,\n  // choose that as the anchor edge so the element rect can grow away from the bounds' edge\n  // In this case there will not be a visual difference because there is no more room for the elementRectangle to grow\n  // in the usual direction\n  if (!doNotFinalizeReturnEdge || _isEdgeOnBounds(elementRectangle, getOppositeEdge(returnEdge), bounds)) {\n    returnEdge = _finalizeReturnEdge(elementRectangle, returnEdge, bounds);\n  }\n\n  returnValue[RectangleEdge[elementEdge]] = _getRelativeEdgeDifference(elementRectangle, hostRect, elementEdge);\n  returnValue[RectangleEdge[returnEdge]] = _getRelativeEdgeDifference(elementRectangle, hostRect, returnEdge);\n\n  // if the positioned element will still overflow, return all four edges with in-bounds values\n  if (forceWithinBounds) {\n    returnValue[RectangleEdge[elementEdge * -1]] = _getRelativeEdgeDifference(\n      elementRectangle,\n      hostRect,\n      elementEdge * -1,\n    );\n    returnValue[RectangleEdge[returnEdge * -1]] = _getRelativeEdgeDifference(\n      elementRectangle,\n      hostRect,\n      returnEdge * -1,\n    );\n  }\n\n  return returnValue;\n}\n\n// Since the beak is rotated 45 degrees the actual height/width is the length of the diagonal.\n// We still want to position the beak based on it's midpoint which does not change. It will\n// be at (beakwidth / 2, beakwidth / 2)\nfunction _calculateActualBeakWidthInPixels(beakWidth: number): number {\n  return Math.sqrt(beakWidth * beakWidth * 2);\n}\n\n/**\n * Returns the appropriate IPositionData based on the props altered for RTL.\n * If directionalHintForRTL is passed in that is used if the page is RTL.\n * If directionalHint is specified, no directionalHintForRTL is available, and the page is RTL, the hint will be\n * flipped (e.g. bottomLeftEdge would become bottomRightEdge).\n *\n * If there is no directionalHint passed in, bottomAutoEdge is chosen automatically.\n */\nfunction _getPositionData(\n  directionalHint: DirectionalHint = DirectionalHint.bottomAutoEdge,\n  directionalHintForRTL?: DirectionalHint,\n  previousPositions?: IPositionDirectionalHintData,\n): IPositionDirectionalHintData {\n  if (previousPositions) {\n    return {\n      alignmentEdge: previousPositions.alignmentEdge,\n      isAuto: previousPositions.isAuto,\n      targetEdge: previousPositions.targetEdge,\n    };\n  }\n  const positionInformation: IPositionDirectionalHintData = { ...DirectionalDictionary[directionalHint] };\n  if (getRTL()) {\n    // If alignment edge exists and that alignment edge is -2 or 2, right or left, then flip it.\n    if (positionInformation.alignmentEdge && positionInformation.alignmentEdge % 2 === 0) {\n      positionInformation.alignmentEdge = positionInformation.alignmentEdge * -1;\n    }\n\n    return directionalHintForRTL !== undefined ? DirectionalDictionary[directionalHintForRTL] : positionInformation;\n  }\n  return positionInformation;\n}\n\n/**\n * Gets the alignment data for the given information. This only really matters if the positioning is Auto.\n * If it is auto then the alignmentEdge should be chosen based on the target edge's position relative to\n * the center of the page.\n */\nfunction _getAlignmentData(\n  positionData: IPositionDirectionalHintData,\n  target: Rectangle,\n  boundingRect: Rectangle,\n  coverTarget?: boolean,\n  alignTargetEdge?: boolean,\n): IPositionDirectionalHintData {\n  if (positionData.isAuto) {\n    positionData.alignmentEdge = getClosestEdge(positionData.targetEdge, target, boundingRect);\n  }\n\n  positionData.alignTargetEdge = alignTargetEdge;\n  return positionData;\n}\n\nfunction getClosestEdge(targetEdge: RectangleEdge, target: Rectangle, boundingRect: Rectangle): RectangleEdge {\n  const targetCenter: number = _getCenterValue(target, targetEdge);\n  const boundingCenter: number = _getCenterValue(boundingRect, targetEdge);\n  const { positiveEdge, negativeEdge } = _getFlankingEdges(targetEdge);\n  if (targetCenter <= boundingCenter) {\n    return positiveEdge;\n  } else {\n    return negativeEdge;\n  }\n}\n\nfunction _positionElementWithinBounds(\n  elementToPosition: Rectangle,\n  target: Rectangle,\n  bounding: Rectangle,\n  positionData: IPositionDirectionalHintData,\n  gap: number,\n  directionalHintFixed?: boolean,\n  coverTarget?: boolean,\n): IElementPosition {\n  const estimatedElementPosition: Rectangle = _estimatePosition(\n    elementToPosition,\n    target,\n    positionData,\n    gap,\n    coverTarget,\n  );\n  if (_isRectangleWithinBounds(estimatedElementPosition, bounding)) {\n    return {\n      elementRectangle: estimatedElementPosition,\n      targetEdge: positionData.targetEdge,\n      alignmentEdge: positionData.alignmentEdge,\n    };\n  } else {\n    return _adjustFitWithinBounds(\n      estimatedElementPosition,\n      target,\n      bounding,\n      positionData,\n      gap,\n      directionalHintFixed,\n      coverTarget,\n    );\n  }\n}\n\nfunction _finalizeBeakPosition(\n  elementPosition: IElementPositionInfo,\n  positionedBeak: Rectangle,\n  bounds?: Rectangle,\n): ICalloutBeakPositionedInfo {\n  const targetEdge = elementPosition.targetEdge * -1;\n  // The \"host\" element that we will use to help position the beak.\n  const actualElement = new Rectangle(\n    0,\n    elementPosition.elementRectangle.width,\n    0,\n    elementPosition.elementRectangle.height,\n  );\n  const returnValue: IPartialIRectangle = {};\n  const returnEdge = _finalizeReturnEdge(\n    elementPosition.elementRectangle,\n    elementPosition.alignmentEdge ? elementPosition.alignmentEdge : _getFlankingEdges(targetEdge).positiveEdge,\n    bounds,\n  );\n\n  // only show the beak if the callout is not fully covering the target\n  const beakEdgeDifference = _getRelativeEdgeDifference(\n    elementPosition.elementRectangle,\n    elementPosition.targetRectangle,\n    targetEdge,\n  );\n  const showBeak = beakEdgeDifference > Math.abs(_getEdgeValue(positionedBeak, targetEdge));\n\n  returnValue[RectangleEdge[targetEdge]] = _getEdgeValue(positionedBeak, targetEdge);\n  returnValue[RectangleEdge[returnEdge]] = _getRelativeEdgeDifference(positionedBeak, actualElement, returnEdge);\n\n  return {\n    elementPosition: { ...returnValue },\n    closestEdge: getClosestEdge(elementPosition.targetEdge, positionedBeak, actualElement),\n    targetEdge: targetEdge,\n    hideBeak: !showBeak,\n  };\n}\n\nfunction _positionBeak(beakWidth: number, elementPosition: IElementPositionInfo): Rectangle {\n  const target = elementPosition.targetRectangle;\n  /**\n   * Note about beak positioning: The actual beak width only matters for getting the gap between the callout and\n   * target, it does not impact the beak placement within the callout. For example example, if the beakWidth is 8,\n   * then the actual beakWidth is sqrroot(8^2 + 8^2) = 11.31x11.31. So the callout will need to be an extra 3 pixels\n   * away from its target. While the beak is being positioned in the callout it still acts as though it were 8x8.\n   */\n  const { positiveEdge, negativeEdge } = _getFlankingEdges(elementPosition.targetEdge);\n  const beakTargetPoint = _getCenterValue(target, elementPosition.targetEdge);\n  const elementBounds = new Rectangle(\n    beakWidth / 2,\n    elementPosition.elementRectangle.width - beakWidth / 2,\n    beakWidth / 2,\n    elementPosition.elementRectangle.height - beakWidth / 2,\n  );\n\n  let beakPosition: Rectangle = new Rectangle(0, beakWidth, 0, beakWidth);\n\n  beakPosition = _moveEdge(beakPosition, elementPosition.targetEdge * -1, -beakWidth / 2);\n\n  beakPosition = _centerEdgeToPoint(\n    beakPosition,\n    elementPosition.targetEdge * -1,\n    beakTargetPoint - _getRelativeRectEdgeValue(positiveEdge, elementPosition.elementRectangle),\n  );\n\n  if (!_isEdgeInBounds(beakPosition, elementBounds, positiveEdge)) {\n    beakPosition = _alignEdges(beakPosition, elementBounds, positiveEdge);\n  } else if (!_isEdgeInBounds(beakPosition, elementBounds, negativeEdge)) {\n    beakPosition = _alignEdges(beakPosition, elementBounds, negativeEdge);\n  }\n\n  return beakPosition;\n}\n\nfunction _getRectangleFromElement(element: Element): Rectangle {\n  const clientRect: ClientRect = element.getBoundingClientRect();\n\n  return new Rectangle(clientRect.left, clientRect.right, clientRect.top, clientRect.bottom);\n}\n\nfunction _getRectangleFromIRect(rect: IRectangle): Rectangle {\n  return new Rectangle(rect.left, rect.right, rect.top, rect.bottom);\n}\n\nfunction _getTargetRect(bounds: Rectangle, target: Element | MouseEvent | Point | Rectangle | undefined): Rectangle {\n  let targetRectangle: Rectangle;\n  if (target) {\n    // eslint-disable-next-line no-extra-boolean-cast\n    if (!!(target as MouseEvent).preventDefault) {\n      const ev = target as MouseEvent;\n      targetRectangle = new Rectangle(ev.clientX, ev.clientX, ev.clientY, ev.clientY);\n      // eslint-disable-next-line no-extra-boolean-cast\n    } else if (!!(target as Element).getBoundingClientRect) {\n      targetRectangle = _getRectangleFromElement(target as Element);\n      // HTMLImgElements can have x and y values. The check for it being a point must go last.\n    } else {\n      const rectOrPoint: Point & Rectangle = target as Point & Rectangle;\n      // eslint-disable-next-line deprecation/deprecation\n      const left = rectOrPoint.left || rectOrPoint.x;\n      // eslint-disable-next-line deprecation/deprecation\n      const top = rectOrPoint.top || rectOrPoint.y;\n      const right = rectOrPoint.right || left;\n      const bottom = rectOrPoint.bottom || top;\n      targetRectangle = new Rectangle(left, right, top, bottom);\n    }\n\n    if (!_isRectangleWithinBounds(targetRectangle, bounds)) {\n      const outOfBounds: RectangleEdge[] = _getOutOfBoundsEdges(targetRectangle, bounds);\n\n      for (const direction of outOfBounds) {\n        (targetRectangle as any)[RectangleEdge[direction]] = (bounds as any)[RectangleEdge[direction]];\n      }\n    }\n  } else {\n    targetRectangle = new Rectangle(0, 0, 0, 0);\n  }\n\n  return targetRectangle;\n}\n\n/**\n * If max height is less than zero it returns the bounds height instead.\n */\nfunction _getMaxHeightFromTargetRectangle(\n  targetRectangle: Rectangle,\n  targetEdge: DirectionalHint,\n  gapSpace: number,\n  bounds: Rectangle,\n  coverTarget?: boolean,\n) {\n  let maxHeight = 0;\n  const directionalHint = DirectionalDictionary[targetEdge];\n\n  // If cover target is set, then the max height should be calculated using the opposite of the target edge since\n  // that's the direction that the callout will expand in.\n  // For instance, if the directionalhint is bottomLeftEdge then the callout will position so it's bottom edge\n  // is aligned with the bottom of the target and expand up towards the top of the screen and the calculated max height\n  // is (bottom of target) - (top of screen) - gapSpace.\n  const target = coverTarget ? directionalHint.targetEdge * -1 : directionalHint.targetEdge;\n\n  if (target === RectangleEdge.top) {\n    maxHeight = _getEdgeValue(targetRectangle, directionalHint.targetEdge) - bounds.top - gapSpace;\n  } else if (target === RectangleEdge.bottom) {\n    maxHeight = bounds.bottom - _getEdgeValue(targetRectangle, directionalHint.targetEdge) - gapSpace;\n  } else {\n    maxHeight = bounds.bottom - targetRectangle.top - gapSpace;\n  }\n\n  return maxHeight > 0 ? maxHeight : bounds.height;\n}\n\nfunction _positionElementRelative(\n  props: IPositionProps,\n  elementToPosition: HTMLElement,\n  boundingRect: Rectangle,\n  previousPositions?: IPositionedData,\n): IElementPositionInfo {\n  const gap: number = props.gapSpace ? props.gapSpace : 0;\n  const targetRect: Rectangle = _getTargetRect(boundingRect, props.target);\n  const positionData: IPositionDirectionalHintData = _getAlignmentData(\n    _getPositionData(props.directionalHint, props.directionalHintForRTL, previousPositions)!,\n    targetRect,\n    boundingRect,\n    props.coverTarget,\n    props.alignTargetEdge,\n  );\n  const positionedElement: IElementPosition = _positionElementWithinBounds(\n    _getRectangleFromElement(elementToPosition),\n    targetRect,\n    boundingRect,\n    positionData,\n    gap,\n    props.directionalHintFixed,\n    props.coverTarget,\n  );\n  return { ...positionedElement, targetRectangle: targetRect };\n}\n\nfunction _finalizePositionData(\n  positionedElement: IElementPosition,\n  hostElement: HTMLElement,\n  bounds?: Rectangle,\n  coverTarget?: boolean,\n  doNotFinalizeReturnEdge?: boolean,\n): IPositionedData {\n  const finalizedElement: IPartialIRectangle = _finalizeElementPosition(\n    positionedElement.elementRectangle,\n    hostElement,\n    positionedElement.targetEdge,\n    bounds,\n    positionedElement.alignmentEdge,\n    coverTarget,\n    doNotFinalizeReturnEdge,\n    positionedElement.forcedInBounds,\n  );\n  return {\n    elementPosition: finalizedElement,\n    targetEdge: positionedElement.targetEdge,\n    alignmentEdge: positionedElement.alignmentEdge,\n  };\n}\n\nfunction _positionElement(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: IPositionedData,\n): IPositionedData {\n  const boundingRect: Rectangle = props.bounds\n    ? _getRectangleFromIRect(props.bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n  const positionedElement: IElementPosition = _positionElementRelative(\n    props,\n    elementToPosition,\n    boundingRect,\n    previousPositions,\n  );\n  return _finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget);\n}\n\nfunction _positionCallout(\n  props: ICalloutPositionProps,\n  hostElement: HTMLElement,\n  callout: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n  doNotFinalizeReturnEdge?: boolean,\n): ICalloutPositionedInfo {\n  const beakWidth: number = props.isBeakVisible ? props.beakWidth || 0 : 0;\n  const gap: number = _calculateActualBeakWidthInPixels(beakWidth) / 2 + (props.gapSpace ? props.gapSpace : 0);\n  const positionProps: IPositionProps = props;\n  positionProps.gapSpace = gap;\n  const boundingRect: Rectangle = props.bounds\n    ? _getRectangleFromIRect(props.bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n  const positionedElement: IElementPositionInfo = _positionElementRelative(\n    positionProps,\n    callout,\n    boundingRect,\n    previousPositions,\n  );\n\n  const beakPositioned: Rectangle = _positionBeak(beakWidth, positionedElement);\n  const finalizedBeakPosition: ICalloutBeakPositionedInfo = _finalizeBeakPosition(\n    positionedElement,\n    beakPositioned,\n    boundingRect,\n  );\n\n  return {\n    ..._finalizePositionData(positionedElement, hostElement, boundingRect, props.coverTarget, doNotFinalizeReturnEdge),\n    beakPosition: finalizedBeakPosition,\n  };\n}\n\nfunction _positionCard(\n  props: ICalloutPositionProps,\n  hostElement: HTMLElement,\n  callout: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n): ICalloutPositionedInfo {\n  return _positionCallout(props, hostElement, callout, previousPositions, true);\n}\n// END PRIVATE FUNCTIONS\n\nexport const __positioningTestPackage = {\n  _finalizePositionData,\n  _finalizeBeakPosition,\n  _calculateActualBeakWidthInPixels,\n  _positionElementWithinBounds,\n  _positionBeak,\n  _getPositionData,\n  _getMaxHeightFromTargetRectangle,\n};\n\n/**\n * Used to position an element relative to the given positioning props.\n * If positioning has been completed before, previousPositions can be passed to ensure that the positioning element\n * repositions based on its previous targets rather than starting with directionalhint.\n */\nexport function positionElement(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: IPositionedData,\n): IPositionedData {\n  return _positionElement(props, hostElement, elementToPosition, previousPositions);\n}\n\nexport function positionCallout(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n): ICalloutPositionedInfo {\n  return _positionCallout(props, hostElement, elementToPosition, previousPositions);\n}\n\nexport function positionCard(\n  props: IPositionProps,\n  hostElement: HTMLElement,\n  elementToPosition: HTMLElement,\n  previousPositions?: ICalloutPositionedInfo,\n): ICalloutPositionedInfo {\n  return _positionCard(props, hostElement, elementToPosition, previousPositions);\n}\n\n/**\n * Gets the maximum height that a rectangle can have in order to fit below or above a target.\n * If the directional hint specifies a left or right edge (i.e. leftCenter) it will limit the height to the topBorder\n * of the target given.\n * If no bounds are provided then the window is treated as the bounds.\n */\nexport function getMaxHeight(\n  target: Element | MouseEvent | Point | Rectangle,\n  targetEdge: DirectionalHint,\n  gapSpace: number = 0,\n  bounds?: IRectangle,\n  coverTarget?: boolean,\n): number {\n  const mouseTarget: MouseEvent = target as MouseEvent;\n  const elementTarget: Element = target as Element;\n  const rectOrPointTarget: Point & Rectangle = target as Point & Rectangle;\n  let targetRect: Rectangle;\n  const boundingRectangle = bounds\n    ? _getRectangleFromIRect(bounds)\n    : new Rectangle(0, window.innerWidth - getScrollbarWidth(), 0, window.innerHeight);\n\n  // eslint-disable-next-line deprecation/deprecation\n  const left = rectOrPointTarget.left || rectOrPointTarget.x;\n  // eslint-disable-next-line deprecation/deprecation\n  const top = rectOrPointTarget.top || rectOrPointTarget.y;\n  const right = rectOrPointTarget.right || left;\n  const bottom = rectOrPointTarget.bottom || top;\n\n  // eslint-disable-next-line no-extra-boolean-cast -- may not actually be a MouseEvent\n  if (!!mouseTarget.stopPropagation) {\n    targetRect = new Rectangle(mouseTarget.clientX, mouseTarget.clientX, mouseTarget.clientY, mouseTarget.clientY);\n  } else if (left !== undefined && top !== undefined) {\n    targetRect = new Rectangle(left, right, top, bottom);\n  } else {\n    targetRect = _getRectangleFromElement(elementTarget);\n  }\n\n  return _getMaxHeightFromTargetRectangle(targetRect, targetEdge, gapSpace, boundingRectangle, coverTarget);\n}\n\n/**\n * Returns the opposite edge of the given RectangleEdge.\n */\nexport function getOppositeEdge(edge: RectangleEdge): RectangleEdge {\n  return edge * -1;\n}\n\nfunction _getBoundsFromTargetWindow(\n  target: Element | MouseEvent | Point | Rectangle | null,\n  targetWindow: IWindowWithSegments,\n): IRectangle {\n  let segments = undefined;\n  if (targetWindow.getWindowSegments) {\n    segments = targetWindow.getWindowSegments();\n  }\n\n  // Identify if we're dealing with single screen scenarios.\n  if (segments === undefined || segments.length <= 1) {\n    return {\n      top: 0,\n      left: 0,\n      right: targetWindow.innerWidth,\n      bottom: targetWindow.innerHeight,\n      width: targetWindow.innerWidth,\n      height: targetWindow.innerHeight,\n    };\n  }\n\n  // Logic for determining dual screen scenarios.\n  let x: number | undefined = 0;\n  let y: number | undefined = 0;\n\n  // If the target is an Element get coordinates for its center.\n  if (target !== null && !!(target as Element).getBoundingClientRect) {\n    const clientRect = (target as Element).getBoundingClientRect();\n    x = (clientRect.left + clientRect.right) / 2;\n    y = (clientRect.top + clientRect.bottom) / 2;\n  }\n  // If the target is not null get x-axis and y-axis coordinates directly.\n  else if (target !== null) {\n    // eslint-disable-next-line deprecation/deprecation\n    x = (target as Point).left || (target as MouseEvent | Point).x;\n    // eslint-disable-next-line deprecation/deprecation\n    y = (target as Point).top || (target as MouseEvent | Point).y;\n  }\n\n  let bounds = { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };\n\n  // Define which window segment are the coordinates in and calculate bounds based on that.\n  for (const segment of segments) {\n    if (x && segment.left <= x && segment.right >= x && y && segment.top <= y && segment.bottom >= y) {\n      bounds = {\n        top: segment.top,\n        left: segment.left,\n        right: segment.right,\n        bottom: segment.bottom,\n        width: segment.width,\n        height: segment.height,\n      };\n    }\n  }\n\n  return bounds;\n}\n\nexport function getBoundsFromTargetWindow(\n  target: Element | MouseEvent | Point | Rectangle | null,\n  targetWindow: IWindowWithSegments,\n): IRectangle {\n  return _getBoundsFromTargetWindow(target, targetWindow);\n}\n","import * as React from 'react';\n\n/**\n * Hook to initialize and return a constant value. Unlike `React.useMemo`, this is guaranteed to\n * always return the same value (and if the initializer is a function, only call it once).\n * This is similar to setting a private member in a class constructor.\n *\n * If the value should ever change based on dependencies, use `React.useMemo` instead.\n *\n * @param initialValue - Initial value, or function to get the initial value. Similar to `useState`,\n * only the value/function passed in the first time this is called is respected.\n * @returns The value. The identity of this value will always be the same.\n */\nexport function useConst<T>(initialValue: T | (() => T)): T {\n  // Use useRef to store the value because it's the least expensive built-in hook that works here\n  // (we could also use `const [value] = React.useState(initialValue)` but that's more expensive\n  // internally due to reducer handling which we don't need)\n  const ref = React.useRef<{ value: T }>();\n  if (ref.current === undefined) {\n    // Box the value in an object so we can tell if it's initialized even if the initializer\n    // returns/is undefined\n    ref.current = {\n      value: typeof initialValue === 'function' ? (initialValue as Function)() : initialValue,\n    };\n  }\n  return ref.current.value;\n}\n","import { Async } from '@fluentui/utilities';\nimport * as React from 'react';\nimport { useConst } from './useConst';\n\n/**\n * Hook to provide an Async instance that is automatically cleaned up on dismount.\n */\nexport function useAsync() {\n  const async = useConst<Async>(() => new Async());\n\n  // Function that returns a function in order to dispose the async instance on unmount\n  React.useEffect(() => () => async.dispose(), [async]);\n\n  return async;\n}\n","import { on } from '@fluentui/utilities';\nimport * as React from 'react';\n\n/**\n * Hook to attach an event handler on mount and handle cleanup.\n * @param element - Element (or ref to an element) to attach the event handler to\n * @param eventName - The event to attach a handler for\n * @param callback - The handler for the event\n * @param useCapture - Whether or not to attach the handler for the capture phase\n */\nexport function useOnEvent<TElement extends Element, TEvent extends Event>(\n  element: React.RefObject<TElement | undefined | null> | TElement | Window | Document | undefined | null,\n  eventName: string,\n  callback: (ev: TEvent) => void,\n  useCapture?: boolean,\n) {\n  // Use a ref for the callback to prevent repeatedly attaching/unattaching callbacks that are unstable across renders\n  const callbackRef = React.useRef(callback);\n  callbackRef.current = callback;\n\n  React.useEffect(() => {\n    const actualElement = element && 'current' in element ? element.current : element;\n    if (!actualElement) {\n      return;\n    }\n\n    const dispose = on(actualElement, eventName, (ev: TEvent) => callbackRef.current(ev), useCapture);\n    return dispose;\n  }, [element, eventName, useCapture]);\n}\n","import * as React from 'react';\n\n/**\n * Props for the WindowProvider component.\n */\nexport type WindowProviderProps = {\n  /**\n   * Provide the active window.\n   */\n  window: Window | undefined;\n};\n\n/**\n * Context for providing the window.\n */\nexport const WindowContext = React.createContext<WindowProviderProps>({\n  window: typeof window === 'object' ? window : undefined,\n});\n\n/**\n * Hook to access the window object. This can be overridden contextually using the `WindowProvider`.\n */\nexport const useWindow = (): Window | undefined => React.useContext(WindowContext).window;\n\n/**\n * Hook to access the document object. This can be overridden contextually using the `WindowProvider`.\n */\nexport const useDocument = (): Document | undefined => React.useContext(WindowContext).window?.document;\n\n/**\n * Component to provide the window object contextually. This is useful when rendering content to an element\n * contained within a child window or iframe element, where event handlers and styling must be projected\n * to an alternative window or document.\n */\nexport const WindowProvider: React.FunctionComponent<WindowProviderProps> = props => {\n  return <WindowContext.Provider value={props}>{props.children}</WindowContext.Provider>;\n};\n","import * as React from 'react';\nimport {\n  KeyCodes,\n  divProperties,\n  doesElementContainFocus,\n  getDocument,\n  getNativeProps,\n  getWindow,\n} from '../../Utilities';\nimport { useMergedRefs, useAsync, useOnEvent } from '@fluentui/react-hooks';\nimport { useWindow } from '@fluentui/react-window-provider';\nimport type { IPopupProps, IPopupRestoreFocusParams } from './Popup.types';\n\nfunction useScrollbarAsync(props: IPopupProps, root: React.RefObject<HTMLDivElement | undefined>) {\n  const async = useAsync();\n  const [needsVerticalScrollBarState, setNeedsVerticalScrollBar] = React.useState(false);\n  React.useEffect(() => {\n    async.requestAnimationFrame(() => {\n      // If overflowY is overridden, don't waste time calculating whether the scrollbar is necessary.\n      if (props.style && props.style.overflowY) {\n        return;\n      }\n\n      let needsVerticalScrollBar = false;\n      if (root && root.current && root.current?.firstElementChild) {\n        // ClientHeight returns the client height of an element rounded to an\n        // integer. On some browsers at different zoom levels this rounding\n        // can generate different results for the root container and child even\n        // though they are the same height. This causes us to show a scroll bar\n        // when not needed. Ideally we would use BoundingClientRect().height\n        // instead however seems that the API is 90% slower than using ClientHeight.\n        // Therefore instead we will calculate the difference between heights and\n        // allow for a 1px difference to still be considered ok and not show the\n        // scroll bar.\n        const rootHeight = root.current.clientHeight;\n        const firstChildHeight = root.current.firstElementChild.clientHeight;\n        if (rootHeight > 0 && firstChildHeight > rootHeight) {\n          needsVerticalScrollBar = firstChildHeight - rootHeight > 1;\n        }\n      }\n      if (needsVerticalScrollBarState !== needsVerticalScrollBar) {\n        setNeedsVerticalScrollBar(needsVerticalScrollBar);\n      }\n    });\n\n    return () => async.dispose();\n  });\n\n  return needsVerticalScrollBarState;\n}\n\nfunction defaultFocusRestorer(options: IPopupRestoreFocusParams) {\n  const { originalElement, containsFocus } = options;\n\n  if (originalElement && containsFocus && originalElement !== getWindow()) {\n    // Make sure that the focus method actually exists\n    // In some cases the object might exist but not be a real element.\n    // This is primarily for IE 11 and should be removed once IE 11 is no longer in use.\n    // This is wrapped in a setTimeout because of a React 16 bug that is resolved in 17.\n    // Once we move to 17, the setTimeout should be removed (ref: https://github.com/facebook/react/issues/17894#issuecomment-656094405)\n    setTimeout(() => {\n      originalElement.focus?.();\n    }, 0);\n  }\n}\n\nfunction useRestoreFocus(props: IPopupProps, root: React.RefObject<HTMLDivElement | undefined>) {\n  const { onRestoreFocus = defaultFocusRestorer } = props;\n  const originalFocusedElement = React.useRef<HTMLElement>();\n  const containsFocus = React.useRef(false);\n\n  React.useEffect(() => {\n    originalFocusedElement.current = getDocument()!.activeElement as HTMLElement;\n\n    if (doesElementContainFocus(root.current!)) {\n      containsFocus.current = true;\n    }\n\n    return () => {\n      onRestoreFocus?.({\n        originalElement: originalFocusedElement.current,\n        containsFocus: containsFocus.current,\n        documentContainsFocus: getDocument()?.hasFocus() || false,\n      });\n\n      // De-reference DOM Node to avoid retainment via transpiled closure of _onKeyDown\n      originalFocusedElement.current = undefined;\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n  }, []);\n\n  useOnEvent(\n    root,\n    'focus',\n    React.useCallback((): void => {\n      containsFocus.current = true;\n    }, []),\n    true,\n  );\n\n  useOnEvent(\n    root,\n    'blur',\n    React.useCallback((ev: FocusEvent): void => {\n      /** The popup should update this._containsFocus when:\n       * relatedTarget exists AND\n       * the relatedTarget is not contained within the popup.\n       * If the relatedTarget is within the popup, that means the popup still has focus\n       * and focused moved from one element to another within the popup.\n       * If relatedTarget is undefined or null that usually means that a\n       * keyboard event occurred and focus didn't change\n       */\n      if (root.current && ev.relatedTarget && !root.current.contains(ev.relatedTarget as HTMLElement)) {\n        containsFocus.current = false;\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n    }, []),\n    true,\n  );\n}\n\nfunction useHideSiblingNodes(props: IPopupProps, root: React.RefObject<HTMLDivElement | undefined>) {\n  const isModalOrPanel = props['aria-modal'];\n\n  React.useEffect(() => {\n    const targetDocument = getDocument();\n    if (isModalOrPanel && targetDocument && root && root.current) {\n      const popupPortalNode = root.current.parentElement?.parentElement;\n      let nodesToHide: HTMLElement[] = findSiblingNodes(popupPortalNode, popupPortalNode?.parentElement);\n\n      //if popupPortalNode is not a direct child of body, its ancestor's siblings need to be hidden as well.\n      if (popupPortalNode?.parentElement !== targetDocument.body) {\n        const popupAncestorNode = findAncestorNode(root.current, targetDocument);\n        nodesToHide.concat(findSiblingNodes(popupAncestorNode, targetDocument.body));\n      }\n\n      nodesToHide = nodesToHide.filter(\n        child =>\n          child.tagName !== 'TEMPLATE' &&\n          child.tagName !== 'SCRIPT' &&\n          child.tagName !== 'STYLE' &&\n          !child.hasAttribute('aria-hidden'),\n      );\n\n      nodesToHide.forEach(node => node.setAttribute('aria-hidden', 'true'));\n\n      return () => nodesToHide.forEach(child => child.removeAttribute('aria-hidden'));\n    }\n  }, [isModalOrPanel, root]);\n}\n\nfunction findAncestorNode(node: HTMLElement | null, targetDocument: Document): HTMLElement | null {\n  let currNode = node;\n\n  while (currNode && currNode.parentElement !== targetDocument.body) {\n    currNode = currNode.parentElement;\n  }\n\n  return currNode;\n}\n\nconst findSiblingNodes = (\n  node: HTMLElement | null | undefined,\n  parentNode: HTMLElement | null | undefined,\n): HTMLElement[] =>\n  node && parentNode ? [].slice.call(parentNode.children).filter((child: HTMLElement) => child !== node) : [];\n\n/**\n * This adds accessibility to Dialog and Panel controls\n */\nexport const Popup: React.FunctionComponent<IPopupProps> = React.forwardRef<HTMLDivElement, IPopupProps>(\n  (props, forwardedRef) => {\n    // Default props\n    // eslint-disable-next-line deprecation/deprecation\n    props = { shouldRestoreFocus: true, ...props };\n\n    const root = React.useRef<HTMLDivElement>();\n    const mergedRootRef = useMergedRefs(root, forwardedRef) as React.Ref<HTMLDivElement>;\n\n    useHideSiblingNodes(props, root);\n    useRestoreFocus(props, root);\n\n    const { role, className, ariaLabel, ariaLabelledBy, ariaDescribedBy, style, children, onDismiss } = props;\n    const needsVerticalScrollBar = useScrollbarAsync(props, root);\n\n    const onKeyDown = React.useCallback(\n      (ev: React.KeyboardEvent<HTMLElement> | KeyboardEvent): void => {\n        // eslint-disable-next-line deprecation/deprecation\n        switch (ev.which) {\n          case KeyCodes.escape:\n            if (onDismiss) {\n              onDismiss(ev);\n\n              ev.preventDefault();\n              ev.stopPropagation();\n            }\n\n            break;\n        }\n      },\n      [onDismiss],\n    );\n\n    const win = useWindow();\n    useOnEvent(win, 'keydown', onKeyDown as (ev: Event) => void);\n\n    return (\n      <div\n        ref={mergedRootRef}\n        {...getNativeProps(props, divProperties)}\n        className={className}\n        role={role}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        onKeyDown={onKeyDown}\n        style={{ overflowY: needsVerticalScrollBar ? 'scroll' : undefined, outline: 'none', ...style }}\n      >\n        {children}\n      </div>\n    );\n  },\n);\n","import { getDocument, Rectangle } from '@fluentui/utilities';\nimport * as React from 'react';\nimport { useWindow } from '@fluentui/react-window-provider';\nimport type { Point } from '@fluentui/utilities';\n\nexport type Target = Element | string | MouseEvent | Point | Rectangle | null | React.RefObject<Element>;\n\n/**\n * Hook to calculate and cache the target element specified by the given target attribute,\n * as well as the target element's (or host element's) parent window\n * @param target- Target selector passed to the component as a property, describing the element that\n * the callout should target\n * @param hostElement- The callout's host element, used for determining the parent window.\n */\nexport function useTarget<TElement extends HTMLElement = HTMLElement>(\n  target: Target | undefined,\n  hostElement?: React.RefObject<TElement | null>,\n): Readonly<[React.RefObject<Element | MouseEvent | Point | Rectangle | null>, Window | undefined]> {\n  const previousTargetProp = React.useRef<\n    Element | string | MouseEvent | Point | Rectangle | React.RefObject<Element> | null | undefined\n  >();\n\n  const targetRef = React.useRef<Element | MouseEvent | Point | Rectangle | null>(null);\n  /**\n   * Stores an instance of Window, used to check\n   * for server side rendering and if focus was lost.\n   */\n  const targetWindow = useWindow();\n\n  // If the target element changed, find the new one. If we are tracking\n  // target with class name, always find element because we do not know if\n  // fabric has rendered a new element and disposed the old element.\n  if (!target || target !== previousTargetProp.current || typeof target === 'string') {\n    const currentElement = hostElement?.current;\n    if (target) {\n      if (typeof target === 'string') {\n        const currentDoc: Document = getDocument(currentElement)!;\n        targetRef.current = currentDoc ? currentDoc.querySelector(target) : null;\n      } else if ('stopPropagation' in target) {\n        targetRef.current = target;\n      } else if ('getBoundingClientRect' in target) {\n        targetRef.current = target;\n      } else if ('current' in target) {\n        targetRef.current = target.current;\n      } else {\n        targetRef.current = target;\n      }\n    }\n    previousTargetProp.current = target;\n  }\n\n  return [targetRef, targetWindow] as const;\n}\n","import * as React from 'react';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport {\n  css,\n  divProperties,\n  elementContains,\n  focusFirstChild,\n  getNativeProps,\n  on,\n  shallowCompare,\n  getPropsWithDefaults,\n  Async,\n} from '../../Utilities';\nimport { positionCallout, RectangleEdge, positionCard, getBoundsFromTargetWindow } from '../../Positioning';\nimport { Popup } from '../../Popup';\nimport { classNamesFunction } from '../../Utilities';\nimport { AnimationClassNames } from '../../Styling';\nimport { useMergedRefs, useAsync, useConst, useTarget, useOnEvent } from '@fluentui/react-hooks';\nimport type { ICalloutProps, ICalloutContentStyleProps, ICalloutContentStyles } from './Callout.types';\nimport type { Point, IRectangle } from '../../Utilities';\nimport type { ICalloutPositionedInfo, IPositionProps, IPosition } from '../../Positioning';\nimport type { Target } from '@fluentui/react-hooks';\n\nconst COMPONENT_NAME = 'CalloutContentBase';\n\nconst ANIMATIONS: { [key: number]: string | undefined } = {\n  [RectangleEdge.top]: AnimationClassNames.slideUpIn10,\n  [RectangleEdge.bottom]: AnimationClassNames.slideDownIn10,\n  [RectangleEdge.left]: AnimationClassNames.slideLeftIn10,\n  [RectangleEdge.right]: AnimationClassNames.slideRightIn10,\n};\n\nconst BEAK_ORIGIN_POSITION = { top: 0, left: 0 };\n// Microsoft Edge will overwrite inline styles if there is an animation pertaining to that style.\n// To help ensure that edge will respect the offscreen style opacity\n// filter needs to be added as an additional way to set opacity.\n// Also set pointer-events: none so that the callout will not occlude the element it is\n// going to be positioned against\nconst OFF_SCREEN_STYLE: React.CSSProperties = {\n  opacity: 0,\n  filter: 'opacity(0)',\n  pointerEvents: 'none',\n};\n// role and role description go hand-in-hand. Both would be included by spreading getNativeProps for a basic element\n// This constant array can be used to filter these out of native props spread on callout root and apply them together on\n// calloutMain (the Popup component within the callout)\nconst ARIA_ROLE_ATTRIBUTES = ['role', 'aria-roledescription'];\n\nconst DEFAULT_PROPS = {\n  preventDismissOnLostFocus: false,\n  preventDismissOnScroll: false,\n  preventDismissOnResize: false,\n  isBeakVisible: true,\n  beakWidth: 16,\n  gapSpace: 0,\n  minPagePadding: 8,\n  directionalHint: DirectionalHint.bottomAutoEdge,\n} as const;\n\nconst getClassNames = classNamesFunction<ICalloutContentStyleProps, ICalloutContentStyles>({\n  disableCaching: true, // disabling caching because stylesProp.position mutates often\n});\n\n/**\n * (Hook) to return a function to lazily fetch the bounds of the target element for the callout.\n */\nfunction useBounds(\n  { bounds, minPagePadding = DEFAULT_PROPS.minPagePadding, target }: ICalloutProps,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  targetWindow: Window | undefined,\n) {\n  const [targetWindowResized, setTargetWindowResized] = React.useState(false);\n  const cachedBounds = React.useRef<IRectangle | undefined>();\n\n  const getBounds = React.useCallback((): IRectangle | undefined => {\n    if (!cachedBounds.current || targetWindowResized) {\n      let currentBounds =\n        typeof bounds === 'function' ? (targetWindow ? bounds(target, targetWindow) : undefined) : bounds;\n\n      if (!currentBounds && targetWindow) {\n        currentBounds = getBoundsFromTargetWindow(targetRef.current, targetWindow);\n        currentBounds = {\n          top: currentBounds.top + minPagePadding,\n          left: currentBounds.left + minPagePadding,\n          right: currentBounds.right! - minPagePadding,\n          bottom: currentBounds.bottom! - minPagePadding,\n          width: currentBounds.width - minPagePadding * 2,\n          height: currentBounds.height - minPagePadding * 2,\n        };\n      }\n      cachedBounds.current = currentBounds;\n      targetWindowResized && setTargetWindowResized(false);\n    }\n\n    return cachedBounds.current;\n  }, [bounds, minPagePadding, target, targetRef, targetWindow, targetWindowResized]);\n\n  const async: Async = useAsync();\n  useOnEvent(\n    targetWindow,\n    'resize',\n    async.debounce(\n      () => {\n        setTargetWindowResized(true);\n      },\n      500,\n      { leading: true },\n    ),\n  );\n\n  return getBounds;\n}\n\n/**\n * (Hook) to return the maximum available height for the Callout to render into.\n */\nfunction useMaxHeight(\n  { calloutMaxHeight, finalHeight, directionalHint, directionalHintFixed, hidden }: ICalloutProps,\n  getBounds: () => IRectangle | undefined,\n  positions?: ICalloutPositionedInfo,\n) {\n  const [maxHeight, setMaxHeight] = React.useState<number | undefined>();\n  const { top, bottom } = positions?.elementPosition ?? {};\n\n  React.useEffect(() => {\n    const { top: topBounds, bottom: bottomBounds } = getBounds() ?? {};\n\n    if (!calloutMaxHeight && !hidden) {\n      if (typeof top === 'number' && bottomBounds) {\n        setMaxHeight(bottomBounds - top);\n      } else if (typeof bottom === 'number' && typeof topBounds === 'number' && bottomBounds) {\n        setMaxHeight(bottomBounds - topBounds - bottom);\n      }\n    } else if (calloutMaxHeight) {\n      setMaxHeight(calloutMaxHeight);\n    } else {\n      setMaxHeight(undefined);\n    }\n  }, [bottom, calloutMaxHeight, finalHeight, directionalHint, directionalHintFixed, getBounds, hidden, positions, top]);\n\n  return maxHeight;\n}\n\n/**\n * (Hook) to find the current position of Callout. If Callout is resized then a new position is calculated.\n */\nfunction usePositions(\n  props: ICalloutProps,\n  hostElement: React.RefObject<HTMLDivElement>,\n  calloutElement: HTMLDivElement | null,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  getBounds: () => IRectangle | undefined,\n) {\n  const [positions, setPositions] = React.useState<ICalloutPositionedInfo>();\n  const positionAttempts = React.useRef(0);\n  const previousTarget = React.useRef<Target>();\n  const async = useAsync();\n  const { hidden, target, finalHeight, calloutMaxHeight, onPositioned, directionalHint } = props;\n\n  React.useEffect(() => {\n    if (!hidden) {\n      const timerId = async.requestAnimationFrame(() => {\n        if (hostElement.current && calloutElement) {\n          const currentProps: IPositionProps = {\n            ...props,\n            target: targetRef.current!,\n            bounds: getBounds(),\n          };\n\n          // duplicate calloutElement & remove useMaxHeight's maxHeight for position calc\n          const dupeCalloutElement = calloutElement.cloneNode(true) as HTMLElement;\n          dupeCalloutElement.style.maxHeight = calloutMaxHeight ? `${calloutMaxHeight}` : '';\n          dupeCalloutElement.style.visibility = 'hidden';\n          calloutElement.parentElement?.appendChild(dupeCalloutElement);\n\n          const previousPositions = previousTarget.current === target ? positions : undefined;\n\n          // If there is a finalHeight given then we assume that the user knows and will handle\n          // additional positioning adjustments so we should call positionCard\n          const newPositions: ICalloutPositionedInfo = finalHeight\n            ? positionCard(currentProps, hostElement.current, dupeCalloutElement, previousPositions)\n            : positionCallout(currentProps, hostElement.current, dupeCalloutElement, previousPositions);\n\n          // clean up duplicate calloutElement\n          calloutElement.parentElement?.removeChild(dupeCalloutElement);\n\n          // Set the new position only when the positions do not exist or one of the new callout positions\n          // is different. The position should not change if the position is within 2 decimal places.\n          if (\n            (!positions && newPositions) ||\n            (positions && newPositions && !arePositionsEqual(positions, newPositions) && positionAttempts.current < 5)\n          ) {\n            // We should not reposition the callout more than a few times, if it is then the content is likely resizing\n            // and we should stop trying to reposition to prevent a stack overflow.\n            positionAttempts.current++;\n            setPositions(newPositions);\n          } else if (positionAttempts.current > 0) {\n            // Only call the onPositioned callback if the callout has been re-positioned at least once.\n            positionAttempts.current = 0;\n            onPositioned?.(positions);\n          }\n        }\n      }, calloutElement);\n\n      previousTarget.current = target;\n\n      return () => {\n        async.cancelAnimationFrame(timerId);\n        previousTarget.current = undefined;\n      };\n    } else {\n      // When the callout is hidden, clear position state so that it is not accidentally used next render.\n      setPositions(undefined);\n      positionAttempts.current = 0;\n    }\n  }, [\n    hidden,\n    directionalHint,\n    async,\n    calloutElement,\n    calloutMaxHeight,\n    hostElement,\n    targetRef,\n    finalHeight,\n    getBounds,\n    onPositioned,\n    positions,\n    props,\n    target,\n  ]);\n\n  return positions;\n}\n\n/**\n * (Hook) to set up behavior to automatically focus the callout when it appears, if indicated by props.\n */\nfunction useAutoFocus(\n  { hidden, setInitialFocus }: ICalloutProps,\n  positions: ICalloutPositionedInfo | undefined,\n  calloutElement: HTMLDivElement | null,\n) {\n  const async = useAsync();\n  const hasPositions = !!positions;\n  React.useEffect(() => {\n    if (!hidden && setInitialFocus && hasPositions && calloutElement) {\n      const timerId = async.requestAnimationFrame(() => focusFirstChild(calloutElement), calloutElement);\n\n      return () => async.cancelAnimationFrame(timerId);\n    }\n  }, [hidden, hasPositions, async, calloutElement, setInitialFocus]);\n}\n\n/**\n * (Hook) to set up various handlers to dismiss the popup when it loses focus or the window scrolls or similar cases.\n */\nfunction useDismissHandlers(\n  {\n    hidden,\n    onDismiss,\n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnScroll,\n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnResize,\n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnLostFocus,\n    dismissOnTargetClick,\n    shouldDismissOnWindowFocus,\n    preventDismissOnEvent,\n  }: ICalloutProps,\n  positions: ICalloutPositionedInfo | undefined,\n  hostElement: React.RefObject<HTMLDivElement>,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  targetWindow: Window | undefined,\n) {\n  const isMouseDownOnPopup = React.useRef(false);\n  const async = useAsync();\n\n  const mouseDownHandlers = useConst([\n    () => {\n      isMouseDownOnPopup.current = true;\n    },\n    () => {\n      isMouseDownOnPopup.current = false;\n    },\n  ] as const);\n\n  const positionsExists = !!positions;\n\n  React.useEffect(() => {\n    const dismissOnScroll = (ev: Event) => {\n      if (positionsExists && !preventDismissOnScroll) {\n        dismissOnClickOrScroll(ev);\n      }\n    };\n\n    const dismissOnResize = (ev: Event) => {\n      if (!preventDismissOnResize && !(preventDismissOnEvent && preventDismissOnEvent(ev))) {\n        onDismiss?.(ev);\n      }\n    };\n\n    const dismissOnLostFocus = (ev: Event) => {\n      if (!preventDismissOnLostFocus) {\n        dismissOnClickOrScroll(ev);\n      }\n    };\n\n    const dismissOnClickOrScroll = (ev: Event) => {\n      const eventPaths: Array<EventTarget> = ev.composedPath ? ev.composedPath() : [];\n      const target = eventPaths.length > 0 ? (eventPaths[0] as HTMLElement) : (ev.target as HTMLElement);\n      const isEventTargetOutsideCallout = hostElement.current && !elementContains(hostElement.current, target);\n\n      // If mouse is pressed down on callout but moved outside then released, don't dismiss the callout.\n      if (isEventTargetOutsideCallout && isMouseDownOnPopup.current) {\n        isMouseDownOnPopup.current = false;\n        return;\n      }\n\n      if (\n        (!targetRef.current && isEventTargetOutsideCallout) ||\n        (ev.target !== targetWindow &&\n          isEventTargetOutsideCallout &&\n          (!targetRef.current ||\n            'stopPropagation' in targetRef.current ||\n            dismissOnTargetClick ||\n            (target !== targetRef.current && !elementContains(targetRef.current as HTMLElement, target))))\n      ) {\n        if (preventDismissOnEvent && preventDismissOnEvent(ev)) {\n          return;\n        }\n        onDismiss?.(ev);\n      }\n    };\n\n    const dismissOnTargetWindowBlur = (ev: FocusEvent) => {\n      // Do nothing\n      if (!shouldDismissOnWindowFocus) {\n        return;\n      }\n\n      if (\n        ((preventDismissOnEvent && !preventDismissOnEvent(ev)) ||\n          (!preventDismissOnEvent && !preventDismissOnLostFocus)) &&\n        !targetWindow?.document.hasFocus() &&\n        ev.relatedTarget === null\n      ) {\n        onDismiss?.(ev);\n      }\n    };\n\n    // This is added so the callout will dismiss when the window is scrolled\n    // but not when something inside the callout is scrolled. The delay seems\n    // to be required to avoid React firing an async focus event in IE from\n    // the target changing focus quickly prior to rendering the callout.\n    const disposablesPromise = new Promise<() => void>(resolve => {\n      async.setTimeout(() => {\n        if (!hidden && targetWindow) {\n          const disposables = [\n            on(targetWindow, 'scroll', dismissOnScroll, true),\n            on(targetWindow, 'resize', dismissOnResize, true),\n            on(targetWindow.document.documentElement, 'focus', dismissOnLostFocus, true),\n            on(targetWindow.document.documentElement, 'click', dismissOnLostFocus, true),\n            on(targetWindow, 'blur', dismissOnTargetWindowBlur, true),\n          ];\n\n          resolve(() => {\n            disposables.forEach(dispose => dispose());\n          });\n        }\n      }, 0);\n    });\n\n    return () => {\n      disposablesPromise.then(dispose => dispose());\n    };\n  }, [\n    hidden,\n    async,\n    hostElement,\n    targetRef,\n    targetWindow,\n    onDismiss,\n    shouldDismissOnWindowFocus,\n    dismissOnTargetClick,\n    preventDismissOnLostFocus,\n    preventDismissOnResize,\n    preventDismissOnScroll,\n    positionsExists,\n    preventDismissOnEvent,\n  ]);\n\n  return mouseDownHandlers;\n}\n\nexport const CalloutContentBase: React.FunctionComponent<ICalloutProps> = React.memo(\n  React.forwardRef<HTMLDivElement, ICalloutProps>((propsWithoutDefaults, forwardedRef) => {\n    const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n    const {\n      styles,\n      style,\n      ariaLabel,\n      ariaDescribedBy,\n      ariaLabelledBy,\n      className,\n      isBeakVisible,\n      children,\n      beakWidth,\n      calloutWidth,\n      calloutMaxWidth,\n      calloutMinWidth,\n      doNotLayer,\n      finalHeight,\n      hideOverflow = !!finalHeight,\n      backgroundColor,\n      calloutMaxHeight,\n      onScroll,\n      // eslint-disable-next-line deprecation/deprecation\n      shouldRestoreFocus = true,\n      target,\n      hidden,\n      onLayerMounted,\n    } = props;\n\n    const hostElement = React.useRef<HTMLDivElement>(null);\n    const [calloutElement, setCalloutElement] = React.useState<HTMLDivElement | null>(null);\n    const calloutCallback = React.useCallback(calloutEl => {\n      setCalloutElement(calloutEl);\n    }, []);\n    const rootRef = useMergedRefs(hostElement, forwardedRef);\n\n    const [targetRef, targetWindow] = useTarget(props.target, {\n      current: calloutElement,\n    });\n    const getBounds = useBounds(props, targetRef, targetWindow);\n    const positions = usePositions(props, hostElement, calloutElement, targetRef, getBounds);\n    const maxHeight = useMaxHeight(props, getBounds, positions);\n    const [mouseDownOnPopup, mouseUpOnPopup] = useDismissHandlers(\n      props,\n      positions,\n      hostElement,\n      targetRef,\n      targetWindow,\n    );\n\n    // do not set both top and bottom css props from positions\n    // instead, use maxHeight\n    const isForcedInBounds = positions?.elementPosition.top && positions?.elementPosition.bottom;\n    const cssPositions = {\n      ...positions?.elementPosition,\n      maxHeight,\n    };\n    if (isForcedInBounds) {\n      cssPositions.bottom = undefined;\n    }\n\n    useAutoFocus(props, positions, calloutElement);\n\n    React.useEffect(() => {\n      if (!hidden) {\n        onLayerMounted?.();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run if hidden changes\n    }, [hidden]);\n\n    // If there is no target window then we are likely in server side rendering and we should not render anything.\n    if (!targetWindow) {\n      return null;\n    }\n\n    const overflowYHidden = hideOverflow;\n\n    const beakVisible = isBeakVisible && !!target;\n    const classNames = getClassNames(styles!, {\n      theme: props.theme!,\n      className,\n      overflowYHidden: overflowYHidden,\n      calloutWidth,\n      positions,\n      beakWidth,\n      backgroundColor,\n      calloutMaxWidth,\n      calloutMinWidth,\n      doNotLayer,\n    });\n\n    const overflowStyle: React.CSSProperties = {\n      maxHeight: calloutMaxHeight ? calloutMaxHeight : '100%',\n      ...style,\n      ...(overflowYHidden && { overflowY: 'hidden' }),\n    };\n\n    const visibilityStyle: React.CSSProperties | undefined = props.hidden ? { visibility: 'hidden' } : undefined;\n    // React.CSSProperties does not understand IRawStyle, so the inline animations will need to be cast as any for now.\n    return (\n      <div ref={rootRef} className={classNames.container} style={visibilityStyle}>\n        <div\n          {...getNativeProps(props, divProperties, ARIA_ROLE_ATTRIBUTES)}\n          className={css(classNames.root, positions && positions.targetEdge && ANIMATIONS[positions.targetEdge!])}\n          style={positions ? { ...cssPositions } : OFF_SCREEN_STYLE}\n          // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n          // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n          tabIndex={-1}\n          ref={calloutCallback}\n        >\n          {beakVisible && <div className={classNames.beak} style={getBeakPosition(positions)} />}\n          {beakVisible && <div className={classNames.beakCurtain} />}\n          <Popup\n            {...getNativeProps(props, ARIA_ROLE_ATTRIBUTES)}\n            ariaDescribedBy={ariaDescribedBy}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            className={classNames.calloutMain}\n            onDismiss={props.onDismiss}\n            onMouseDown={mouseDownOnPopup}\n            onMouseUp={mouseUpOnPopup}\n            onRestoreFocus={props.onRestoreFocus}\n            onScroll={onScroll}\n            shouldRestoreFocus={shouldRestoreFocus}\n            style={overflowStyle}\n          >\n            {children}\n          </Popup>\n        </div>\n      </div>\n    );\n  }),\n  (previousProps: ICalloutProps, nextProps: ICalloutProps) => {\n    if (!nextProps.shouldUpdateWhenHidden && previousProps.hidden && nextProps.hidden) {\n      // Do not update when hidden.\n      return true;\n    }\n    return shallowCompare(previousProps, nextProps);\n  },\n);\n\n/**\n * (Utility) to find and return the current `Callout` Beak position.\n *\n * @param positions\n */\nfunction getBeakPosition(positions?: ICalloutPositionedInfo): React.CSSProperties {\n  const beakPositionStyle: React.CSSProperties = {\n    ...positions?.beakPosition?.elementPosition,\n    display: positions?.beakPosition?.hideBeak ? 'none' : undefined,\n  };\n\n  if (!beakPositionStyle.top && !beakPositionStyle.bottom && !beakPositionStyle.left && !beakPositionStyle.right) {\n    beakPositionStyle.left = BEAK_ORIGIN_POSITION.left;\n    beakPositionStyle.top = BEAK_ORIGIN_POSITION.top;\n  }\n\n  return beakPositionStyle;\n}\n\n/**\n * (Utility) used to compare two different elementPositions to determine whether they are equal.\n *\n * @param prevElementPositions\n * @param newElementPosition\n */\nfunction arePositionsEqual(\n  prevElementPositions: ICalloutPositionedInfo,\n  newElementPosition: ICalloutPositionedInfo,\n): boolean {\n  return (\n    comparePositions(prevElementPositions.elementPosition, newElementPosition.elementPosition) &&\n    comparePositions(prevElementPositions.beakPosition.elementPosition, newElementPosition.beakPosition.elementPosition)\n  );\n}\n\n/**\n * (Utility) used in **arePositionsEqual** to compare two different elementPositions.\n *\n * @param prevElementPositions\n * @param newElementPositions\n */\nfunction comparePositions(prevElementPositions: IPosition, newElementPositions: IPosition): boolean {\n  for (const key in newElementPositions) {\n    if (newElementPositions.hasOwnProperty(key)) {\n      const oldPositionEdge = prevElementPositions[key];\n      const newPositionEdge = newElementPositions[key];\n      if (oldPositionEdge !== undefined && newPositionEdge !== undefined) {\n        if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nCalloutContentBase.displayName = COMPONENT_NAME;\n","import { HighContrastSelector, focusClear, getGlobalClassNames, ZIndexes } from '../../Styling';\nimport type { IRawStyle } from '../../Styling';\nimport type { ICalloutContentStyleProps, ICalloutContentStyles } from './Callout.types';\n\nfunction getBeakStyle(beakWidth?: number): IRawStyle {\n  return {\n    height: beakWidth,\n    width: beakWidth,\n  };\n}\n\nconst GlobalClassNames = {\n  container: 'ms-Callout-container',\n  root: 'ms-Callout',\n  beak: 'ms-Callout-beak',\n  beakCurtain: 'ms-Callout-beakCurtain',\n  calloutMain: 'ms-Callout-main',\n};\n\nexport const getStyles = (props: ICalloutContentStyleProps): ICalloutContentStyles => {\n  const {\n    theme,\n    className,\n    overflowYHidden,\n    calloutWidth,\n    beakWidth,\n    backgroundColor,\n    calloutMaxWidth,\n    calloutMinWidth,\n    doNotLayer,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const { semanticColors, effects } = theme;\n\n  return {\n    container: [\n      classNames.container,\n      {\n        position: 'relative',\n      },\n    ],\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        position: 'absolute',\n        display: 'flex',\n        zIndex: doNotLayer ? ZIndexes.Layer : undefined,\n        boxSizing: 'border-box',\n        borderRadius: effects.roundedCorner2,\n        boxShadow: effects.elevation16,\n        selectors: {\n          [HighContrastSelector]: {\n            borderWidth: 1,\n            borderStyle: 'solid',\n            borderColor: 'WindowText',\n          },\n        },\n      },\n      focusClear(),\n      className,\n      !!calloutWidth && { width: calloutWidth },\n      !!calloutMaxWidth && { maxWidth: calloutMaxWidth },\n      !!calloutMinWidth && { minWidth: calloutMinWidth },\n    ],\n    beak: [\n      classNames.beak,\n      {\n        position: 'absolute',\n        backgroundColor: semanticColors.menuBackground,\n        boxShadow: 'inherit',\n        border: 'inherit',\n        boxSizing: 'border-box',\n        transform: 'rotate(45deg)',\n      },\n      getBeakStyle(beakWidth),\n      backgroundColor && {\n        backgroundColor: backgroundColor,\n      },\n    ],\n    beakCurtain: [\n      classNames.beakCurtain,\n      {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        backgroundColor: semanticColors.menuBackground,\n        borderRadius: effects.roundedCorner2,\n      },\n    ],\n    calloutMain: [\n      classNames.calloutMain,\n      {\n        backgroundColor: semanticColors.menuBackground,\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        position: 'relative',\n        width: '100%',\n        borderRadius: effects.roundedCorner2,\n      },\n      overflowYHidden && {\n        overflowY: 'hidden',\n      },\n      backgroundColor && {\n        backgroundColor: backgroundColor,\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { CalloutContentBase } from './CalloutContent.base';\nimport { getStyles } from './CalloutContent.styles';\nimport type { ICalloutProps } from './Callout.types';\n\nexport const CalloutContent: React.FunctionComponent<ICalloutProps> = styled(CalloutContentBase, getStyles, undefined, {\n  scope: 'CalloutContent',\n});\n","import type { ISettings, ISettingsFunction } from './Customizations';\n\n/**\n * Merge new and old settings, giving priority to new settings.\n * New settings is optional in which case oldSettings is returned as-is.\n * @param oldSettings - Old settings to fall back to.\n * @param newSettings - New settings that will be merged over oldSettings.\n * @returns Merged settings.\n */\nexport function mergeSettings(oldSettings: ISettings = {}, newSettings?: ISettings | ISettingsFunction): ISettings {\n  const mergeSettingsWith = _isSettingsFunction(newSettings) ? newSettings : _settingsMergeWith(newSettings);\n\n  return mergeSettingsWith(oldSettings);\n}\n\nexport function mergeScopedSettings(\n  oldSettings: ISettings = {},\n  newSettings?: ISettings | ISettingsFunction,\n): ISettings {\n  const mergeSettingsWith = _isSettingsFunction(newSettings) ? newSettings : _scopedSettingsMergeWith(newSettings);\n\n  return mergeSettingsWith(oldSettings);\n}\n\nfunction _isSettingsFunction(settings?: ISettings | ISettingsFunction): settings is ISettingsFunction {\n  return typeof settings === 'function';\n}\n\nfunction _settingsMergeWith(newSettings?: object): (settings: ISettings) => ISettings {\n  return (settings: ISettings) => (newSettings ? { ...settings, ...newSettings } : settings);\n}\n\nfunction _scopedSettingsMergeWith(scopedSettingsFromProps: ISettings = {}): (scopedSettings: ISettings) => ISettings {\n  return (oldScopedSettings: ISettings): ISettings => {\n    const newScopedSettings: ISettings = { ...oldScopedSettings };\n\n    for (let scopeName in scopedSettingsFromProps) {\n      if (scopedSettingsFromProps.hasOwnProperty(scopeName)) {\n        newScopedSettings[scopeName] = { ...oldScopedSettings[scopeName], ...scopedSettingsFromProps[scopeName] };\n      }\n    }\n\n    return newScopedSettings;\n  };\n}\n","import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { CustomizerContext } from './CustomizerContext';\nimport { mergeCustomizations } from './mergeCustomizations';\nimport type { ICustomizerContext } from './CustomizerContext';\nimport type { ICustomizerProps } from './Customizer.types';\n\n/**\n * The Customizer component allows for default props to be mixed into components which\n * are decorated with the customizable() decorator, or use the styled HOC. This enables\n * injection scenarios like:\n *\n * 1. render svg icons instead of the icon font within all buttons\n * 2. inject a custom theme object into a component\n *\n * Props are provided via the settings prop which should be one of the following:\n * - A json map which contains 1 or more name/value pairs representing injectable props.\n * - A function that receives the current settings and returns the new ones that apply to the scope\n *\n * @public\n *\n * @deprecated This component is deprecated for purpose of applying theme to components\n * as of `@fluentui/react` version 8. Use `ThemeProvider` for applying theme instead.\n */\nexport class Customizer extends React.Component<ICustomizerProps> {\n  public componentDidMount(): void {\n    Customizations.observe(this._onCustomizationChange);\n  }\n\n  public componentWillUnmount(): void {\n    Customizations.unobserve(this._onCustomizationChange);\n  }\n\n  public render(): React.ReactElement<{}> {\n    const { contextTransform } = this.props;\n    return (\n      <CustomizerContext.Consumer>\n        {(parentContext: ICustomizerContext) => {\n          let newContext = mergeCustomizations(this.props, parentContext);\n\n          if (contextTransform) {\n            newContext = contextTransform(newContext);\n          }\n\n          return <CustomizerContext.Provider value={newContext}>{this.props.children}</CustomizerContext.Provider>;\n        }}\n      </CustomizerContext.Consumer>\n    );\n  }\n\n  private _onCustomizationChange = () => this.forceUpdate();\n}\n","import { mergeSettings, mergeScopedSettings } from './mergeSettings';\nimport type { ICustomizerProps } from './Customizer.types';\nimport type { ICustomizerContext } from './CustomizerContext';\n\n/**\n * Merge props and customizations giving priority to props over context.\n * NOTE: This function will always perform multiple merge operations. Use with caution.\n * @param props - New settings to merge in.\n * @param parentContext - Context containing current settings.\n * @returns Merged customizations.\n */\nexport function mergeCustomizations(props: ICustomizerProps, parentContext: ICustomizerContext): ICustomizerContext {\n  const { customizations = { settings: {}, scopedSettings: {} } } = parentContext || {};\n\n  return {\n    customizations: {\n      settings: mergeSettings(customizations.settings, props.settings),\n      scopedSettings: mergeScopedSettings(customizations.scopedSettings, props.scopedSettings),\n      inCustomizerContext: true,\n    },\n  };\n}\n","import * as React from 'react';\nimport {\n  getNativeProps,\n  divProperties,\n  classNamesFunction,\n  getDocument,\n  memoizeFunction,\n  getRTL,\n  Customizer,\n  useFocusRects,\n} from '../../Utilities';\nimport { createTheme } from '../../Styling';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport type { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\nimport type { IProcessedStyleSet } from '@fluentui/merge-styles';\nimport type { ITheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IFabricStyleProps, IFabricStyles>();\nconst getFabricTheme = memoizeFunction((theme?: ITheme, isRTL?: boolean) => createTheme({ ...theme, rtl: isRTL }));\n\nconst getDir = ({ theme, dir }: IFabricProps) => {\n  const contextDir = getRTL(theme) ? 'rtl' : 'ltr';\n  const pageDir = getRTL() ? 'rtl' : 'ltr';\n  const componentDir = dir ? dir : contextDir;\n  return {\n    // If Fabric dir !== contextDir\n    // Or If contextDir !== pageDir\n    // Then we need to set dir of the Fabric root\n    rootDir: componentDir !== contextDir || componentDir !== pageDir ? componentDir : dir,\n    // If dir !== contextDir || pageDir\n    // then set contextual theme around content\n    needsTheme: componentDir !== contextDir,\n  };\n};\n\nexport const FabricBase: React.FunctionComponent<IFabricProps> = React.forwardRef<HTMLDivElement, IFabricProps>(\n  (props, ref) => {\n    const { className, theme, applyTheme, applyThemeToBody, styles } = props;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      applyTheme: applyTheme,\n      className,\n    });\n\n    const rootElement = React.useRef<HTMLDivElement | null>(null);\n    useApplyThemeToBody(applyThemeToBody, classNames, rootElement);\n    useFocusRects(rootElement);\n\n    return <>{useRenderedContent(props, classNames, rootElement, ref)}</>;\n  },\n);\nFabricBase.displayName = 'FabricBase';\n\nfunction useRenderedContent(\n  props: IFabricProps,\n  { root }: IProcessedStyleSet<IFabricStyles>,\n  rootElement: React.RefObject<HTMLDivElement | undefined>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const { as: Root = 'div', dir, theme } = props;\n  const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties, ['dir']);\n\n  const { rootDir, needsTheme } = getDir(props);\n\n  let renderedContent = <Root dir={rootDir} {...divProps} className={root} ref={useMergedRefs(rootElement, ref)} />;\n\n  // Create the contextual theme if component direction does not match parent direction.\n  if (needsTheme) {\n    // Disabling ThemeProvider here because theme doesn't need to be re-provided by ThemeProvider if dir has changed.\n    renderedContent = (\n      // eslint-disable-next-line deprecation/deprecation\n      <Customizer settings={{ theme: getFabricTheme(theme, dir === 'rtl') }}>{renderedContent}</Customizer>\n    );\n  }\n\n  return renderedContent;\n}\n\nfunction useApplyThemeToBody(\n  applyThemeToBody: boolean | undefined,\n  { bodyThemed }: IProcessedStyleSet<IFabricStyles>,\n  rootElement: React.RefObject<HTMLDivElement | undefined>,\n) {\n  React.useEffect((): void | (() => void) => {\n    if (applyThemeToBody) {\n      const currentDoc = getDocument(rootElement.current);\n      if (currentDoc) {\n        currentDoc.body.classList.add(bodyThemed);\n        return () => {\n          currentDoc.body.classList.remove(bodyThemed);\n        };\n      }\n    }\n  }, [bodyThemed, applyThemeToBody, rootElement]);\n\n  return rootElement;\n}\n","import { getGlobalClassNames } from '../../Styling';\nimport type { IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\nconst inheritFont = { fontFamily: 'inherit' };\n\nconst GlobalClassNames = {\n  root: 'ms-Fabric',\n  bodyThemed: 'ms-Fabric-bodyThemed',\n};\n\nexport interface IFabricClassNames {\n  root: string;\n  bodyThemed: string;\n}\n\nexport const getStyles = (props: IFabricStyleProps): IFabricStyles => {\n  const { theme, className, applyTheme } = props;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        color: theme.palette.neutralPrimary,\n        selectors: {\n          '& button': inheritFont,\n          '& input': inheritFont,\n          '& textarea': inheritFont,\n        },\n      },\n      // apply theme to only if applyTheme is true\n      applyTheme && {\n        color: theme.semanticColors.bodyText,\n        backgroundColor: theme.semanticColors.bodyBackground,\n      },\n      className,\n    ],\n    bodyThemed: [\n      {\n        backgroundColor: theme.semanticColors.bodyBackground,\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { FabricBase } from './Fabric.base';\nimport { getStyles } from './Fabric.styles';\nimport type { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\n/**\n * @deprecated This component is deprecated as of `@fluentui/react` version 8. Use `ThemeProvider` instead.\n */\nexport const Fabric: React.FunctionComponent<IFabricProps> = styled<IFabricProps, IFabricStyleProps, IFabricStyles>(\n  FabricBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Fabric',\n  },\n);\n","const _layersByHostId: { [hostId: string]: (() => void)[] } = {};\n\nlet _defaultHostSelector: string | undefined;\n\n/**\n * Register a layer for a given host id\n * @param hostId Id of the layer host\n * @param layer Layer instance\n */\nexport function registerLayer(hostId: string, callback: () => void) {\n  if (!_layersByHostId[hostId]) {\n    _layersByHostId[hostId] = [];\n  }\n\n  _layersByHostId[hostId].push(callback);\n}\n\n/**\n * Unregister a layer for a given host id\n * @param hostId Id of the layer host\n * @param layer Layer instance\n */\nexport function unregisterLayer(hostId: string, callback: () => void) {\n  if (_layersByHostId[hostId]) {\n    const idx = _layersByHostId[hostId].indexOf(callback);\n    if (idx >= 0) {\n      _layersByHostId[hostId].splice(idx, 1);\n      if (_layersByHostId[hostId].length === 0) {\n        delete _layersByHostId[hostId];\n      }\n    }\n  }\n}\n\n/**\n * Used for notifying applicable Layers that a host is available/unavailable and to re-evaluate Layers that\n * care about the specific host.\n */\nexport function notifyHostChanged(id: string) {\n  if (_layersByHostId[id]) {\n    _layersByHostId[id].forEach(callback => callback());\n  }\n}\n\n/**\n * Sets the default target selector to use when determining the host in which\n * Layered content will be injected into. If not provided, an element will be\n * created at the end of the document body.\n *\n * Passing in a falsy value will clear the default target and reset back to\n * using a created element at the end of document body.\n */\nexport function setDefaultTarget(selector?: string) {\n  _defaultHostSelector = selector;\n}\n\n/**\n * Get the default target selector when determining a host\n */\nexport function getDefaultTarget(): string | undefined {\n  return _defaultHostSelector;\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Fabric } from '../../Fabric';\nimport { classNamesFunction, setPortalAttribute, setVirtualParent } from '../../Utilities';\nimport { registerLayer, getDefaultTarget, unregisterLayer } from './Layer.notification';\nimport { useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { useDocument } from '../../WindowProvider';\nimport type { ILayerProps, ILayerStyleProps, ILayerStyles } from './Layer.types';\n\nconst getClassNames = classNamesFunction<ILayerStyleProps, ILayerStyles>();\n\nexport const LayerBase: React.FunctionComponent<ILayerProps> = React.forwardRef<HTMLDivElement, ILayerProps>(\n  (props, ref) => {\n    const rootRef = React.useRef<HTMLSpanElement>(null);\n    const mergedRef = useMergedRefs(rootRef, ref);\n    const layerRef = React.useRef<HTMLDivElement>();\n\n    // Tracks if the layer mount events need to be raised.\n    // Required to allow the DOM to render after the layer element is added.\n    const [needRaiseLayerMount, setNeedRaiseLayerMount] = React.useState(false);\n\n    const doc = useDocument();\n\n    const {\n      eventBubblingEnabled,\n      styles,\n      theme,\n      className,\n      children,\n      hostId,\n      onLayerDidMount = () => undefined,\n      // eslint-disable-next-line deprecation/deprecation\n      onLayerMounted = () => undefined,\n      onLayerWillUnmount,\n      insertFirst,\n    } = props;\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isNotHost: !hostId,\n    });\n\n    // Returns the user provided hostId props element, the default target selector,\n    // or undefined if document doesn't exist.\n    const getHost = (): Node | undefined => {\n      if (!doc) {\n        return undefined;\n      }\n\n      if (hostId) {\n        return doc.getElementById(hostId) as Node;\n      } else {\n        const defaultHostSelector = getDefaultTarget();\n        return defaultHostSelector ? (doc.querySelector(defaultHostSelector) as Node) : doc.body;\n      }\n    };\n\n    // Removes the current layer element's parentNode and runs onLayerWillUnmount prop if provided.\n    const removeLayerElement = (): void => {\n      onLayerWillUnmount?.();\n\n      const elem = layerRef.current;\n\n      // Clear ref before removing from the DOM\n      layerRef.current = undefined;\n\n      if (elem && elem.parentNode) {\n        elem.parentNode.removeChild(elem);\n      }\n    };\n\n    // If a doc or host exists, it will remove and update layer parentNodes.\n    const createLayerElement = () => {\n      const host = getHost();\n\n      if (!doc || !host) {\n        return;\n      }\n\n      // Remove and re-create any previous existing layer elements.\n      removeLayerElement();\n\n      const el: HTMLDivElement = doc.createElement('div');\n\n      el.className = classNames.root!;\n      setPortalAttribute(el);\n      setVirtualParent(el, rootRef.current!);\n\n      insertFirst ? host.insertBefore(el, host.firstChild) : host.appendChild(el);\n      layerRef.current = el;\n      setNeedRaiseLayerMount(true);\n    };\n\n    // eslint-disable-next-line no-restricted-properties\n    React.useLayoutEffect(() => {\n      createLayerElement();\n      // Check if the user provided a hostId prop and register the layer with the ID.\n      if (hostId) {\n        registerLayer(hostId, createLayerElement);\n      }\n\n      return () => {\n        removeLayerElement();\n\n        if (hostId) {\n          unregisterLayer(hostId, createLayerElement);\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- should run if the hostId updates.\n    }, [hostId]);\n\n    React.useEffect(() => {\n      if (layerRef.current && needRaiseLayerMount) {\n        onLayerMounted?.();\n        onLayerDidMount?.();\n        setNeedRaiseLayerMount(false);\n      }\n    }, [needRaiseLayerMount, onLayerMounted, onLayerDidMount]);\n\n    useDebugWarnings(props);\n\n    return (\n      <span className=\"ms-layer\" ref={mergedRef}>\n        {layerRef.current &&\n          ReactDOM.createPortal(\n            /* eslint-disable deprecation/deprecation */\n            <Fabric {...(!eventBubblingEnabled && getFilteredEvents())} className={classNames.content}>\n              {children}\n            </Fabric>,\n            /* eslint-enable deprecation/deprecation */\n            layerRef.current,\n          )}\n      </span>\n    );\n  },\n);\nLayerBase.displayName = 'LayerBase';\n\nlet filteredEventProps: { [key: string]: (ev: React.SyntheticEvent<HTMLElement, Event>) => void };\n\nconst onFilterEvent = (ev: React.SyntheticEvent<HTMLElement>): void => {\n  // We should just be able to check ev.bubble here and only stop events that are bubbling up. However, even though\n  // mouseenter and mouseleave do NOT bubble up, they are showing up as bubbling. Therefore we stop events based on\n  // event name rather than ev.bubble.\n  if (\n    ev.eventPhase === Event.BUBBLING_PHASE &&\n    ev.type !== 'mouseenter' &&\n    ev.type !== 'mouseleave' &&\n    ev.type !== 'touchstart' &&\n    ev.type !== 'touchend'\n  ) {\n    ev.stopPropagation();\n  }\n};\n\nfunction getFilteredEvents() {\n  if (!filteredEventProps) {\n    filteredEventProps = {} as any;\n    [\n      'onClick',\n      'onContextMenu',\n      'onDoubleClick',\n      'onDrag',\n      'onDragEnd',\n      'onDragEnter',\n      'onDragExit',\n      'onDragLeave',\n      'onDragOver',\n      'onDragStart',\n      'onDrop',\n      'onMouseDown',\n      'onMouseEnter',\n      'onMouseLeave',\n      'onMouseMove',\n      'onMouseOver',\n      'onMouseOut',\n      'onMouseUp',\n      'onTouchMove',\n      'onTouchStart',\n      'onTouchCancel',\n      'onTouchEnd',\n      'onKeyDown',\n      'onKeyPress',\n      'onKeyUp',\n      'onFocus',\n      'onBlur',\n      'onChange',\n      'onInput',\n      'onInvalid',\n      'onSubmit',\n    ].forEach(name => (filteredEventProps[name] = onFilterEvent));\n  }\n  return filteredEventProps;\n}\n\nfunction useDebugWarnings(props: ILayerProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Layer',\n      props,\n      deprecations: { onLayerMounted: 'onLayerDidMount' },\n    });\n  }\n}\n","import { IVirtualElement } from './IVirtualElement';\n/**\n * Sets the virtual parent of an element.\n * Pass `undefined` as the `parent` to clear the virtual parent.\n *\n * @public\n */\nexport function setVirtualParent(child: HTMLElement, parent: HTMLElement | null): void {\n  const virtualChild = <IVirtualElement>child;\n  const virtualParent = <IVirtualElement | null>parent;\n\n  if (!virtualChild._virtual) {\n    virtualChild._virtual = {\n      children: [],\n    };\n  }\n\n  const oldParent = virtualChild._virtual.parent;\n\n  if (oldParent && oldParent !== parent) {\n    // Remove the child from its old parent.\n    const index = oldParent._virtual.children.indexOf(virtualChild);\n\n    if (index > -1) {\n      oldParent._virtual.children.splice(index, 1);\n    }\n  }\n\n  virtualChild._virtual.parent = virtualParent || undefined;\n\n  if (virtualParent) {\n    if (!virtualParent._virtual) {\n      virtualParent._virtual = {\n        children: [],\n      };\n    }\n\n    virtualParent._virtual.children.push(virtualChild);\n  }\n}\n","import { ZIndexes, getGlobalClassNames } from '../../Styling';\nimport type { ILayerStyleProps, ILayerStyles } from './Layer.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Layer',\n  rootNoHost: 'ms-Layer--fixed',\n  content: 'ms-Layer-content',\n};\n\nexport const getStyles = (props: ILayerStyleProps): ILayerStyles => {\n  const { className, isNotHost, theme } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      isNotHost && [\n        classNames.rootNoHost,\n        {\n          position: 'fixed',\n          zIndex: ZIndexes.Layer,\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          visibility: 'hidden',\n        },\n      ],\n      className,\n    ],\n    content: [\n      classNames.content,\n      {\n        visibility: 'visible',\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { LayerBase } from './Layer.base';\nimport { getStyles } from './Layer.styles';\nimport type { ILayerProps, ILayerStyleProps, ILayerStyles } from './Layer.types';\n\nexport const Layer: React.FunctionComponent<ILayerProps> = styled<ILayerProps, ILayerStyleProps, ILayerStyles>(\n  LayerBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Layer',\n    fields: ['hostId', 'theme', 'styles'],\n  },\n);\n","import * as React from 'react';\nimport { CalloutContent } from './CalloutContent';\nimport { Layer } from '../../Layer';\nimport type { ICalloutProps } from './Callout.types';\n\nexport const Callout: React.FunctionComponent<ICalloutProps> = React.forwardRef<HTMLDivElement, ICalloutProps>(\n  ({ layerProps, doNotLayer, ...rest }, forwardedRef) => {\n    const content = <CalloutContent {...rest} doNotLayer={doNotLayer} ref={forwardedRef} />;\n    return doNotLayer ? content : <Layer {...layerProps}>{content}</Layer>;\n  },\n);\nCallout.displayName = 'Callout';\n","import * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport type { IContextualMenuItemProps, IContextualMenuItemRenderFunctions } from './ContextualMenuItem.types';\n\nconst defaultIconRenderer = (props: IContextualMenuItemProps) => {\n  const { item, classNames } = props;\n  const { iconProps } = item;\n  return <Icon {...iconProps} className={classNames.icon} />;\n};\n\nconst renderItemIcon = (props: IContextualMenuItemProps) => {\n  const { item, hasIcons } = props;\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props, defaultIconRenderer);\n  }\n\n  return defaultIconRenderer(props);\n};\n\nconst renderCheckMarkIcon = ({ onCheckmarkClick, item, classNames }: IContextualMenuItemProps) => {\n  const isItemChecked = getIsChecked(item);\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    const onClick = (e: React.MouseEvent<HTMLElement>) => onCheckmarkClick(item, e);\n\n    return (\n      <Icon\n        iconName={item.canCheck !== false && isItemChecked ? 'CheckMark' : ''}\n        className={classNames.checkmarkIcon}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={onClick}\n      />\n    );\n  }\n  return null;\n};\n\nconst renderItemName = ({ item, classNames }: IContextualMenuItemProps) => {\n  /* eslint-disable deprecation/deprecation */\n  if (item.text || item.name) {\n    return <span className={classNames.label}>{item.text || item.name}</span>;\n  }\n  /* eslint-enable deprecation/deprecation */\n  return null;\n};\n\nconst renderSecondaryText = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (item.secondaryText) {\n    return <span className={classNames.secondaryText}>{item.secondaryText}</span>;\n  }\n  return null;\n};\n\nconst renderSubMenuIcon = ({ item, classNames, theme }: IContextualMenuItemProps) => {\n  if (hasSubmenu(item)) {\n    return (\n      <Icon\n        iconName={getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'}\n        {...item.submenuIconProps}\n        className={classNames.subMenuIcon}\n      />\n    );\n  }\n  return null;\n};\n\nexport class ContextualMenuItemBase extends React.Component<IContextualMenuItemProps, {}> {\n  constructor(props: IContextualMenuItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render() {\n    const { item, classNames } = this.props;\n    const renderContent = item.onRenderContent || this._renderLayout;\n\n    return (\n      <div className={item.split ? classNames.linkContentMenu : classNames.linkContent}>\n        {renderContent(this.props, {\n          renderCheckMarkIcon,\n          renderItemIcon,\n          renderItemName,\n          renderSecondaryText,\n          renderSubMenuIcon,\n        })}\n      </div>\n    );\n  }\n\n  public openSubMenu = (): void => {\n    const { item, openSubMenu, getSubmenuTarget } = this.props;\n    if (getSubmenuTarget) {\n      const submenuTarget = getSubmenuTarget();\n      if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n        openSubMenu(item, submenuTarget);\n      }\n    }\n  };\n\n  public dismissSubMenu = (): void => {\n    const { item, dismissSubMenu } = this.props;\n    if (hasSubmenu(item) && dismissSubMenu) {\n      dismissSubMenu();\n    }\n  };\n\n  public dismissMenu = (dismissAll?: boolean): void => {\n    const { dismissMenu } = this.props;\n    if (dismissMenu) {\n      dismissMenu(undefined /* ev */, dismissAll);\n    }\n  };\n\n  private _renderLayout(props: IContextualMenuItemProps, defaultRenders: IContextualMenuItemRenderFunctions) {\n    return (\n      <>\n        {defaultRenders.renderCheckMarkIcon(props)}\n        {defaultRenders.renderItemIcon(props)}\n        {defaultRenders.renderItemName(props)}\n        {defaultRenders.renderSecondaryText(props)}\n        {defaultRenders.renderSubMenuIcon(props)}\n      </>\n    );\n  }\n}\n","export const KTP_PREFIX = 'ktp';\nexport const KTP_SEPARATOR = '-';\nexport const KTP_FULL_PREFIX = KTP_PREFIX + KTP_SEPARATOR;\nexport const DATAKTP_TARGET = 'data-ktp-target';\nexport const DATAKTP_EXECUTE_TARGET = 'data-ktp-execute-target';\nexport const DATAKTP_ARIA_TARGET = 'data-ktp-aria-target';\nexport const KTP_LAYER_ID = 'ktp-layer-id';\nexport const KTP_ARIA_SEPARATOR = ', ';\n\n// Events\nexport namespace KeytipEvents {\n  export const KEYTIP_ADDED = 'keytipAdded';\n  export const KEYTIP_REMOVED = 'keytipRemoved';\n  export const KEYTIP_UPDATED = 'keytipUpdated';\n  export const PERSISTED_KEYTIP_ADDED = 'persistedKeytipAdded';\n  export const PERSISTED_KEYTIP_REMOVED = 'persistedKeytipRemoved';\n  export const PERSISTED_KEYTIP_EXECUTE = 'persistedKeytipExecute';\n  export const ENTER_KEYTIP_MODE = 'enterKeytipMode';\n  export const EXIT_KEYTIP_MODE = 'exitKeytipMode';\n}\n","import { memoizeFunction } from '../../Utilities';\nimport { mergeStyleSets } from '../../Styling';\nimport type { ITheme } from '../../Styling';\nimport type { IVerticalDividerClassNames } from './VerticalDivider.types';\n\n/**\n * @deprecated use getStyles exported from VerticalDivider.styles.ts\n */\nexport const getDividerClassNames = memoizeFunction(\n  // eslint-disable-next-line deprecation/deprecation\n  (theme: ITheme): IVerticalDividerClassNames => {\n    return mergeStyleSets({\n      wrapper: {\n        display: 'inline-flex',\n        height: '100%',\n        alignItems: 'center',\n      },\n      divider: {\n        width: 1,\n        height: '100%',\n        backgroundColor: theme.palette.neutralTertiaryAlt,\n      },\n    });\n  },\n);\n","import {\n  concatStyleSets,\n  getFocusStyle,\n  HighContrastSelector,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nimport type { IRawStyle, ITheme } from '../../Styling';\nimport type { IMenuItemStyles } from './ContextualMenu.types';\n\nexport const CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nconst getItemHighContrastStyles = memoizeFunction(\n  (): IRawStyle => {\n    return {\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n          color: 'HighlightText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    };\n  },\n);\n\nexport const getMenuItemStyles = memoizeFunction(\n  (theme: ITheme): IMenuItemStyles => {\n    const { semanticColors, fonts, palette } = theme;\n    const ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n    const ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n    const ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n    const ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n\n    const menuItemStyles: IMenuItemStyles = {\n      item: [\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          position: 'relative',\n          boxSizing: 'border-box',\n        },\n      ],\n      divider: {\n        display: 'block',\n        height: '1px',\n        backgroundColor: ContextualMenuItemDividerColor,\n        position: 'relative',\n      },\n      root: [\n        getFocusStyle(theme),\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          backgroundColor: 'transparent',\n          border: 'none',\n          width: '100%',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          display: 'block',\n          cursor: 'pointer',\n          padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n          textAlign: 'left',\n        },\n      ],\n      rootDisabled: {\n        color: semanticColors.disabledBodyText,\n        cursor: 'default',\n        pointerEvents: 'none',\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            opacity: 1,\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      rootHovered: {\n        backgroundColor: ContextualMenuItemBackgroundHoverColor,\n        color: ContextualMenuItemTextHoverColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDarkAlt,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n        ...getItemHighContrastStyles(),\n      },\n      rootFocused: {\n        backgroundColor: palette.white,\n        ...getItemHighContrastStyles(),\n      },\n      rootChecked: {\n        selectors: {\n          '.ms-ContextualMenu-checkmarkIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n        ...getItemHighContrastStyles(),\n      },\n      rootPressed: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDark,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n        ...getItemHighContrastStyles(),\n      },\n      rootExpanded: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        color: semanticColors.bodyTextChecked,\n        ...getItemHighContrastStyles(),\n      },\n      linkContent: {\n        whiteSpace: 'nowrap',\n        height: 'inherit',\n        display: 'flex',\n        alignItems: 'center',\n        maxWidth: '100%',\n      },\n      anchorLink: {\n        padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n        textRendering: 'auto',\n        color: 'inherit',\n        letterSpacing: 'normal',\n        wordSpacing: 'normal',\n        textTransform: 'none',\n        textIndent: '0px',\n        textShadow: 'none',\n        textDecoration: 'none',\n        boxSizing: 'border-box',\n      },\n      label: {\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        display: 'inline-block',\n        flexGrow: '1',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n      },\n      secondaryText: {\n        color: theme.palette.neutralSecondary,\n        paddingLeft: '20px',\n        textAlign: 'right',\n      },\n      icon: {\n        display: 'inline-block',\n        minHeight: '1px',\n        maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        fontSize: IconFontSizes.medium,\n        width: IconFontSizes.medium,\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        selectors: {\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.large,\n            width: IconFontSizes.large,\n          },\n        },\n      },\n      iconColor: {\n        color: semanticColors.menuIcon,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'inherit',\n          },\n          ['$root:hover &']: {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'HighlightText',\n              },\n            },\n          },\n          ['$root:focus &']: {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'HighlightText',\n              },\n            },\n          },\n        },\n      },\n      iconDisabled: {\n        color: semanticColors.disabledBodyText,\n      },\n      checkmarkIcon: {\n        color: semanticColors.bodySubtext,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'HighlightText',\n          },\n        },\n      },\n      subMenuIcon: {\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        color: palette.neutralSecondary,\n        textAlign: 'center',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        fontSize: IconFontSizes.small, // 12px\n        selectors: {\n          ':hover': {\n            color: palette.neutralPrimary,\n          },\n          ':active': {\n            color: palette.neutralPrimary,\n          },\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.medium, // 16px\n          },\n          [HighContrastSelector]: {\n            color: 'HighlightText',\n          },\n        },\n      },\n      splitButtonFlexContainer: [\n        getFocusStyle(theme),\n        {\n          display: 'flex',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          flexWrap: 'nowrap',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        },\n      ],\n    };\n\n    return concatStyleSets(menuItemStyles);\n  },\n);\n","import { getDividerClassNames } from '../Divider/VerticalDivider.classNames';\nimport { getMenuItemStyles } from './ContextualMenu.cnstyles';\nimport {\n  mergeStyleSets,\n  getGlobalClassNames,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  hiddenContentStyle,\n} from '../../Styling';\nimport { memoizeFunction, IsFocusVisibleClassName } from '../../Utilities';\nimport type { ITheme } from '../../Styling';\nimport type { IVerticalDividerClassNames } from '../Divider/VerticalDivider.types';\nimport type { IContextualMenuItemStyles, IContextualMenuItemStyleProps } from './ContextualMenuItem.types';\nimport type { IContextualMenuSubComponentStyles } from './ContextualMenu.types';\n\n/**\n * @deprecated Deprecated in favor of mergeStyles API.\n */\nexport interface IContextualMenuClassNames {\n  container?: string;\n  root?: string;\n  list?: string;\n  header?: string;\n  title?: string;\n  subComponentStyles?: IContextualMenuSubComponentStyles;\n}\n\n/**\n * @deprecated Deprecated in favor of mergeStyles API.\n */\nexport interface IMenuItemClassNames {\n  item?: string;\n  divider?: string;\n  root?: string;\n  linkContent?: string;\n  icon?: string;\n  checkmarkIcon?: string;\n  subMenuIcon?: string;\n  label?: string;\n  secondaryText?: string;\n  splitContainer?: string;\n  splitPrimary?: string;\n  splitMenu?: string;\n  linkContentMenu?: string;\n  screenReaderText?: string;\n}\n\nconst CONTEXTUAL_SPLIT_MENU_MINWIDTH = '28px';\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nexport const getSplitButtonVerticalDividerClassNames = memoizeFunction(\n  /* eslint-disable deprecation/deprecation */\n  (theme: ITheme): IVerticalDividerClassNames => {\n    return mergeStyleSets(getDividerClassNames(theme), {\n      /* eslint-enable deprecation/deprecation */\n      wrapper: {\n        position: 'absolute',\n        right: 28, // width of the splitMenu based on the padding plus icon fontSize\n        selectors: {\n          [MediumScreenSelector]: {\n            right: 32, // fontSize of the icon increased from 12px to 16px\n          },\n        },\n      },\n      divider: {\n        height: 16,\n        width: 1,\n      },\n    });\n  },\n);\n\nconst GlobalClassNames = {\n  item: 'ms-ContextualMenu-item',\n  divider: 'ms-ContextualMenu-divider',\n  root: 'ms-ContextualMenu-link',\n  isChecked: 'is-checked',\n  isExpanded: 'is-expanded',\n  isDisabled: 'is-disabled',\n  linkContent: 'ms-ContextualMenu-linkContent',\n  linkContentMenu: 'ms-ContextualMenu-linkContent',\n  icon: 'ms-ContextualMenu-icon',\n  iconColor: 'ms-ContextualMenu-iconColor',\n  checkmarkIcon: 'ms-ContextualMenu-checkmarkIcon',\n  subMenuIcon: 'ms-ContextualMenu-submenuIcon',\n  label: 'ms-ContextualMenu-itemText',\n  secondaryText: 'ms-ContextualMenu-secondaryText',\n  splitMenu: 'ms-ContextualMenu-splitMenu',\n  screenReaderText: 'ms-ContextualMenu-screenReaderText',\n};\n\n/**\n * @deprecated Will be removed in \\>= 7.0.\n * This is a package-internal method that has been depended on.\n * It is being kept in this form for backwards compatibility.\n * @internal\n */\n// TODO: Audit perf. impact of and potentially remove memoizeFunction.\n// https://github.com/microsoft/fluentui/issues/5534\nexport const getItemClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    isAnchorLink: boolean,\n    knownIcon: boolean,\n    itemClassName?: string,\n    dividerClassName?: string,\n    iconClassName?: string,\n    subMenuClassName?: string,\n    primaryDisabled?: boolean,\n    className?: string,\n  ): IContextualMenuItemStyles => {\n    const styles = getMenuItemStyles(theme);\n    const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n    return mergeStyleSets({\n      item: [classNames.item, styles.item, itemClassName],\n      divider: [classNames.divider, styles.divider, dividerClassName],\n      root: [\n        classNames.root,\n        styles.root,\n        checked && [classNames.isChecked, styles.rootChecked],\n        isAnchorLink && styles.anchorLink,\n        expanded && [classNames.isExpanded, styles.rootExpanded],\n        disabled && [classNames.isDisabled, styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n        className,\n      ],\n      splitPrimary: [\n        styles.root,\n        {\n          width: `calc(100% - ${CONTEXTUAL_SPLIT_MENU_MINWIDTH})`,\n        },\n        checked && ['is-checked', styles.rootChecked],\n        (disabled || primaryDisabled) && ['is-disabled', styles.rootDisabled],\n        !(disabled || primaryDisabled) &&\n          !checked && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                // when hovering over the splitPrimary also affect the splitMenu\n                [`:hover ~ .${classNames.splitMenu}`]: styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      splitMenu: [\n        classNames.splitMenu,\n        styles.root,\n        {\n          flexBasis: '0',\n          padding: '0 8px',\n          minWidth: CONTEXTUAL_SPLIT_MENU_MINWIDTH,\n        },\n        expanded && ['is-expanded', styles.rootExpanded],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      anchorLink: styles.anchorLink,\n      linkContent: [classNames.linkContent, styles.linkContent],\n      linkContentMenu: [\n        classNames.linkContentMenu,\n        styles.linkContent,\n        {\n          justifyContent: 'center',\n        },\n      ],\n      icon: [\n        classNames.icon,\n        knownIcon && styles.iconColor,\n        styles.icon,\n        iconClassName,\n        disabled && [classNames.isDisabled, styles.iconDisabled],\n      ],\n      iconColor: styles.iconColor,\n      checkmarkIcon: [classNames.checkmarkIcon, knownIcon && styles.checkmarkIcon, styles.icon, iconClassName],\n      subMenuIcon: [\n        classNames.subMenuIcon,\n        styles.subMenuIcon,\n        subMenuClassName,\n        expanded && { color: theme.palette.neutralPrimary },\n        disabled && [styles.iconDisabled],\n      ],\n      label: [classNames.label, styles.label],\n      secondaryText: [classNames.secondaryText, styles.secondaryText],\n      splitContainer: [\n        styles.splitButtonFlexContainer,\n        !disabled &&\n          !checked && [\n            {\n              selectors: {\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n              },\n            },\n          ],\n      ],\n      screenReaderText: [\n        classNames.screenReaderText,\n        styles.screenReaderText,\n        hiddenContentStyle,\n        { visibility: 'hidden' },\n      ],\n    });\n  },\n);\n\n/**\n * Wrapper function for generating ContextualMenuItem classNames which adheres to\n * the getStyles API, but invokes memoized className generator function with\n * primitive values.\n *\n * @param props the ContextualMenuItem style props used to generate its styles.\n */\nexport const getItemStyles = (props: IContextualMenuItemStyleProps): IContextualMenuItemStyles => {\n  const {\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  } = props;\n\n  // eslint-disable-next-line deprecation/deprecation\n  return getItemClassNames(\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  );\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { ContextualMenuItemBase } from './ContextualMenuItem.base';\nimport { getItemStyles } from './ContextualMenu.classNames';\nimport type {\n  IContextualMenuItemProps,\n  IContextualMenuItemStyleProps,\n  IContextualMenuItemStyles,\n} from './ContextualMenuItem.types';\n\n/**\n * ContextualMenuItem description\n */\nexport const ContextualMenuItem: React.FunctionComponent<IContextualMenuItemProps> = styled<\n  IContextualMenuItemProps,\n  IContextualMenuItemStyleProps,\n  IContextualMenuItemStyles\n>(ContextualMenuItemBase, getItemStyles, undefined, { scope: 'ContextualMenuItem' });\n","import * as React from 'react';\nimport { initializeComponentRef, shallowCompare } from '../../../Utilities';\nimport type { IContextualMenuItemWrapperProps } from './ContextualMenuItemWrapper.types';\n\nexport class ContextualMenuItemWrapper extends React.Component<IContextualMenuItemWrapperProps> {\n  constructor(props: IContextualMenuItemWrapperProps) {\n    super(props);\n    initializeComponentRef(this);\n  }\n\n  public shouldComponentUpdate(newProps: IContextualMenuItemWrapperProps): boolean {\n    return !shallowCompare(newProps, this.props);\n  }\n\n  protected _onItemMouseEnter = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClickBase } = this.props;\n    if (onItemClickBase) {\n      onItemClickBase(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _onItemMouseLeave = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseLeave } = this.props;\n    if (onItemMouseLeave) {\n      onItemMouseLeave(item, ev);\n    }\n  };\n\n  protected _onItemKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { item, onItemKeyDown } = this.props;\n    if (onItemKeyDown) {\n      onItemKeyDown(item, ev);\n    }\n  };\n\n  protected _onItemMouseMove = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove(item, ev, ev.currentTarget as HTMLElement);\n    }\n  };\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return undefined;\n  };\n}\n","import { useRef, useEffect } from 'react';\n\n/**\n * Hook keeping track of a given value from a previous execution of the component the Hook is used in.\n *\n * See [React Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state)\n */\nexport function usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T | undefined>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import { EventGroup, getId } from '../../Utilities';\nimport { KeytipEvents } from '../../utilities/keytips/KeytipConstants';\nimport type { IKeytipProps } from '../../Keytip';\n\nexport interface IUniqueKeytip {\n  uniqueID: string;\n  keytip: IKeytipProps;\n}\n\n/**\n * This class is responsible for handling registering, updating, and unregistering of keytips\n */\nexport class KeytipManager {\n  private static _instance: KeytipManager = new KeytipManager();\n\n  public keytips: { [key: string]: IUniqueKeytip } = {};\n  public persistedKeytips: { [key: string]: IUniqueKeytip } = {};\n  public sequenceMapping: { [key: string]: IKeytipProps } = {};\n\n  // This is (and should be) updated and kept in sync\n  // with the inKeytipMode in KeytipLayer.\n  public inKeytipMode = false;\n\n  // Boolean that gets checked before entering keytip mode by the KeytipLayer\n  // Used for an override in special cases (e.g. Disable entering keytip mode when a modal is shown)\n  public shouldEnterKeytipMode = true;\n\n  // Boolean to indicate whether to delay firing an event to update subscribers of\n  // keytip data changed.\n  public delayUpdatingKeytipChange = false;\n\n  /**\n   * Static function to get singleton KeytipManager instance\n   *\n   * @returns Singleton KeytipManager instance\n   */\n  public static getInstance(): KeytipManager {\n    return this._instance;\n  }\n\n  /**\n   * Initialization code to set set parameters to define\n   * how the KeytipManager handles keytip data.\n   *\n   * @param delayUpdatingKeytipChange - T/F if we should delay notifiying keytip subscribers\n   * of keytip changes\n   */\n  public init(delayUpdatingKeytipChange: boolean) {\n    this.delayUpdatingKeytipChange = delayUpdatingKeytipChange;\n  }\n\n  /**\n   * Registers a keytip\n   *\n   * @param keytipProps - Keytip to register\n   * @param persisted - T/F if this keytip should be persisted, default is false\n   * @returns Unique ID for this keytip\n   */\n  public register(keytipProps: IKeytipProps, persisted: boolean = false): string {\n    let props: IKeytipProps = keytipProps;\n    if (!persisted) {\n      // Add the overflowSetSequence if necessary\n      props = this.addParentOverflow(keytipProps);\n      this.sequenceMapping[props.keySequences.toString()] = props;\n    }\n    // Create a unique keytip\n    const uniqueKeytip: IUniqueKeytip = this._getUniqueKtp(props);\n    // Add to dictionary\n    persisted\n      ? (this.persistedKeytips[uniqueKeytip.uniqueID] = uniqueKeytip)\n      : (this.keytips[uniqueKeytip.uniqueID] = uniqueKeytip);\n\n    // We only want to add something new if we are currently showing keytip mode\n    if (this.inKeytipMode || !this.delayUpdatingKeytipChange) {\n      const event = persisted ? KeytipEvents.PERSISTED_KEYTIP_ADDED : KeytipEvents.KEYTIP_ADDED;\n      EventGroup.raise(this, event, {\n        keytip: props,\n        uniqueID: uniqueKeytip.uniqueID,\n      });\n    }\n\n    return uniqueKeytip.uniqueID;\n  }\n\n  /**\n   * Update a keytip\n   *\n   * @param keytipProps - Keytip to update\n   * @param uniqueID - Unique ID of this keytip\n   */\n  public update(keytipProps: IKeytipProps, uniqueID: string): void {\n    const newKeytipProps = this.addParentOverflow(keytipProps);\n    const uniqueKeytip = this._getUniqueKtp(newKeytipProps, uniqueID);\n    const oldKeyTip = this.keytips[uniqueID];\n    if (oldKeyTip) {\n      // Update everything except 'visible'\n      uniqueKeytip.keytip.visible = oldKeyTip.keytip.visible;\n      // Update keytip in this.keytips\n      this.keytips[uniqueID] = uniqueKeytip;\n\n      // Update the sequence to be up to date\n      delete this.sequenceMapping[oldKeyTip.keytip.keySequences.toString()];\n      this.sequenceMapping[uniqueKeytip.keytip.keySequences.toString()] = uniqueKeytip.keytip;\n\n      // Raise event only if we are currently in keytip mode\n      if (this.inKeytipMode || !this.delayUpdatingKeytipChange) {\n        EventGroup.raise(this, KeytipEvents.KEYTIP_UPDATED, {\n          keytip: uniqueKeytip.keytip,\n          uniqueID: uniqueKeytip.uniqueID,\n        });\n      }\n    }\n  }\n\n  /**\n   * Unregisters a keytip\n   *\n   * @param keytipToRemove - IKeytipProps of the keytip to remove\n   * @param uniqueID - Unique ID of this keytip\n   * @param persisted - T/F if this keytip should be persisted, default is false\n   */\n  public unregister(keytipToRemove: IKeytipProps, uniqueID: string, persisted: boolean = false): void {\n    persisted ? delete this.persistedKeytips[uniqueID] : delete this.keytips[uniqueID];\n    !persisted && delete this.sequenceMapping[keytipToRemove.keySequences.toString()];\n\n    const event = persisted ? KeytipEvents.PERSISTED_KEYTIP_REMOVED : KeytipEvents.KEYTIP_REMOVED;\n    // Update keytips only if we're in keytip mode\n    if (this.inKeytipMode || !this.delayUpdatingKeytipChange) {\n      EventGroup.raise(this, event, {\n        keytip: keytipToRemove,\n        uniqueID: uniqueID,\n      });\n    }\n  }\n\n  /**\n   * Manual call to enter keytip mode\n   */\n  public enterKeytipMode(): void {\n    EventGroup.raise(this, KeytipEvents.ENTER_KEYTIP_MODE);\n  }\n\n  /**\n   * Manual call to exit keytip mode\n   */\n  public exitKeytipMode(): void {\n    EventGroup.raise(this, KeytipEvents.EXIT_KEYTIP_MODE);\n  }\n\n  /**\n   * Gets all IKeytipProps from this.keytips\n   *\n   * @returns All keytips stored in the manager\n   */\n  public getKeytips(): IKeytipProps[] {\n    return Object.keys(this.keytips).map(key => this.keytips[key].keytip);\n  }\n\n  /**\n   * Adds the overflowSetSequence to the keytipProps if its parent keytip also has it\n   *\n   * @param keytipProps - Keytip props to add overflowSetSequence to if necessary\n   * @returns - Modified keytip props, if needed to be modified\n   */\n  public addParentOverflow(keytipProps: IKeytipProps): IKeytipProps {\n    const fullSequence = [...keytipProps.keySequences];\n    fullSequence.pop();\n    if (fullSequence.length !== 0) {\n      const parentKeytip = this.sequenceMapping[fullSequence.toString()];\n      if (parentKeytip && parentKeytip.overflowSetSequence) {\n        return {\n          ...keytipProps,\n          overflowSetSequence: parentKeytip.overflowSetSequence,\n        };\n      }\n    }\n    return keytipProps;\n  }\n\n  /**\n   * Public function to bind for overflow items that have a submenu\n   */\n  public menuExecute(overflowButtonSequences: string[], keytipSequences: string[]) {\n    EventGroup.raise(this, KeytipEvents.PERSISTED_KEYTIP_EXECUTE, {\n      overflowButtonSequences,\n      keytipSequences,\n    });\n  }\n\n  /**\n   * Creates an IUniqueKeytip object\n   *\n   * @param keytipProps - IKeytipProps\n   * @param uniqueID - Unique ID, will default to the next unique ID if not passed\n   * @returns IUniqueKeytip object\n   */\n  private _getUniqueKtp(keytipProps: IKeytipProps, uniqueID: string = getId()): IUniqueKeytip {\n    return { keytip: { ...keytipProps }, uniqueID };\n  }\n}\n","import { KTP_SEPARATOR, KTP_PREFIX, DATAKTP_TARGET, DATAKTP_EXECUTE_TARGET, KTP_LAYER_ID } from './KeytipConstants';\nimport { addElementAtIndex } from '../../Utilities';\n\n/**\n * Converts a whole set of KeySequences into one keytip ID, which will be the ID for the last keytip sequence specified\n * keySequences should not include the initial keytip 'start' sequence.\n *\n * @param keySequences - Full path of IKeySequences for one keytip.\n * @returns String to use for the keytip ID.\n */\nexport function sequencesToID(keySequences: string[]): string {\n  return keySequences.reduce((prevValue: string, keySequence: string): string => {\n    return prevValue + KTP_SEPARATOR + keySequence.split('').join(KTP_SEPARATOR);\n  }, KTP_PREFIX);\n}\n\n/**\n * Merges an overflow sequence with a key sequence.\n *\n * @param keySequences - Full sequence for one keytip.\n * @param overflowKeySequences - Full overflow keytip sequence.\n * @returns Sequence that will be used by the keytip when in the overflow.\n */\nexport function mergeOverflows(keySequences: string[], overflowKeySequences: string[]): string[] {\n  const overflowSequenceLen = overflowKeySequences.length;\n  const overflowSequence = [...overflowKeySequences].pop();\n  const newKeySequences = [...keySequences];\n  return addElementAtIndex(newKeySequences, overflowSequenceLen - 1, overflowSequence!);\n}\n\n/**\n * Constructs the data-ktp-target attribute selector from a full key sequence.\n *\n * @param keySequences - Full string[] for a Keytip.\n * @returns String selector to use to query for the keytip target.\n */\nexport function ktpTargetFromSequences(keySequences: string[]): string {\n  return '[' + DATAKTP_TARGET + '=\"' + sequencesToID(keySequences) + '\"]';\n}\n\n/**\n * Constructs the data-ktp-execute-target attribute selector from a keytip ID.\n *\n * @param keytipId - ID of the Keytip.\n * @returns String selector to use to query for the keytip execute target.\n */\nexport function ktpTargetFromId(keytipId: string): string {\n  return '[' + DATAKTP_EXECUTE_TARGET + '=\"' + keytipId + '\"]';\n}\n\n/**\n * Gets the aria-describedby value to put on the component with this keytip.\n *\n * @param keySequences - KeySequences of the keytip.\n * @returns The aria-describedby value to set on the component with this keytip.\n */\nexport function getAriaDescribedBy(keySequences: string[]): string {\n  const describedby = ' ' + KTP_LAYER_ID;\n  if (!keySequences.length) {\n    // Return just the layer ID\n    return describedby;\n  }\n\n  return describedby + ' ' + sequencesToID(keySequences);\n}\n","import * as React from 'react';\nimport { useConst, usePrevious } from '@fluentui/react-hooks';\nimport { mergeAriaAttributeValues } from '../../Utilities';\nimport { KeytipManager, mergeOverflows, sequencesToID, getAriaDescribedBy } from '../../utilities/keytips/index';\nimport type { KeytipDataOptions } from './KeytipData.types';\nimport type { IKeytipProps } from '../../Keytip';\n\nexport interface IKeytipData {\n  ariaDescribedBy: string | undefined;\n  keytipId: string | undefined;\n}\n\n/**\n * Hook that creates attributes for components which are enabled with Keytip.\n */\nexport function useKeytipData(options: KeytipDataOptions): IKeytipData {\n  const uniqueId = React.useRef<string>();\n  const keytipProps: IKeytipProps | undefined = options.keytipProps\n    ? {\n        disabled: options.disabled,\n        ...options.keytipProps,\n      }\n    : undefined;\n\n  const keytipManager = useConst<KeytipManager>(KeytipManager.getInstance());\n  const prevOptions = usePrevious(options);\n\n  // useLayoutEffect used to strictly emulate didUpdate/didMount behavior\n  // eslint-disable-next-line no-restricted-properties\n  React.useLayoutEffect(() => {\n    if (\n      uniqueId.current &&\n      keytipProps &&\n      (prevOptions?.keytipProps !== options.keytipProps || prevOptions?.disabled !== options.disabled)\n    ) {\n      keytipManager.update(keytipProps, uniqueId.current);\n    }\n  });\n\n  // eslint-disable-next-line no-restricted-properties\n  React.useLayoutEffect(() => {\n    // Register Keytip in KeytipManager\n    if (keytipProps) {\n      uniqueId.current = keytipManager.register(keytipProps);\n    }\n\n    return () => {\n      // Unregister Keytip in KeytipManager\n      keytipProps && keytipManager.unregister(keytipProps, uniqueId.current!);\n    };\n    // this is meant to run only at mount, and updates are handled separately\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let nativeKeytipProps: IKeytipData = {\n    ariaDescribedBy: undefined,\n    keytipId: undefined,\n  };\n\n  if (keytipProps) {\n    nativeKeytipProps = getKeytipData(keytipManager, keytipProps, options.ariaDescribedBy);\n  }\n\n  return nativeKeytipProps;\n}\n\n/**\n * Gets the aria- and data- attributes to attach to the component\n * @param keytipProps - options for Keytip\n * @param describedByPrepend - ariaDescribedBy value to prepend\n */\nfunction getKeytipData(\n  keytipManager: KeytipManager,\n  keytipProps: IKeytipProps,\n  describedByPrepend?: string,\n): IKeytipData {\n  // Add the parent overflow sequence if necessary\n  const newKeytipProps = keytipManager.addParentOverflow(keytipProps);\n\n  // Construct aria-describedby and data-ktp-id attributes\n  const ariaDescribedBy = mergeAriaAttributeValues(\n    describedByPrepend,\n    getAriaDescribedBy(newKeytipProps.keySequences),\n  )!;\n\n  let keySequences = [...newKeytipProps.keySequences];\n  if (newKeytipProps.overflowSetSequence) {\n    keySequences = mergeOverflows(keySequences, newKeytipProps.overflowSetSequence);\n  }\n  const keytipId = sequencesToID(keySequences);\n\n  return {\n    ariaDescribedBy,\n    keytipId,\n  };\n}\n","import * as React from 'react';\nimport { DATAKTP_TARGET, DATAKTP_EXECUTE_TARGET } from '../../utilities/keytips/index';\nimport { useKeytipData } from './useKeytipData';\nimport type { IRenderComponent } from '../../Utilities';\nimport type { IKeytipDataProps } from './KeytipData.types';\n\n/**\n * A small element to help the target component correctly read out its aria-describedby for its Keytip\n * {@docCategory Keytips}\n */\nexport const KeytipData: React.FunctionComponent<IKeytipDataProps & IRenderComponent<{}>> = props => {\n  const { children, ...keytipDataProps } = props;\n  const { keytipId, ariaDescribedBy } = useKeytipData(keytipDataProps);\n\n  return children({\n    [DATAKTP_TARGET]: keytipId,\n    [DATAKTP_EXECUTE_TARGET]: keytipId,\n    'aria-describedby': ariaDescribedBy,\n  });\n};\n","import * as React from 'react';\nimport { anchorProperties, getNativeProps, memoizeFunction, getId, mergeAriaAttributeValues } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport type { IKeytipDataProps } from '../../../KeytipData';\nimport type { IKeytipProps } from '../../../Keytip';\n\nexport class ContextualMenuAnchor extends ContextualMenuItemWrapper {\n  private _anchor = React.createRef<HTMLAnchorElement>();\n  private _ariaDescriptionId: string;\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  public render() {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      expandedMenuItemKey,\n      onItemClick,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu,\n    } = this.props;\n\n    let anchorRel = item.rel;\n    if (item.target && item.target.toLowerCase() === '_blank') {\n      anchorRel = anchorRel ? anchorRel : 'nofollow noopener noreferrer'; // Safe default to prevent tabjacking\n    }\n\n    const itemHasSubmenu = hasSubmenu(item);\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLAnchorElement>>(item, anchorProperties);\n    const disabled = isItemDisabled(item);\n    const { itemProps, ariaDescription } = item;\n\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    // Check for ariaDescription to set the _ariaDescriptionId and render a hidden span with\n    // the description in it to be added to ariaDescribedBy\n    if (ariaDescription) {\n      this._ariaDescriptionId = getId();\n    }\n    const ariaDescribedByIds = mergeAriaAttributeValues(\n      item.ariaDescribedBy,\n      ariaDescription ? this._ariaDescriptionId : undefined,\n      nativeProps['aria-describedby'],\n    );\n\n    const additionalItemProperties = {\n      'aria-describedby': ariaDescribedByIds,\n    };\n\n    return (\n      <div>\n        <KeytipData keytipProps={item.keytipProps} ariaDescribedBy={ariaDescribedByIds} disabled={disabled}>\n          {(keytipAttributes: IKeytipDataProps): JSX.Element => (\n            <a\n              {...additionalItemProperties}\n              {...nativeProps}\n              {...keytipAttributes}\n              ref={this._anchor}\n              href={item.href}\n              target={item.target}\n              rel={anchorRel}\n              className={classNames.root}\n              role=\"menuitem\"\n              aria-haspopup={itemHasSubmenu || undefined}\n              aria-expanded={itemHasSubmenu ? item.key === expandedMenuItemKey : undefined}\n              aria-posinset={focusableElementIndex + 1}\n              aria-setsize={totalItemCount}\n              aria-disabled={isItemDisabled(item)}\n              // eslint-disable-next-line deprecation/deprecation\n              style={item.style}\n              onClick={this._onItemClick}\n              onMouseEnter={this._onItemMouseEnter}\n              onMouseLeave={this._onItemMouseLeave}\n              onMouseMove={this._onItemMouseMove}\n              onKeyDown={itemHasSubmenu ? this._onItemKeyDown : undefined}\n            >\n              <ChildrenRenderer\n                componentRef={item.componentRef}\n                item={item}\n                classNames={classNames}\n                index={index}\n                onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n                hasIcons={hasIcons}\n                openSubMenu={openSubMenu}\n                dismissSubMenu={dismissSubMenu}\n                dismissMenu={dismissMenu}\n                getSubmenuTarget={this._getSubmenuTarget}\n                {...itemProps}\n              />\n              {this._renderAriaDescription(ariaDescription, classNames.screenReaderText)}\n            </a>\n          )}\n        </KeytipData>\n      </div>\n    );\n  }\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._anchor.current ? this._anchor.current : undefined;\n  };\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClick } = this.props;\n    if (onItemClick) {\n      onItemClick(item, ev);\n    }\n  };\n\n  protected _renderAriaDescription = (ariaDescription?: string, className?: string) => {\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan\n    return ariaDescription ? (\n      <span id={this._ariaDescriptionId} className={className}>\n        {ariaDescription}\n      </span>\n    ) : null;\n  };\n}\n","import * as React from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport type {\n  IVerticalDividerProps,\n  IVerticalDividerPropsStyles,\n  IVerticalDividerStyles,\n} from './VerticalDivider.types';\n\nconst getClassNames = classNamesFunction<IVerticalDividerPropsStyles, IVerticalDividerStyles>();\n\nexport const VerticalDividerBase: React.FunctionComponent<IVerticalDividerProps> = React.forwardRef<\n  HTMLDivElement,\n  IVerticalDividerProps\n>((props, ref) => {\n  // eslint-disable-next-line deprecation/deprecation\n  const { styles, theme, getClassNames: deprecatedGetClassNames, className } = props;\n  const classNames = getClassNames(styles, { theme: theme, getClassNames: deprecatedGetClassNames, className });\n  return (\n    <span className={classNames.wrapper} ref={ref}>\n      <span className={classNames.divider} />\n    </span>\n  );\n});\nVerticalDividerBase.displayName = 'VerticalDividerBase';\n","import * as React from 'react';\nimport { getStyles } from './VerticalDivider.styles';\nimport { VerticalDividerBase } from './VerticalDivider.base';\nimport { styled } from '../../Utilities';\nimport type {\n  IVerticalDividerProps,\n  IVerticalDividerStyles,\n  IVerticalDividerPropsStyles,\n} from './VerticalDivider.types';\n\nexport const VerticalDivider: React.FunctionComponent<IVerticalDividerProps> = styled<\n  IVerticalDividerProps,\n  IVerticalDividerPropsStyles,\n  IVerticalDividerStyles\n>(VerticalDividerBase, getStyles, undefined, {\n  scope: 'VerticalDivider',\n});\n","import type { IVerticalDividerPropsStyles, IVerticalDividerStyles } from './VerticalDivider.types';\nimport type { IStyleFunction } from '../../Utilities';\n\nexport const getStyles: IStyleFunction<IVerticalDividerPropsStyles, IVerticalDividerStyles> = (\n  props: IVerticalDividerPropsStyles,\n): IVerticalDividerStyles => {\n  // eslint-disable-next-line deprecation/deprecation\n  const { theme, getClassNames, className } = props;\n\n  if (!theme) {\n    throw new Error('Theme is undefined or null.');\n  }\n\n  if (getClassNames) {\n    const names = getClassNames(theme);\n    return {\n      wrapper: [names.wrapper],\n      divider: [names.divider],\n    };\n  }\n\n  return {\n    wrapper: [\n      {\n        display: 'inline-flex',\n        height: '100%',\n        alignItems: 'center',\n      },\n      className,\n    ],\n    divider: [\n      {\n        width: 1,\n        height: '100%',\n        backgroundColor: theme.palette.neutralTertiaryAlt,\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport {\n  buttonProperties,\n  getNativeProps,\n  KeyCodes,\n  mergeAriaAttributeValues,\n  memoizeFunction,\n  Async,\n  EventGroup,\n  getId,\n} from '../../../Utilities';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport { getSplitButtonVerticalDividerClassNames } from '../ContextualMenu.classNames';\nimport { KeytipData } from '../../../KeytipData';\nimport { isItemDisabled, hasSubmenu, getMenuItemAriaRole } from '../../../utilities/contextualMenu/index';\nimport { VerticalDivider } from '../../../Divider';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport type { IContextualMenuItem } from '../ContextualMenu.types';\nimport type { IMenuItemClassNames } from '../ContextualMenu.classNames';\nimport type { IKeytipProps } from '../../../Keytip';\nimport type { IContextualMenuItemWrapperProps } from './ContextualMenuItemWrapper.types';\n\nexport interface IContextualMenuSplitButtonState {}\n\nconst TouchIdleDelay = 500; /* ms */\n\nexport class ContextualMenuSplitButton extends ContextualMenuItemWrapper {\n  private _splitButton: HTMLDivElement;\n  private _lastTouchTimeoutId: number | undefined;\n  private _processingTouch: boolean;\n  private _ariaDescriptionId: string;\n\n  private _async: Async;\n  private _events: EventGroup;\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  constructor(props: IContextualMenuItemWrapperProps) {\n    super(props);\n\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n  }\n\n  public componentDidMount() {\n    if (this._splitButton && 'onpointerdown' in this._splitButton) {\n      this._events.on(this._splitButton, 'pointerdown', this._onPointerDown, true);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      onItemMouseLeave,\n      expandedMenuItemKey,\n    } = this.props;\n\n    const itemHasSubmenu = hasSubmenu(item);\n\n    let { keytipProps } = item;\n    if (keytipProps) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    // Check for ariaDescription to set the _ariaDescriptionId and render a hidden span with\n    // the description in it to be added to ariaDescribedBy\n    const { ariaDescription } = item;\n    if (ariaDescription) {\n      this._ariaDescriptionId = getId();\n    }\n\n    return (\n      <KeytipData keytipProps={keytipProps} disabled={isItemDisabled(item)}>\n        {(keytipAttributes: any): JSX.Element => (\n          <div\n            data-ktp-target={keytipAttributes['data-ktp-target']}\n            ref={(splitButton: HTMLDivElement) => (this._splitButton = splitButton)}\n            role={getMenuItemAriaRole(item)}\n            aria-label={item.ariaLabel}\n            className={classNames.splitContainer}\n            aria-disabled={isItemDisabled(item)}\n            aria-expanded={itemHasSubmenu ? item.key === expandedMenuItemKey : undefined}\n            aria-haspopup={true}\n            aria-describedby={mergeAriaAttributeValues(\n              item.ariaDescribedBy,\n              ariaDescription ? this._ariaDescriptionId : undefined,\n              keytipAttributes['aria-describedby'],\n            )}\n            aria-checked={item.isChecked || item.checked}\n            aria-posinset={focusableElementIndex + 1}\n            aria-setsize={totalItemCount}\n            onMouseEnter={this._onItemMouseEnterPrimary}\n            onMouseLeave={\n              onItemMouseLeave ? onItemMouseLeave.bind(this, { ...item, subMenuProps: null, items: null }) : undefined\n            }\n            onMouseMove={this._onItemMouseMovePrimary}\n            onKeyDown={this._onItemKeyDown}\n            onClick={this._executeItemClick}\n            onTouchStart={this._onTouchStart}\n            tabIndex={0}\n            data-is-focusable={true}\n            aria-roledescription={item['aria-roledescription']}\n          >\n            {this._renderSplitPrimaryButton(item, classNames, index, hasCheckmarks!, hasIcons!)}\n            {this._renderSplitDivider(item)}\n            {this._renderSplitIconButton(item, classNames, index, keytipAttributes)}\n            {this._renderAriaDescription(ariaDescription, classNames.screenReaderText)}\n          </div>\n        )}\n      </KeytipData>\n    );\n  }\n\n  protected _onItemKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const { item, onItemKeyDown } = this.props;\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      this._executeItemClick(ev);\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (onItemKeyDown) {\n      onItemKeyDown(item, ev);\n    }\n  };\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._splitButton;\n  };\n\n  protected _renderAriaDescription = (ariaDescription?: string, className?: string) => {\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan\n    return ariaDescription ? (\n      <span id={this._ariaDescriptionId} className={className}>\n        {ariaDescription}\n      </span>\n    ) : null;\n  };\n\n  private _renderSplitPrimaryButton(\n    item: IContextualMenuItem,\n    // eslint-disable-next-line deprecation/deprecation\n    classNames: IMenuItemClassNames,\n    index: number,\n    hasCheckmarks: boolean,\n    hasIcons: boolean,\n  ) {\n    const { contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem, onItemClick } = this.props;\n\n    const itemProps: IContextualMenuItem = {\n      key: item.key,\n      disabled: isItemDisabled(item) || item.primaryDisabled,\n      /* eslint-disable deprecation/deprecation */\n      name: item.name,\n      text: item.text || item.name,\n      secondaryText: item.secondaryText,\n      /* eslint-enable deprecation/deprecation */\n      className: classNames.splitPrimary,\n      canCheck: item.canCheck,\n      isChecked: item.isChecked,\n      checked: item.checked,\n      iconProps: item.iconProps,\n      onRenderIcon: item.onRenderIcon,\n      data: item.data,\n      'data-is-focusable': false,\n    };\n\n    const { itemProps: itemComponentProps } = item;\n\n    return (\n      <button {...getNativeProps(itemProps, buttonProperties)}>\n        <ChildrenRenderer\n          data-is-focusable={false}\n          item={itemProps}\n          classNames={classNames}\n          index={index}\n          onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n          hasIcons={hasIcons}\n          {...itemComponentProps}\n        />\n      </button>\n    );\n  }\n\n  private _renderSplitDivider(item: IContextualMenuItem) {\n    const getDividerClassNames =\n      item.getSplitButtonVerticalDividerClassNames || getSplitButtonVerticalDividerClassNames;\n    return <VerticalDivider getClassNames={getDividerClassNames} />;\n  }\n\n  private _renderSplitIconButton(\n    item: IContextualMenuItem,\n    classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n    index: number,\n    keytipAttributes: any,\n  ) {\n    const {\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      onItemMouseLeave,\n      onItemMouseDown,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu,\n    } = this.props;\n\n    const itemProps: IContextualMenuItem = {\n      onClick: this._onIconItemClick,\n      disabled: isItemDisabled(item),\n      className: classNames.splitMenu,\n      subMenuProps: item.subMenuProps,\n      submenuIconProps: item.submenuIconProps,\n      split: true,\n      key: item.key,\n    };\n\n    const buttonProps = {\n      ...getNativeProps<React.ButtonHTMLAttributes<HTMLButtonElement>>(itemProps, buttonProperties),\n      ...{\n        onMouseEnter: this._onItemMouseEnterIcon,\n        onMouseLeave: onItemMouseLeave ? onItemMouseLeave.bind(this, item) : undefined,\n        onMouseDown: (ev: React.MouseEvent<HTMLButtonElement>) =>\n          onItemMouseDown ? onItemMouseDown(item, ev) : undefined,\n        onMouseMove: this._onItemMouseMoveIcon,\n        'data-is-focusable': false,\n        'data-ktp-execute-target': keytipAttributes['data-ktp-execute-target'],\n        'aria-hidden': true,\n      },\n    };\n\n    const { itemProps: itemComponentProps } = item;\n\n    return (\n      <button {...buttonProps}>\n        <ChildrenRenderer\n          componentRef={item.componentRef}\n          item={itemProps}\n          classNames={classNames}\n          index={index}\n          hasIcons={false}\n          openSubMenu={openSubMenu}\n          dismissSubMenu={dismissSubMenu}\n          dismissMenu={dismissMenu}\n          getSubmenuTarget={this._getSubmenuTarget}\n          {...itemComponentProps}\n        />\n      </button>\n    );\n  }\n\n  private _onItemMouseEnterPrimary = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter({ ...item, subMenuProps: undefined, items: undefined }, ev, this._splitButton);\n    }\n  };\n\n  private _onItemMouseEnterIcon = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseEnter } = this.props;\n    if (onItemMouseEnter) {\n      onItemMouseEnter(item, ev, this._splitButton);\n    }\n  };\n\n  private _onItemMouseMovePrimary = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove({ ...item, subMenuProps: undefined, items: undefined }, ev, this._splitButton);\n    }\n  };\n\n  private _onItemMouseMoveIcon = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemMouseMove } = this.props;\n    if (onItemMouseMove) {\n      onItemMouseMove(item, ev, this._splitButton);\n    }\n  };\n\n  private _onIconItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClickBase } = this.props;\n    if (onItemClickBase) {\n      onItemClickBase(item, ev, (this._splitButton ? this._splitButton : ev.currentTarget) as HTMLElement);\n    }\n  };\n\n  private _executeItemClick = (ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    const { item, executeItemClick, onItemClick } = this.props;\n\n    if (item.disabled || item.isDisabled) {\n      return;\n    }\n\n    if (this._processingTouch && onItemClick) {\n      return onItemClick(item, ev);\n    }\n\n    if (executeItemClick) {\n      executeItemClick(item, ev);\n    }\n  };\n\n  private _onTouchStart = (ev: React.TouchEvent<HTMLElement>): void => {\n    if (this._splitButton && !('onpointerdown' in this._splitButton)) {\n      this._handleTouchAndPointerEvent(ev);\n    }\n  };\n\n  private _onPointerDown = (ev: PointerEvent): void => {\n    if (ev.pointerType === 'touch') {\n      this._handleTouchAndPointerEvent(ev);\n      ev.preventDefault();\n      ev.stopImmediatePropagation();\n    }\n  };\n\n  private _handleTouchAndPointerEvent(ev: React.TouchEvent<HTMLElement> | PointerEvent) {\n    const { onTap } = this.props;\n\n    if (onTap) {\n      onTap(ev);\n    }\n    // If we already have an existing timeout from a previous touch/pointer event\n    // cancel that timeout so we can set a new one.\n    if (this._lastTouchTimeoutId) {\n      this._async.clearTimeout(this._lastTouchTimeoutId);\n      this._lastTouchTimeoutId = undefined;\n    }\n    this._processingTouch = true;\n    this._lastTouchTimeoutId = this._async.setTimeout(() => {\n      this._processingTouch = false;\n      this._lastTouchTimeoutId = undefined;\n    }, TouchIdleDelay);\n  }\n}\n","import * as React from 'react';\nimport { buttonProperties, getNativeProps, memoizeFunction, getId, mergeAriaAttributeValues } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { getIsChecked, isItemDisabled, hasSubmenu, getMenuItemAriaRole } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport type { IKeytipDataProps } from '../../../KeytipData';\nimport type { IKeytipProps } from '../../../Keytip';\n\nexport class ContextualMenuButton extends ContextualMenuItemWrapper {\n  private _btn = React.createRef<HTMLButtonElement>();\n  private _ariaDescriptionId: string;\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  public render() {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      expandedMenuItemKey,\n      onItemMouseDown,\n      onItemClick,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu,\n    } = this.props;\n\n    const isChecked: boolean | null | undefined = getIsChecked(item);\n    const canCheck: boolean = isChecked !== null;\n    const defaultRole = getMenuItemAriaRole(item);\n    const itemHasSubmenu = hasSubmenu(item);\n    const { itemProps, ariaLabel, ariaDescription } = item;\n\n    const buttonNativeProperties = getNativeProps<React.ButtonHTMLAttributes<HTMLButtonElement>>(\n      item,\n      buttonProperties,\n    );\n    // Do not add the disabled attribute to the button so that it is focusable\n    delete buttonNativeProperties.disabled;\n\n    const itemRole = item.role || defaultRole;\n\n    // Check for ariaDescription to set the _ariaDescriptionId and render a hidden span with\n    // the description in it to be added to ariaDescribedBy\n    if (ariaDescription) {\n      this._ariaDescriptionId = getId();\n    }\n    const ariaDescribedByIds = mergeAriaAttributeValues(\n      item.ariaDescribedBy,\n      ariaDescription ? this._ariaDescriptionId : undefined,\n      buttonNativeProperties['aria-describedby'],\n    );\n\n    const itemButtonProperties = {\n      className: classNames.root,\n      onClick: this._onItemClick,\n      onKeyDown: itemHasSubmenu ? this._onItemKeyDown : undefined,\n      onMouseEnter: this._onItemMouseEnter,\n      onMouseLeave: this._onItemMouseLeave,\n      onMouseDown: (ev: React.MouseEvent<HTMLButtonElement>) =>\n        onItemMouseDown ? onItemMouseDown(item, ev) : undefined,\n      onMouseMove: this._onItemMouseMove,\n      href: item.href,\n      title: item.title,\n      'aria-label': ariaLabel,\n      'aria-describedby': ariaDescribedByIds,\n      'aria-haspopup': itemHasSubmenu || undefined,\n      'aria-expanded': itemHasSubmenu ? item.key === expandedMenuItemKey : undefined,\n      'aria-posinset': focusableElementIndex + 1,\n      'aria-setsize': totalItemCount,\n      'aria-disabled': isItemDisabled(item),\n      'aria-checked':\n        (itemRole === 'menuitemcheckbox' || itemRole === 'menuitemradio') && canCheck ? !!isChecked : undefined,\n      'aria-selected': itemRole === 'menuitem' && canCheck ? !!isChecked : undefined,\n      role: itemRole,\n      // eslint-disable-next-line deprecation/deprecation\n      style: item.style,\n    };\n\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    return (\n      <KeytipData keytipProps={keytipProps} ariaDescribedBy={ariaDescribedByIds} disabled={isItemDisabled(item)}>\n        {(keytipAttributes: IKeytipDataProps): JSX.Element => (\n          <button ref={this._btn} {...buttonNativeProperties} {...itemButtonProperties} {...keytipAttributes}>\n            <ChildrenRenderer\n              componentRef={item.componentRef}\n              item={item}\n              classNames={classNames}\n              index={index}\n              onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n              hasIcons={hasIcons}\n              openSubMenu={openSubMenu}\n              dismissSubMenu={dismissSubMenu}\n              dismissMenu={dismissMenu}\n              getSubmenuTarget={this._getSubmenuTarget}\n              {...itemProps}\n            />\n            {this._renderAriaDescription(ariaDescription, classNames.screenReaderText)}\n          </button>\n        )}\n      </KeytipData>\n    );\n  }\n\n  protected _renderAriaDescription = (ariaDescription?: string, className?: string) => {\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan\n    return ariaDescription ? (\n      <span id={this._ariaDescriptionId} className={className}>\n        {ariaDescription}\n      </span>\n    ) : null;\n  };\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._btn.current ? this._btn.current : undefined;\n  };\n}\n","import * as React from 'react';\nimport { getId } from '@fluentui/utilities/lib/getId';\n\n/**\n * Hook to generate a unique ID in the global scope (spanning across duplicate copies of the same library).\n *\n * @param prefix - Optional prefix for the ID\n * @param providedId - Optional id provided by a parent component. Defaults to the provided value if present,\n *  without conditioning the hook call\n * @returns The ID\n */\nexport function useId(prefix?: string, providedId?: string): string {\n  // getId should only be called once since it updates the global constant for the next ID value.\n  // (While an extra update isn't likely to cause problems in practice, it's better to avoid it.)\n  const ref = React.useRef<string | undefined>(providedId);\n  if (!ref.current) {\n    ref.current = getId(prefix);\n  }\n  return ref.current;\n}\n","import * as React from 'react';\nimport {\n  warn,\n  warnControlledUsage,\n  warnConditionallyRequiredProps,\n  warnDeprecations,\n  warnMutuallyExclusive,\n} from '@fluentui/utilities/lib/warn';\nimport { usePrevious } from './usePrevious';\nimport { useConst } from './useConst';\nimport type { ISettingsMap, IWarnControlledUsageParams } from '@fluentui/utilities/lib/warn';\n\nexport interface IWarningOptions<P> {\n  /** Name of the component */\n  name: string;\n\n  /** Current component props */\n  props: P;\n\n  /** Generic messages */\n  other?: string[];\n\n  /** Warns when props are required if a condition is met */\n  conditionallyRequired?: {\n    /** Props required when the condition is met */\n    requiredProps: string[];\n    /** Name of the prop that the condition is based on */\n    conditionalPropName: string;\n    /** Whether the condition is met */\n    condition: boolean;\n  }[];\n\n  /**\n   * Warns when deprecated props are being used. Each key is a prop name and each value is\n   * either undefined or a replacement prop name.\n   */\n  deprecations?: ISettingsMap<P>;\n\n  /**\n   * Warns when two props which are mutually exclusive are both being used.\n   * The key is one prop name and the value is the other.\n   */\n  mutuallyExclusive?: ISettingsMap<P>;\n\n  /**\n   * Check for and warn on the following error conditions with a form component:\n   * - A value prop is provided (indicated it's being used as controlled) without a change handler,\n   *    and the component is not read-only\n   * - Both the value and defaultValue props are provided\n   * - The component is attempting to switch between controlled and uncontrolled\n   *\n   * The messages mimic the warnings React gives for these error conditions on input elements.\n   * The warning will only be displayed once per component instance.\n   */\n  controlledUsage?: Pick<\n    IWarnControlledUsageParams<P>,\n    'valueProp' | 'defaultValueProp' | 'onChangeProp' | 'readOnlyProp'\n  >;\n}\n\nlet warningId = 0;\n\n/**\n * Only in development mode, display console warnings when certain conditions are met.\n * Note that all warnings except `controlledUsage` will only be shown on first render\n * (new `controlledUsage` warnings may be shown later due to prop changes).\n */\nexport function useWarnings<P>(options: IWarningOptions<P>) {\n  if (process.env.NODE_ENV !== 'production') {\n    const {\n      name,\n      props,\n      other = [],\n      conditionallyRequired,\n      deprecations,\n      mutuallyExclusive,\n      controlledUsage,\n    } = options;\n\n    /* eslint-disable react-hooks/rules-of-hooks -- build-time conditional */\n    const hasWarnedRef = React.useRef(false);\n    const componentId = useConst(() => `useWarnings_${warningId++}`);\n    const oldProps = usePrevious(props);\n    /* eslint-enable react-hooks/rules-of-hooks */\n\n    // Warn synchronously (not in useEffect) on first render to make debugging easier.\n    if (!hasWarnedRef.current) {\n      hasWarnedRef.current = true;\n\n      for (const warning of other) {\n        warn(warning);\n      }\n\n      if (conditionallyRequired) {\n        for (const req of conditionallyRequired) {\n          warnConditionallyRequiredProps(name, props, req.requiredProps, req.conditionalPropName, req.condition);\n        }\n      }\n\n      deprecations && warnDeprecations(name, props, deprecations);\n\n      mutuallyExclusive && warnMutuallyExclusive(name, props, mutuallyExclusive);\n    }\n\n    // Controlled usage warnings may be displayed on either first or subsequent renders due to\n    // prop changes. Note that it's safe to run this synchronously (not in useEffect) even in\n    // concurrent mode because `warnControlledUsage` internally tracks which warnings have been\n    // displayed for each component instance (so nothing will be displayed twice).\n    controlledUsage && warnControlledUsage({ ...controlledUsage, componentId, props, componentName: name, oldProps });\n  }\n}\n","import * as React from 'react';\nimport { BaseDecorator } from './BaseDecorator';\nimport { getWindow, hoistStatics, EventGroup } from '../../Utilities';\nimport { WindowContext } from '../../WindowProvider';\n\n/**\n * @deprecated Decorator usage is deprecated. Either call `getResponsiveMode` manually, or\n * use the `useResponsiveMode` hook within a function component.\n */\nexport interface IWithResponsiveModeState {\n  responsiveMode?: ResponsiveMode;\n}\n\nexport enum ResponsiveMode {\n  /** Width \\<= 479px */\n  small = 0,\n  /** Width \\> 479px and \\<= 639px */\n  medium = 1,\n  /** Width \\> 639px and \\<= 1023px */\n  large = 2,\n  /** Width \\> 1023px and \\<= 1365px */\n  xLarge = 3,\n  /** Width \\> 1365px and \\<= 1919px */\n  xxLarge = 4,\n  /** Width \\> 1919px */\n  xxxLarge = 5,\n  unknown = 999,\n}\n\nconst RESPONSIVE_MAX_CONSTRAINT = [479, 639, 1023, 1365, 1919, 99999999];\n\n/**\n * User specified mode to default to, useful for server side rendering scenarios.\n */\nlet _defaultMode: ResponsiveMode | undefined;\n\n/**\n * Tracking the last mode we successfully rendered, which allows us to\n * paint initial renders with the correct size.\n */\nlet _lastMode: ResponsiveMode | undefined;\n\n/**\n * Allows a server rendered scenario to provide a **default** responsive mode.\n * This WILL NOT trigger any updates to components that have already consumed the responsive mode!\n */\nexport function setResponsiveMode(responsiveMode: ResponsiveMode | undefined): void {\n  _defaultMode = responsiveMode;\n}\n\n/**\n * Initializes the responsive mode to the current window size. This can be used to avoid\n * a re-render during first component mount since the window would otherwise not be measured\n * until after mounting.\n *\n * This WILL NOT trigger any updates to components that have already consumed the responsive mode!\n */\nexport function initializeResponsiveMode(element?: HTMLElement): void {\n  const currentWindow = getWindow(element);\n\n  if (currentWindow) {\n    getResponsiveMode(currentWindow);\n  }\n}\n\nexport function getInitialResponsiveMode(): ResponsiveMode {\n  return _defaultMode ?? _lastMode ?? ResponsiveMode.large;\n}\n\n/**\n * @deprecated Decorator usage is deprecated. Either call `getResponsiveMode` manually, or\n * use the `useResponsiveMode` hook within a function component.\n */\nexport function withResponsiveMode<TProps extends { responsiveMode?: ResponsiveMode }, TState>(\n  ComposedComponent: new (props: TProps, ...args: any[]) => React.Component<TProps, TState>,\n): any {\n  // eslint-disable-next-line deprecation/deprecation\n  const resultClass = class WithResponsiveMode extends BaseDecorator<TProps, IWithResponsiveModeState> {\n    public static contextType = WindowContext;\n    public context: React.ContextType<typeof WindowContext>;\n\n    private _events: EventGroup;\n\n    constructor(props: TProps) {\n      super(props);\n      this._events = new EventGroup(this);\n      this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\n\n      this.state = {\n        responsiveMode: getInitialResponsiveMode(),\n      };\n    }\n\n    public componentDidMount(): void {\n      this._events.on(this.context.window, 'resize', this._onResize);\n      this._onResize();\n    }\n\n    public componentWillUnmount(): void {\n      this._events.dispose();\n    }\n\n    public render(): JSX.Element | null {\n      const { responsiveMode } = this.state;\n\n      return responsiveMode === ResponsiveMode.unknown ? null : (\n        <ComposedComponent\n          ref={this._updateComposedComponentRef}\n          responsiveMode={responsiveMode}\n          {...(this.props as any)}\n        />\n      );\n    }\n\n    private _onResize = () => {\n      const responsiveMode = getResponsiveMode(this.context.window);\n\n      if (responsiveMode !== this.state.responsiveMode) {\n        this.setState({\n          responsiveMode,\n        });\n      }\n    };\n  };\n  return hoistStatics(ComposedComponent, resultClass);\n}\n\n/**\n * Hook to get the current responsive mode (window size category).\n * @param currentWindow - Use this window when determining the responsive mode.\n */\nexport function getResponsiveMode(currentWindow: Window | undefined): ResponsiveMode {\n  let responsiveMode = ResponsiveMode.small;\n\n  if (currentWindow) {\n    try {\n      while (currentWindow.innerWidth > RESPONSIVE_MAX_CONSTRAINT[responsiveMode]) {\n        responsiveMode++;\n      }\n    } catch (e) {\n      // Return a best effort result in cases where we're in the browser but it throws on getting innerWidth.\n      responsiveMode = getInitialResponsiveMode();\n    }\n\n    // Tracking last mode just gives us a better default in future renders,\n    // which avoids starting with the wrong value if we've measured once.\n    _lastMode = responsiveMode;\n  } else {\n    if (_defaultMode !== undefined) {\n      responsiveMode = _defaultMode;\n    } else {\n      throw new Error(\n        'Content was rendered in a server environment without providing a default responsive mode. ' +\n          'Call setResponsiveMode to define what the responsive mode is.',\n      );\n    }\n  }\n\n  return responsiveMode;\n}\n","import * as React from 'react';\nimport { getWindow } from '@fluentui/utilities';\nimport { useOnEvent } from '@fluentui/react-hooks';\nimport { ResponsiveMode, getResponsiveMode, getInitialResponsiveMode } from '../decorators/withResponsiveMode';\nimport { useWindow } from '../../WindowProvider';\n\n/**\n * Hook to get the current responsive mode (window size category).\n * @param elementRef - Use this element's parent window when determining the responsive mode.\n * @param overrideResponsiveMode - Override the responsive mode. If this param is present, it's always returned.\n */\nexport const useResponsiveMode = (\n  elementRef: React.RefObject<HTMLElement | null>,\n  overrideResponsiveMode?: ResponsiveMode,\n) => {\n  const [lastResponsiveMode, setLastResponsiveMode] = React.useState<ResponsiveMode>(getInitialResponsiveMode());\n\n  const onResize = React.useCallback(() => {\n    const newResponsiveMode = getResponsiveMode(getWindow(elementRef.current));\n\n    // Setting the same value should not cause a re-render.\n    if (lastResponsiveMode !== newResponsiveMode) {\n      setLastResponsiveMode(newResponsiveMode);\n    }\n  }, [elementRef, lastResponsiveMode]);\n\n  const win = useWindow();\n  useOnEvent(win, 'resize', onResize);\n\n  // Call resize function initially on mount, or if the override changes from defined to undefined\n  // (the effect will run on all override changes, but onResize will only be called if it changed to undefined)\n  React.useEffect(() => {\n    if (overrideResponsiveMode === undefined) {\n      onResize();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- only meant to run on mount or when override changes\n  }, [overrideResponsiveMode]);\n\n  return overrideResponsiveMode ?? lastResponsiveMode;\n};\n","import * as React from 'react';\nimport type { MinimalMenuProps } from './types';\n\nexport const MenuContext = React.createContext<MinimalMenuProps>({});\n\nexport const useMenuContext = () => {\n  return React.useContext(MenuContext);\n};\n","import * as React from 'react';\nimport { ContextualMenuItemType } from './ContextualMenu.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { FocusZone, FocusZoneDirection, FocusZoneTabbableElements } from '../../FocusZone';\nimport {\n  divProperties,\n  getNativeProps,\n  shallowCompare,\n  Async,\n  assign,\n  classNamesFunction,\n  css,\n  getFirstFocusable,\n  getLastFocusable,\n  getRTL,\n  KeyCodes,\n  shouldWrapFocus,\n  isIOS,\n  isMac,\n  memoizeFunction,\n  getPropsWithDefaults,\n  getDocument,\n} from '../../Utilities';\nimport { hasSubmenu, getIsChecked, isItemDisabled } from '../../utilities/contextualMenu/index';\nimport { Callout } from '../../Callout';\nimport { ContextualMenuItem } from './ContextualMenuItem';\nimport {\n  ContextualMenuSplitButton,\n  ContextualMenuButton,\n  ContextualMenuAnchor,\n} from './ContextualMenuItemWrapper/index';\nimport { concatStyleSetsWithProps } from '../../Styling';\nimport { getItemStyles } from './ContextualMenu.classNames';\nimport { useTarget, usePrevious, useAsync, useWarnings, useId, Target } from '@fluentui/react-hooks';\nimport { useResponsiveMode, ResponsiveMode } from '../../ResponsiveMode';\nimport { MenuContext } from '../../utilities/MenuContext/index';\nimport type {\n  IContextualMenuProps,\n  IContextualMenuItem,\n  IContextualMenuListProps,\n  IContextualMenuStyleProps,\n  IContextualMenuStyles,\n  IContextualMenuItemRenderProps,\n} from './ContextualMenu.types';\nimport type { IFocusZoneProps } from '../../FocusZone';\nimport type { IMenuItemClassNames, IContextualMenuClassNames } from './ContextualMenu.classNames';\nimport type { IRenderFunction, IStyleFunctionOrObject } from '../../Utilities';\nimport type { ICalloutContentStyleProps, ICalloutContentStyles } from '../../Callout';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IContextualMenuItemStyleProps, IContextualMenuItemStyles } from './ContextualMenuItem.types';\nimport type { IPopupRestoreFocusParams } from '../../Popup';\n\nconst getClassNames = classNamesFunction<IContextualMenuStyleProps, IContextualMenuStyles>();\nconst getContextualMenuItemClassNames = classNamesFunction<IContextualMenuItemStyleProps, IContextualMenuItemStyles>();\n\n// The default ContextualMenu properties have no items and beak, the default submenu direction is right and top.\nconst DEFAULT_PROPS: Partial<IContextualMenuProps> = {\n  items: [],\n  shouldFocusOnMount: true,\n  gapSpace: 0,\n  directionalHint: DirectionalHint.bottomAutoEdge,\n  beakWidth: 16,\n};\n\nexport function getSubmenuItems(\n  item: IContextualMenuItem,\n  options?: {\n    target?: Target;\n  },\n): IContextualMenuItem[] | undefined {\n  const target = options?.target;\n\n  // eslint-disable-next-line deprecation/deprecation\n  const items = item.subMenuProps ? item.subMenuProps.items : item.items;\n\n  if (items) {\n    const overrideItems: typeof items = [];\n\n    for (const subItem of items) {\n      if (subItem.preferMenuTargetAsEventTarget) {\n        // For sub-items which need an overridden target, intercept `onClick`\n        const { onClick, ...contextItem } = subItem;\n\n        overrideItems.push({\n          ...contextItem,\n          onClick: getOnClickWithOverrideTarget(onClick, target),\n        });\n      } else {\n        overrideItems.push(subItem);\n      }\n    }\n\n    return overrideItems;\n  }\n}\n\n/**\n * Returns true if a list of menu items can contain a checkbox\n */\nexport function canAnyMenuItemsCheck(items: IContextualMenuItem[]): boolean {\n  return items.some(item => {\n    if (item.canCheck) {\n      return true;\n    }\n\n    // If the item is a section, check if any of the items in the section can check.\n    if (item.sectionProps && item.sectionProps.items.some(submenuItem => submenuItem.canCheck === true)) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst NavigationIdleDelay = 250; /* ms */\n\nconst COMPONENT_NAME = 'ContextualMenu';\n\nconst _getMenuItemStylesFunction = memoizeFunction(\n  (\n    ...styles: (IStyleFunctionOrObject<IContextualMenuItemStyleProps, IContextualMenuItemStyles> | undefined)[]\n  ): IStyleFunctionOrObject<IContextualMenuItemStyleProps, IContextualMenuItemStyles> => {\n    return (styleProps: IContextualMenuItemStyleProps) =>\n      concatStyleSetsWithProps(styleProps, getItemStyles, ...styles);\n  },\n);\n\n//#region Custom hooks\nfunction useVisibility(props: IContextualMenuProps, targetWindow: Window | undefined) {\n  const { hidden = false, onMenuDismissed, onMenuOpened } = props;\n  const previousHidden = usePrevious(hidden);\n\n  const onMenuOpenedRef = React.useRef(onMenuOpened);\n  const onMenuClosedRef = React.useRef(onMenuDismissed);\n  const propsRef = React.useRef(props);\n\n  onMenuOpenedRef.current = onMenuOpened;\n  onMenuClosedRef.current = onMenuDismissed;\n  propsRef.current = props;\n\n  React.useEffect(() => {\n    // Don't issue dismissed callbacks on initial mount\n    if (hidden && previousHidden === false) {\n      onMenuClosedRef.current?.(propsRef.current);\n    } else if (!hidden && previousHidden !== false) {\n      onMenuOpenedRef.current?.(propsRef.current);\n    }\n  }, [hidden, previousHidden]);\n\n  // Issue onDismissedCallback on unmount\n  React.useEffect(() => () => onMenuClosedRef.current?.(propsRef.current), []);\n}\n\nfunction useSubMenuState(\n  { hidden, items, theme, className, id, target: menuTarget }: IContextualMenuProps,\n  dismiss: () => void,\n) {\n  const [expandedMenuItemKey, setExpandedMenuItemKey] = React.useState<string>();\n  const [submenuTarget, setSubmenuTarget] = React.useState<HTMLElement>();\n  const subMenuId = useId(COMPONENT_NAME, id);\n\n  const closeSubMenu = React.useCallback(() => {\n    setExpandedMenuItemKey(undefined);\n    setSubmenuTarget(undefined);\n  }, []);\n\n  const openSubMenu = React.useCallback(\n    ({ key: submenuItemKey }: IContextualMenuItem, target: HTMLElement) => {\n      if (expandedMenuItemKey === submenuItemKey) {\n        return;\n      }\n\n      target.focus();\n\n      setExpandedMenuItemKey(submenuItemKey);\n      setSubmenuTarget(target);\n    },\n    [expandedMenuItemKey],\n  );\n\n  React.useEffect(() => {\n    if (hidden) {\n      closeSubMenu();\n    }\n  }, [hidden, closeSubMenu]);\n\n  const onSubMenuDismiss = useOnSubmenuDismiss(dismiss, closeSubMenu);\n\n  const getSubmenuProps = (): IContextualMenuProps | null => {\n    const item = findItemByKeyFromItems(expandedMenuItemKey!, items);\n    let submenuProps: IContextualMenuProps | null = null;\n\n    if (item) {\n      submenuProps = {\n        items: getSubmenuItems(item, { target: menuTarget })!,\n        target: submenuTarget,\n        onDismiss: onSubMenuDismiss,\n        isSubMenu: true,\n        id: subMenuId,\n        shouldFocusOnMount: true,\n        directionalHint: getRTL(theme) ? DirectionalHint.leftTopEdge : DirectionalHint.rightTopEdge,\n        className,\n        gapSpace: 0,\n        isBeakVisible: false,\n      };\n\n      if (item.subMenuProps) {\n        assign(submenuProps, item.subMenuProps);\n      }\n\n      if (item.preferMenuTargetAsEventTarget) {\n        const { onItemClick } = item;\n\n        submenuProps.onItemClick = getOnClickWithOverrideTarget(onItemClick, menuTarget);\n      }\n    }\n    return submenuProps;\n  };\n\n  return [expandedMenuItemKey, openSubMenu, getSubmenuProps, onSubMenuDismiss] as const;\n}\n\nfunction useShouldUpdateFocusOnMouseMove({ delayUpdateFocusOnHover, hidden }: IContextualMenuProps) {\n  const shouldUpdateFocusOnMouseEvent = React.useRef<boolean>(!delayUpdateFocusOnHover);\n  const gotMouseMove = React.useRef<boolean>(false);\n\n  React.useEffect(() => {\n    shouldUpdateFocusOnMouseEvent.current = !delayUpdateFocusOnHover;\n    gotMouseMove.current = hidden ? false : !delayUpdateFocusOnHover && gotMouseMove.current;\n  }, [delayUpdateFocusOnHover, hidden]);\n\n  const onMenuFocusCapture = React.useCallback(() => {\n    if (delayUpdateFocusOnHover) {\n      shouldUpdateFocusOnMouseEvent.current = true;\n    }\n  }, [delayUpdateFocusOnHover]);\n\n  return [shouldUpdateFocusOnMouseEvent, gotMouseMove, onMenuFocusCapture] as const;\n}\n\nfunction usePreviousActiveElement({ hidden, onRestoreFocus }: IContextualMenuProps, targetWindow: Window | undefined) {\n  const previousActiveElement = React.useRef<undefined | HTMLElement>();\n\n  const tryFocusPreviousActiveElement = React.useCallback(\n    (options: IPopupRestoreFocusParams) => {\n      if (onRestoreFocus) {\n        onRestoreFocus(options);\n      } else if (options?.documentContainsFocus) {\n        // Make sure that the focus method actually exists\n        // In some cases the object might exist but not be a real element.\n        // This is primarily for IE 11 and should be removed once IE 11 is no longer in use.\n        previousActiveElement.current?.focus?.();\n      }\n    },\n    [onRestoreFocus],\n  );\n\n  // eslint-disable-next-line no-restricted-properties\n  React.useLayoutEffect(() => {\n    if (!hidden) {\n      previousActiveElement.current = targetWindow?.document.activeElement as HTMLElement;\n    } else if (previousActiveElement.current) {\n      tryFocusPreviousActiveElement({\n        originalElement: previousActiveElement.current,\n        containsFocus: true,\n        documentContainsFocus: getDocument()?.hasFocus() || false,\n      });\n\n      previousActiveElement.current = undefined;\n    }\n  }, [hidden, targetWindow?.document.activeElement, tryFocusPreviousActiveElement]);\n\n  return [tryFocusPreviousActiveElement] as const;\n}\n\nfunction useKeyHandlers(\n  {\n    theme,\n    isSubMenu,\n    focusZoneProps: { checkForNoWrap, direction: focusZoneDirection = FocusZoneDirection.vertical } = {},\n  }: IContextualMenuProps,\n  dismiss: (ev?: any, dismissAll?: boolean | undefined) => void | undefined,\n  hostElement: React.RefObject<HTMLDivElement>,\n  openSubMenu: (submenuItemKey: IContextualMenuItem, target: HTMLElement, openedByMouseClick?: boolean) => void,\n) {\n  /** True if the most recent keydown event was for alt (option) or meta (command). */\n  const lastKeyDownWasAltOrMeta = React.useRef<boolean | undefined>();\n\n  /**\n   * Calls `shouldHandleKey` to determine whether the keyboard event should be handled;\n   * if so, stops event propagation and dismisses menu(s).\n   * @param ev - The keyboard event.\n   * @param shouldHandleKey - Returns whether we should handle this keyboard event.\n   * @param dismissAllMenus - If true, dismiss all menus. Otherwise, dismiss only the current menu.\n   * Only does anything if `shouldHandleKey` returns true.\n   * @returns Whether the event was handled.\n   */\n  const keyHandler = (\n    ev: React.KeyboardEvent<HTMLElement>,\n    shouldHandleKey: (ev: React.KeyboardEvent<HTMLElement>) => boolean,\n    dismissAllMenus?: boolean,\n  ): boolean => {\n    let handled = false;\n\n    if (shouldHandleKey(ev)) {\n      dismiss(ev, dismissAllMenus);\n      ev.preventDefault();\n      ev.stopPropagation();\n      handled = true;\n    }\n\n    return handled;\n  };\n\n  /**\n   * Checks if the submenu should be closed\n   */\n  const shouldCloseSubMenu = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    const submenuCloseKey = getRTL(theme) ? KeyCodes.right : KeyCodes.left;\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which !== submenuCloseKey || !isSubMenu) {\n      return false;\n    }\n\n    return !!(\n      focusZoneDirection === FocusZoneDirection.vertical ||\n      (checkForNoWrap && !shouldWrapFocus(ev.target as HTMLElement, 'data-no-horizontal-wrap'))\n    );\n  };\n\n  const shouldHandleKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    return (\n      // eslint-disable-next-line deprecation/deprecation\n      ev.which === KeyCodes.escape ||\n      shouldCloseSubMenu(ev) ||\n      // eslint-disable-next-line deprecation/deprecation\n      (ev.which === KeyCodes.up && (ev.altKey || ev.metaKey))\n    );\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in shouldHandleKeyUp for reasoning.\n    lastKeyDownWasAltOrMeta.current = isAltOrMeta(ev);\n\n    // On Mac, pressing escape dismisses all levels of native context menus\n    // eslint-disable-next-line deprecation/deprecation\n    const dismissAllMenus = ev.which === KeyCodes.escape && (isMac() || isIOS());\n\n    return keyHandler(ev, shouldHandleKeyDown, dismissAllMenus);\n  };\n\n  /**\n   * We close the menu on key up only if ALL of the following are true:\n   * - Most recent key down was alt or meta (command)\n   * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\n   *   expand/collapse the menu)\n   * - We're not on a Mac (or iOS)\n   *\n   * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\n   * closing any open context menus. There is not a similar behavior on Macs.\n   */\n  const shouldHandleKeyUp = (ev: React.KeyboardEvent<HTMLElement>) => {\n    const keyPressIsAltOrMetaAlone = lastKeyDownWasAltOrMeta.current && isAltOrMeta(ev);\n    lastKeyDownWasAltOrMeta.current = false;\n    return !!keyPressIsAltOrMetaAlone && !(isIOS() || isMac());\n  };\n\n  const onKeyUp = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    return keyHandler(ev, shouldHandleKeyUp, true /* dismissAllMenus */);\n  };\n\n  const onMenuKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // Mark as handled if onKeyDown returns true (for handling collapse cases)\n    // or if we are attempting to expand a submenu\n    const handled = onKeyDown(ev);\n\n    if (handled || !hostElement.current) {\n      return;\n    }\n\n    // If we have a modifier key being pressed, we do not want to move focus.\n    // Otherwise, handle up and down keys.\n    const hasModifier = !!(ev.altKey || ev.metaKey);\n    // eslint-disable-next-line deprecation/deprecation\n    const isUp = ev.which === KeyCodes.up;\n    // eslint-disable-next-line deprecation/deprecation\n    const isDown = ev.which === KeyCodes.down;\n    if (!hasModifier && (isUp || isDown)) {\n      const elementToFocus = isUp\n        ? getLastFocusable(hostElement.current, hostElement.current.lastChild as HTMLElement, true)\n        : getFirstFocusable(hostElement.current, hostElement.current.firstChild as HTMLElement, true);\n\n      if (elementToFocus) {\n        elementToFocus.focus();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  const onItemKeyDown = (item: any, ev: React.KeyboardEvent<HTMLElement>): void => {\n    const openKey = getRTL(theme) ? KeyCodes.left : KeyCodes.right;\n\n    if (\n      !item.disabled &&\n      // eslint-disable-next-line deprecation/deprecation\n      (ev.which === openKey || ev.which === KeyCodes.enter || (ev.which === KeyCodes.down && (ev.altKey || ev.metaKey)))\n    ) {\n      openSubMenu(item, ev.currentTarget as HTMLElement, false);\n      ev.preventDefault();\n    }\n  };\n\n  return [onKeyDown, onKeyUp, onMenuKeyDown, onItemKeyDown] as const;\n}\n\nfunction useScrollHandler(asyncTracker: Async) {\n  const isScrollIdle = React.useRef<boolean>(true);\n  const scrollIdleTimeoutId = React.useRef<number | undefined>();\n\n  /**\n   * Scroll handler for the callout to make sure the mouse events\n   * for updating focus are not interacting during scroll\n   */\n  const onScroll = (): void => {\n    if (!isScrollIdle.current && scrollIdleTimeoutId.current !== undefined) {\n      asyncTracker.clearTimeout(scrollIdleTimeoutId.current);\n      scrollIdleTimeoutId.current = undefined;\n    } else {\n      isScrollIdle.current = false;\n    }\n\n    scrollIdleTimeoutId.current = asyncTracker.setTimeout(() => {\n      isScrollIdle.current = true;\n    }, NavigationIdleDelay);\n  };\n\n  return [onScroll, isScrollIdle] as const;\n}\n\nfunction useOnSubmenuDismiss(dismiss: (ev?: any, dismissAll?: boolean) => void, closeSubMenu: () => void) {\n  const isMountedRef = React.useRef(false);\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  /**\n   * This function is called ASYNCHRONOUSLY, and so there is a chance it is called\n   * after the component is unmounted. The isMountedRef is added to prevent\n   * from calling setState() after unmount. Do NOT copy this pattern in synchronous\n   * code.\n   */\n  const onSubMenuDismiss = (ev?: any, dismissAll?: boolean): void => {\n    if (dismissAll) {\n      dismiss(ev, dismissAll);\n    } else if (isMountedRef.current) {\n      closeSubMenu();\n    }\n  };\n\n  return onSubMenuDismiss;\n}\n\nfunction useSubmenuEnterTimer({ subMenuHoverDelay = NavigationIdleDelay }: IContextualMenuProps, asyncTracker: Async) {\n  const enterTimerRef = React.useRef<number | undefined>(undefined);\n\n  const cancelSubMenuTimer = () => {\n    if (enterTimerRef.current !== undefined) {\n      asyncTracker.clearTimeout(enterTimerRef.current);\n      enterTimerRef.current = undefined;\n    }\n  };\n\n  const startSubmenuTimer = (onTimerExpired: () => void) => {\n    enterTimerRef.current = asyncTracker.setTimeout(() => {\n      onTimerExpired();\n      cancelSubMenuTimer();\n    }, subMenuHoverDelay);\n  };\n\n  return [cancelSubMenuTimer, startSubmenuTimer, enterTimerRef as React.RefObject<number | undefined>] as const;\n}\n\nfunction useMouseHandlers(\n  props: IContextualMenuProps,\n  isScrollIdle: React.MutableRefObject<boolean>,\n  subMenuEntryTimer: React.RefObject<number | undefined>,\n  targetWindow: Window | undefined,\n  shouldUpdateFocusOnMouseEvent: React.MutableRefObject<boolean>,\n  gotMouseMove: React.MutableRefObject<boolean>,\n  expandedMenuItemKey: string | undefined,\n  hostElement: React.RefObject<HTMLDivElement>,\n  startSubmenuTimer: (onTimerExpired: () => void) => void,\n  cancelSubMenuTimer: () => void,\n  openSubMenu: (submenuItemKey: IContextualMenuItem, target: HTMLElement, openedByMouseClick?: boolean) => void,\n  onSubMenuDismiss: (ev?: any, dismissAll?: boolean) => void,\n  dismiss: (ev?: any, dismissAll?: boolean) => void,\n) {\n  const { target: menuTarget } = props;\n\n  const onItemMouseEnterBase = (item: any, ev: React.MouseEvent<HTMLElement>, target?: HTMLElement): void => {\n    if (shouldUpdateFocusOnMouseEvent.current) {\n      gotMouseMove.current = true;\n    }\n\n    if (shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  const onItemMouseMoveBase = (item: any, ev: React.MouseEvent<HTMLElement>, target: HTMLElement): void => {\n    const targetElement = ev.currentTarget as HTMLElement;\n\n    // Always do this check to make sure we record a mouseMove if needed (even if we are timed out)\n    if (shouldUpdateFocusOnMouseEvent.current) {\n      gotMouseMove.current = true;\n    } else {\n      return;\n    }\n\n    if (\n      !isScrollIdle.current ||\n      subMenuEntryTimer.current !== undefined ||\n      targetElement === (targetWindow?.document.activeElement as HTMLElement)\n    ) {\n      return;\n    }\n\n    updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  const shouldIgnoreMouseEvent = (): boolean => {\n    return !isScrollIdle.current || !gotMouseMove.current;\n  };\n\n  const onMouseItemLeave = (item: any, ev: React.MouseEvent<HTMLElement>): void => {\n    if (shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    cancelSubMenuTimer();\n\n    if (expandedMenuItemKey !== undefined) {\n      return;\n    }\n\n    /**\n     * IE11 focus() method forces parents to scroll to top of element.\n     * Edge and IE expose a setActive() function for focusable divs that\n     * sets the page focus but does not scroll the parent element.\n     */\n    if ((hostElement.current as any).setActive) {\n      try {\n        (hostElement.current as any).setActive();\n      } catch (e) {\n        /* no-op */\n      }\n    } else {\n      hostElement.current?.focus();\n    }\n  };\n\n  /**\n   * Handles updating focus when mouseEnter or mouseMove fire.\n   * As part of updating focus, This function will also update\n   * the expand/collapse state accordingly.\n   */\n  const updateFocusOnMouseEvent = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement>,\n    target?: HTMLElement,\n  ) => {\n    const targetElement = target ? target : (ev.currentTarget as HTMLElement);\n\n    if (item.key === expandedMenuItemKey) {\n      return;\n    }\n\n    cancelSubMenuTimer();\n\n    // If the menu is not expanded we can update focus without any delay\n    if (expandedMenuItemKey === undefined) {\n      targetElement.focus();\n    }\n\n    // Delay updating expanding/dismissing the submenu\n    // and only set focus if we have not already done so\n    if (hasSubmenu(item)) {\n      ev.stopPropagation();\n      startSubmenuTimer(() => {\n        targetElement.focus();\n        openSubMenu(item, targetElement, true);\n      });\n    } else {\n      startSubmenuTimer(() => {\n        onSubMenuDismiss(ev);\n        targetElement.focus();\n      });\n    }\n  };\n\n  const onItemClick = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n  ): void => {\n    onItemClickBase(item, ev, ev.currentTarget as HTMLElement);\n  };\n\n  const onItemClickBase = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    target: HTMLElement,\n  ): void => {\n    const items = getSubmenuItems(item, { target: menuTarget });\n\n    // Cancel an async menu item hover timeout action from being taken and instead\n    // just trigger the click event instead.\n    cancelSubMenuTimer();\n\n    if (!hasSubmenu(item) && (!items || !items.length)) {\n      // This is an item without a menu. Click it.\n      executeItemClick(item, ev);\n    } else {\n      if (item.key !== expandedMenuItemKey) {\n        // This has a collapsed sub menu. Expand it.\n        openSubMenu(\n          item,\n          target,\n          // When Edge + Narrator are used together (regardless of if the button is in a form or not), pressing\n          // \"Enter\" fires this method and not _onMenuKeyDown. Checking ev.nativeEvent.detail differentiates\n          // between a real click event and a keypress event (detail should be the number of mouse clicks).\n          // ...Plot twist! For a real click event in IE 11, detail is always 0 (Edge sets it properly to 1).\n          // So we also check the pointerType property, which both Edge and IE set to \"mouse\" for real clicks\n          // and \"\" for pressing \"Enter\" with Narrator on.\n          ev.nativeEvent.detail !== 0 || (ev.nativeEvent as PointerEvent).pointerType === 'mouse',\n        );\n      }\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  const onAnchorClick = (item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>) => {\n    executeItemClick(item, ev);\n    ev.stopPropagation();\n  };\n\n  const executeItemClick = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n  ): void => {\n    if (item.disabled || item.isDisabled) {\n      return;\n    }\n\n    if (item.preferMenuTargetAsEventTarget) {\n      overrideTarget(ev, menuTarget);\n    }\n\n    let shouldDismiss = false;\n    if (item.onClick) {\n      shouldDismiss = !!item.onClick(ev, item);\n    } else if (props.onItemClick) {\n      shouldDismiss = !!props.onItemClick(ev, item);\n    }\n\n    if (shouldDismiss || !ev.defaultPrevented) {\n      dismiss(ev, true);\n    }\n  };\n\n  return [\n    onItemMouseEnterBase,\n    onItemMouseMoveBase,\n    onMouseItemLeave,\n    onItemClick,\n    onAnchorClick,\n    executeItemClick,\n    onItemClickBase,\n  ] as const;\n}\n//#endregion\n\nexport const ContextualMenuBase: React.FunctionComponent<IContextualMenuProps> = React.memo(\n  React.forwardRef<HTMLDivElement, IContextualMenuProps>((propsWithoutDefaults, forwardedRef) => {\n    const { ref, ...props } = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n    const hostElement = React.useRef<HTMLDivElement>(null);\n    const asyncTracker = useAsync();\n    const menuId = useId(COMPONENT_NAME, props.id);\n\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      deprecations: {\n        getMenuClassNames: 'styles',\n      },\n    });\n\n    const dismiss = (ev?: any, dismissAll?: boolean) => props.onDismiss?.(ev, dismissAll);\n    const [targetRef, targetWindow] = useTarget(props.target, hostElement);\n    const [tryFocusPreviousActiveElement] = usePreviousActiveElement(props, targetWindow);\n    const [expandedMenuItemKey, openSubMenu, getSubmenuProps, onSubMenuDismiss] = useSubMenuState(props, dismiss);\n    const [shouldUpdateFocusOnMouseEvent, gotMouseMove, onMenuFocusCapture] = useShouldUpdateFocusOnMouseMove(props);\n    const [onScroll, isScrollIdle] = useScrollHandler(asyncTracker);\n    const [cancelSubMenuTimer, startSubmenuTimer, subMenuEntryTimer] = useSubmenuEnterTimer(props, asyncTracker);\n\n    const responsiveMode = useResponsiveMode(hostElement, props.responsiveMode);\n\n    useVisibility(props, targetWindow);\n\n    const [onKeyDown, onKeyUp, onMenuKeyDown, onItemKeyDown] = useKeyHandlers(props, dismiss, hostElement, openSubMenu);\n    const [\n      onItemMouseEnterBase,\n      onItemMouseMoveBase,\n      onMouseItemLeave,\n      onItemClick,\n      onAnchorClick,\n      executeItemClick,\n      onItemClickBase,\n    ] = useMouseHandlers(\n      props,\n      isScrollIdle,\n      subMenuEntryTimer,\n      targetWindow,\n      shouldUpdateFocusOnMouseEvent,\n      gotMouseMove,\n      expandedMenuItemKey,\n      hostElement,\n      startSubmenuTimer,\n      cancelSubMenuTimer,\n      openSubMenu,\n      onSubMenuDismiss,\n      dismiss,\n    );\n\n    //#region Render helpers\n\n    const onDefaultRenderMenuList = (\n      menuListProps: IContextualMenuListProps,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n      defaultRender?: IRenderFunction<IContextualMenuListProps>,\n    ): JSX.Element => {\n      let indexCorrection = 0;\n      const { items, totalItemCount, hasCheckmarks, hasIcons } = menuListProps;\n\n      return (\n        <ul className={menuClassNames.list} onKeyDown={onKeyDown} onKeyUp={onKeyUp} role={'presentation'}>\n          {items.map((item, index) => {\n            const menuItem = renderMenuItem(\n              item,\n              index,\n              indexCorrection,\n              totalItemCount,\n              hasCheckmarks,\n              hasIcons,\n              menuClassNames,\n            );\n            if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n              const indexIncrease = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n              indexCorrection += indexIncrease;\n            }\n            return menuItem;\n          })}\n        </ul>\n      );\n    };\n\n    const renderFocusZone = (children: JSX.Element | null, adjustedFocusZoneProps: IFocusZoneProps): JSX.Element => {\n      const { focusZoneAs: ChildrenRenderer = FocusZone } = props;\n      return <ChildrenRenderer {...adjustedFocusZoneProps}>{children}</ChildrenRenderer>;\n    };\n\n    /**\n     * !!!IMPORTANT!!! Avoid mutating `item: IContextualMenuItem` argument. It will\n     * cause the menu items to always re-render because the component update is based on shallow comparison.\n     */\n    const renderMenuItem = (\n      item: IContextualMenuItem,\n      index: number,\n      focusableElementIndex: number,\n      totalItemCount: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n    ): JSX.Element => {\n      const renderedItems: React.ReactNode[] = [];\n      const iconProps = item.iconProps || { iconName: 'None' };\n      const {\n        getItemClassNames, // eslint-disable-line deprecation/deprecation\n        itemProps,\n      } = item;\n      const styles = itemProps ? itemProps.styles : undefined;\n\n      // We only send a dividerClassName when the item to be rendered is a divider.\n      // For all other cases, the default divider style is used.\n      const dividerClassName = item.itemType === ContextualMenuItemType.Divider ? item.className : undefined;\n      const subMenuIconClassName = item.submenuIconProps ? item.submenuIconProps.className : '';\n\n      // eslint-disable-next-line deprecation/deprecation\n      let itemClassNames: IMenuItemClassNames;\n\n      // IContextualMenuItem#getItemClassNames for backwards compatibility\n      // otherwise uses mergeStyles for class names.\n      if (getItemClassNames) {\n        itemClassNames = getItemClassNames(\n          props.theme!,\n          isItemDisabled(item),\n          expandedMenuItemKey === item.key,\n          !!getIsChecked(item),\n          !!item.href,\n          iconProps.iconName !== 'None',\n          item.className,\n          dividerClassName,\n          iconProps.className,\n          subMenuIconClassName,\n          item.primaryDisabled,\n        );\n      } else {\n        const itemStyleProps: IContextualMenuItemStyleProps = {\n          theme: props.theme!,\n          disabled: isItemDisabled(item),\n          expanded: expandedMenuItemKey === item.key,\n          checked: !!getIsChecked(item),\n          isAnchorLink: !!item.href,\n          knownIcon: iconProps.iconName !== 'None',\n          itemClassName: item.className,\n          dividerClassName,\n          iconClassName: iconProps.className,\n          subMenuClassName: subMenuIconClassName,\n          primaryDisabled: item.primaryDisabled,\n        };\n\n        // We need to generate default styles then override if styles are provided\n        // since the ContextualMenu currently handles item classNames.\n        itemClassNames = getContextualMenuItemClassNames(\n          _getMenuItemStylesFunction(menuClassNames.subComponentStyles?.menuItem, styles),\n          itemStyleProps,\n        );\n      }\n\n      // eslint-disable-next-line deprecation/deprecation\n      if (item.text === '-' || item.name === '-') {\n        item.itemType = ContextualMenuItemType.Divider;\n      }\n      switch (item.itemType) {\n        case ContextualMenuItemType.Divider:\n          renderedItems.push(renderSeparator(index, itemClassNames));\n          break;\n        case ContextualMenuItemType.Header:\n          renderedItems.push(renderSeparator(index, itemClassNames));\n          const headerItem = renderHeaderMenuItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons);\n          renderedItems.push(renderListItem(headerItem, item.key || index, itemClassNames, item.title));\n          break;\n        case ContextualMenuItemType.Section:\n          renderedItems.push(renderSectionItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons));\n          break;\n        default:\n          const menuItem = renderNormalItem(\n            item,\n            itemClassNames,\n            index,\n            focusableElementIndex,\n            totalItemCount,\n            hasCheckmarks,\n            hasIcons,\n          );\n          renderedItems.push(renderListItem(menuItem, item.key || index, itemClassNames, item.title));\n          break;\n      }\n\n      // Since multiple nodes *could* be rendered, wrap them all in a fragment with this item's key.\n      // This ensures the reconciler handles multi-item output per-node correctly and does not re-mount content.\n      return <React.Fragment key={item.key}>{renderedItems}</React.Fragment>;\n    };\n\n    const defaultMenuItemRenderer = (\n      item: IContextualMenuItemRenderProps,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n    ): React.ReactNode => {\n      const { index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons } = item;\n      return renderMenuItem(\n        item,\n        index,\n        focusableElementIndex,\n        totalItemCount,\n        hasCheckmarks,\n        hasIcons,\n        menuClassNames,\n      );\n    };\n\n    const renderSectionItem = (\n      sectionItem: IContextualMenuItem,\n      // eslint-disable-next-line deprecation/deprecation\n      itemClassNames: IMenuItemClassNames,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n      index: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n    ) => {\n      const sectionProps = sectionItem.sectionProps;\n      if (!sectionProps) {\n        return;\n      }\n\n      let headerItem;\n      let groupProps;\n      if (sectionProps.title) {\n        let headerContextualMenuItem: IContextualMenuItem | undefined = undefined;\n        let ariaLabelledby = '';\n        if (typeof sectionProps.title === 'string') {\n          // Since title is a user-facing string, it needs to be stripped\n          // of whitespace in order to build a valid element ID\n          const id = menuId + sectionProps.title.replace(/\\s/g, '');\n          headerContextualMenuItem = {\n            key: `section-${sectionProps.title}-title`,\n            itemType: ContextualMenuItemType.Header,\n            text: sectionProps.title,\n            id: id,\n          };\n          ariaLabelledby = id;\n        } else {\n          const id = sectionProps.title.id || menuId + sectionProps.title.key.replace(/\\s/g, '');\n          headerContextualMenuItem = { ...sectionProps.title, id };\n          ariaLabelledby = id;\n        }\n\n        if (headerContextualMenuItem) {\n          groupProps = {\n            role: 'group',\n            'aria-labelledby': ariaLabelledby,\n          };\n          headerItem = renderHeaderMenuItem(\n            headerContextualMenuItem,\n            itemClassNames,\n            menuClassNames,\n            index,\n            hasCheckmarks,\n            hasIcons,\n          );\n        }\n      }\n\n      if (sectionProps.items && sectionProps.items.length > 0) {\n        return (\n          <li role=\"presentation\" key={sectionProps.key || sectionItem.key || `section-${index}`}>\n            <div {...groupProps}>\n              <ul className={menuClassNames.list} role=\"presentation\">\n                {sectionProps.topDivider && renderSeparator(index, itemClassNames, true, true)}\n                {headerItem && renderListItem(headerItem, sectionItem.key || index, itemClassNames, sectionItem.title)}\n                {sectionProps.items.map((contextualMenuItem, itemsIndex) =>\n                  renderMenuItem(\n                    contextualMenuItem,\n                    itemsIndex,\n                    itemsIndex,\n                    sectionProps.items.length,\n                    hasCheckmarks,\n                    hasIcons,\n                    menuClassNames,\n                  ),\n                )}\n                {sectionProps.bottomDivider && renderSeparator(index, itemClassNames, false, true)}\n              </ul>\n            </div>\n          </li>\n        );\n      }\n    };\n\n    const renderListItem = (\n      content: React.ReactNode,\n      key: string | number,\n      classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n      title?: string,\n    ) => {\n      return (\n        <li role=\"presentation\" title={title} key={key} className={classNames.item}>\n          {content}\n        </li>\n      );\n    };\n\n    const renderSeparator = (\n      index: number,\n      classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n      top?: boolean,\n      fromSection?: boolean,\n    ): React.ReactNode => {\n      if (fromSection || index > 0) {\n        return (\n          <li\n            role=\"separator\"\n            key={'separator-' + index + (top === undefined ? '' : top ? '-top' : '-bottom')}\n            className={classNames.divider}\n            aria-hidden=\"true\"\n          />\n        );\n      }\n      return null;\n    };\n\n    const renderNormalItem = (\n      item: IContextualMenuItem,\n      classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n      index: number,\n      focusableElementIndex: number,\n      totalItemCount: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n    ): React.ReactNode => {\n      if (item.onRender) {\n        return item.onRender(\n          { 'aria-posinset': focusableElementIndex + 1, 'aria-setsize': totalItemCount, ...item },\n          dismiss,\n        );\n      }\n\n      const { contextualMenuItemAs } = props;\n\n      const commonProps = {\n        item,\n        classNames,\n        index,\n        focusableElementIndex,\n        totalItemCount,\n        hasCheckmarks,\n        hasIcons,\n        contextualMenuItemAs,\n        onItemMouseEnter: onItemMouseEnterBase,\n        onItemMouseLeave: onMouseItemLeave,\n        onItemMouseMove: onItemMouseMoveBase,\n        onItemMouseDown: onItemMouseDown,\n        executeItemClick: executeItemClick,\n        onItemKeyDown: onItemKeyDown,\n        expandedMenuItemKey,\n        openSubMenu,\n        dismissSubMenu: onSubMenuDismiss,\n        dismissMenu: dismiss,\n      } as const;\n\n      if (item.href) {\n        return <ContextualMenuAnchor {...commonProps} onItemClick={onAnchorClick} />;\n      }\n\n      if (item.split && hasSubmenu(item)) {\n        return (\n          <ContextualMenuSplitButton\n            {...commonProps}\n            onItemClick={onItemClick}\n            onItemClickBase={onItemClickBase}\n            onTap={cancelSubMenuTimer}\n          />\n        );\n      }\n\n      return <ContextualMenuButton {...commonProps} onItemClick={onItemClick} onItemClickBase={onItemClickBase} />;\n    };\n\n    const renderHeaderMenuItem = (\n      item: IContextualMenuItem,\n      // eslint-disable-next-line deprecation/deprecation\n      itemClassNames: IMenuItemClassNames,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n      index: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n    ): React.ReactNode => {\n      const { contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem } = props;\n      const { itemProps, id } = item;\n      const divHtmlProperties =\n        itemProps && getNativeProps<React.HTMLAttributes<HTMLDivElement>>(itemProps, divProperties);\n      return (\n        // eslint-disable-next-line deprecation/deprecation\n        <div id={id} className={menuClassNames.header} {...divHtmlProperties} style={item.style}>\n          <ChildrenRenderer\n            item={item}\n            classNames={itemClassNames}\n            index={index}\n            onCheckmarkClick={hasCheckmarks ? onItemClick : undefined}\n            hasIcons={hasIcons}\n            {...itemProps}\n          />\n        </div>\n      );\n    };\n    //#endregion\n\n    //#region Main render\n    let { isBeakVisible } = props;\n\n    const {\n      items,\n      labelElementId,\n      id,\n      className,\n      beakWidth,\n      directionalHint,\n      directionalHintForRTL,\n      alignTargetEdge,\n      gapSpace,\n      coverTarget,\n      ariaLabel,\n      doNotLayer,\n      target,\n      bounds,\n      useTargetWidth,\n      useTargetAsMinWidth,\n      directionalHintFixed,\n      shouldFocusOnMount,\n      shouldFocusOnContainer,\n      title,\n      styles,\n      theme,\n      calloutProps,\n      onRenderSubMenu = onDefaultRenderSubMenu,\n      onRenderMenuList = (\n        menuListProps: IContextualMenuListProps,\n        defaultRender?: IRenderFunction<IContextualMenuListProps>,\n      ) => onDefaultRenderMenuList(menuListProps, classNames, defaultRender),\n      focusZoneProps,\n      // eslint-disable-next-line deprecation/deprecation\n      getMenuClassNames,\n    } = props;\n\n    const classNames = getMenuClassNames\n      ? getMenuClassNames(theme!, className)\n      : getClassNames(styles, {\n          theme: theme!,\n          className: className,\n        });\n\n    const hasIcons = itemsHaveIcons(items);\n\n    function itemsHaveIcons(contextualMenuItems: IContextualMenuItem[]): boolean {\n      for (const item of contextualMenuItems) {\n        if (item.iconProps) {\n          return true;\n        }\n\n        if (\n          item.itemType === ContextualMenuItemType.Section &&\n          item.sectionProps &&\n          itemsHaveIcons(item.sectionProps.items)\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    const adjustedFocusZoneProps = {\n      direction: FocusZoneDirection.vertical,\n      handleTabKey: FocusZoneTabbableElements.all,\n      isCircularNavigation: true,\n      ...focusZoneProps,\n      className: css(classNames.root, props.focusZoneProps?.className),\n    };\n\n    const hasCheckmarks = canAnyMenuItemsCheck(items);\n    const submenuProps = expandedMenuItemKey && props.hidden !== true ? getSubmenuProps() : null;\n\n    isBeakVisible = isBeakVisible === undefined ? responsiveMode! <= ResponsiveMode.medium : isBeakVisible;\n    /**\n     * When useTargetWidth is true, get the width of the target element and apply it for the context menu container\n     */\n    let contextMenuStyle: React.CSSProperties;\n    const targetAsHtmlElement = targetRef.current as HTMLElement;\n    if ((useTargetWidth || useTargetAsMinWidth) && targetAsHtmlElement && targetAsHtmlElement.offsetWidth) {\n      const targetBoundingRect = targetAsHtmlElement.getBoundingClientRect();\n      const targetWidth = targetBoundingRect.width - 2; /* Accounts for 1px border */\n\n      if (useTargetWidth) {\n        contextMenuStyle = {\n          width: targetWidth,\n        };\n      } else if (useTargetAsMinWidth) {\n        contextMenuStyle = {\n          minWidth: targetWidth,\n        };\n      }\n    }\n\n    // The menu should only return if items were provided, if no items were provided then it should not appear.\n    if (items && items.length > 0) {\n      let totalItemCount = 0;\n      for (const item of items) {\n        if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n          const itemCount = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n          totalItemCount += itemCount;\n        }\n      }\n\n      const calloutStyles = classNames.subComponentStyles\n        ? (classNames.subComponentStyles.callout as IStyleFunctionOrObject<\n            ICalloutContentStyleProps,\n            ICalloutContentStyles\n          >)\n        : undefined;\n\n      return (\n        <MenuContext.Consumer>\n          {menuContext => (\n            <Callout\n              styles={calloutStyles}\n              onRestoreFocus={tryFocusPreviousActiveElement}\n              {...calloutProps}\n              target={target || (menuContext.target as IContextualMenuProps['target'])}\n              isBeakVisible={isBeakVisible}\n              beakWidth={beakWidth}\n              directionalHint={directionalHint}\n              directionalHintForRTL={directionalHintForRTL}\n              gapSpace={gapSpace}\n              coverTarget={coverTarget}\n              doNotLayer={doNotLayer}\n              className={css('ms-ContextualMenu-Callout', calloutProps && calloutProps.className)}\n              setInitialFocus={shouldFocusOnMount}\n              onDismiss={props.onDismiss || menuContext.onDismiss}\n              onScroll={onScroll}\n              bounds={bounds}\n              directionalHintFixed={directionalHintFixed}\n              alignTargetEdge={alignTargetEdge}\n              hidden={props.hidden || menuContext.hidden}\n              ref={forwardedRef}\n            >\n              <div\n                style={contextMenuStyle}\n                ref={hostElement}\n                id={id}\n                className={classNames.container}\n                tabIndex={shouldFocusOnContainer ? 0 : -1}\n                onKeyDown={onMenuKeyDown}\n                onKeyUp={onKeyUp}\n                onFocusCapture={onMenuFocusCapture}\n                aria-label={ariaLabel}\n                aria-labelledby={labelElementId}\n                role={'menu'}\n              >\n                {title && <div className={classNames.title}> {title} </div>}\n                {items && items.length\n                  ? renderFocusZone(\n                      onRenderMenuList(\n                        {\n                          ariaLabel,\n                          items,\n                          totalItemCount,\n                          hasCheckmarks,\n                          hasIcons,\n                          defaultMenuItemRenderer: (item: IContextualMenuItemRenderProps) =>\n                            defaultMenuItemRenderer(item, classNames),\n                          labelElementId,\n                        },\n                        (\n                          menuListProps: IContextualMenuListProps,\n                          defaultRender?: IRenderFunction<IContextualMenuListProps>,\n                        ) => onDefaultRenderMenuList(menuListProps, classNames, defaultRender),\n                      ),\n                      adjustedFocusZoneProps,\n                    )\n                  : null}\n                {submenuProps && onRenderSubMenu(submenuProps, onDefaultRenderSubMenu)}\n              </div>\n            </Callout>\n          )}\n        </MenuContext.Consumer>\n      );\n    } else {\n      return null;\n    }\n    //#endregion\n  }),\n  (prevProps, newProps) => {\n    if (!newProps.shouldUpdateWhenHidden && prevProps.hidden && newProps.hidden) {\n      // Do not update when hidden.\n      return true;\n    }\n\n    return shallowCompare(prevProps, newProps);\n  },\n);\nContextualMenuBase.displayName = 'ContextualMenuBase';\n\n/**\n * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\n */\nfunction isAltOrMeta(ev: React.KeyboardEvent<HTMLElement>): boolean {\n  // eslint-disable-next-line deprecation/deprecation\n  return ev.which === KeyCodes.alt || ev.key === 'Meta';\n}\n\nfunction onItemMouseDown(item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>): void {\n  item.onMouseDown?.(item, ev);\n}\n\nfunction onDefaultRenderSubMenu(\n  subMenuProps: IContextualMenuProps,\n  defaultRender?: IRenderFunction<IContextualMenuProps>,\n): JSX.Element {\n  throw Error(\n    'ContextualMenuBase: onRenderSubMenu callback is null or undefined. ' +\n      'Please ensure to set `onRenderSubMenu` property either manually or with `styled` helper.',\n  );\n}\n\n/**\n * Returns the item that matches a given key if any.\n * @param key - The key of the item to match\n * @param items - The items to look for the key\n */\nfunction findItemByKeyFromItems(key: string, items: IContextualMenuItem[]): IContextualMenuItem | undefined {\n  for (const item of items) {\n    if (item.itemType === ContextualMenuItemType.Section && item.sectionProps) {\n      const match = findItemByKeyFromItems(key, item.sectionProps.items);\n      if (match) {\n        return match;\n      }\n    } else if (item.key && item.key === key) {\n      return item;\n    }\n  }\n}\n\nfunction getOnClickWithOverrideTarget(\n  onClick:\n    | ((\n        ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined,\n        item?: IContextualMenuItem | undefined,\n      ) => boolean | void)\n    | undefined,\n  target: Target | undefined,\n) {\n  return onClick\n    ? (\n        ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined,\n        item?: IContextualMenuItem | undefined,\n      ) => {\n        overrideTarget(ev, target);\n\n        return onClick(ev, item);\n      }\n    : onClick;\n}\n\nfunction overrideTarget(\n  ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined,\n  target?: Target,\n): void {\n  if (ev && target) {\n    ev.persist();\n\n    if (target instanceof Event) {\n      ev.target = target.target as HTMLElement;\n    } else if (target instanceof Element) {\n      ev.target = target;\n    }\n  }\n}\n","import { getGlobalClassNames, FontWeights } from '../../Styling';\nimport { CONTEXTUAL_MENU_ITEM_HEIGHT } from './ContextualMenu.cnstyles';\nimport type { IContextualMenuStyleProps, IContextualMenuStyles } from './ContextualMenu.types';\n\nconst GlobalClassNames = {\n  root: 'ms-ContextualMenu',\n  container: 'ms-ContextualMenu-container',\n  list: 'ms-ContextualMenu-list',\n  header: 'ms-ContextualMenu-header',\n  title: 'ms-ContextualMenu-title',\n  isopen: 'is-open',\n};\n\nexport const getStyles = (props: IContextualMenuStyleProps): IContextualMenuStyles => {\n  const { className, theme } = props;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const { fonts, semanticColors, effects } = theme;\n\n  return {\n    root: [\n      theme.fonts.medium,\n      classNames.root,\n      classNames.isopen,\n      {\n        backgroundColor: semanticColors.menuBackground,\n        minWidth: '180px',\n      },\n      className,\n    ],\n    container: [\n      classNames.container,\n      {\n        selectors: {\n          ':focus': { outline: 0 },\n        },\n      },\n    ],\n    list: [\n      classNames.list,\n      classNames.isopen,\n      {\n        listStyleType: 'none',\n        margin: '0',\n        padding: '0',\n      },\n    ],\n    header: [\n      classNames.header,\n      fonts.small,\n      {\n        fontWeight: FontWeights.semibold,\n        color: semanticColors.menuHeader,\n        background: 'none',\n        backgroundColor: 'transparent',\n        border: 'none',\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        cursor: 'default',\n        padding: '0px 6px',\n        userSelect: 'none',\n        textAlign: 'left',\n      },\n    ],\n    title: [\n      classNames.title,\n      {\n        fontSize: fonts.mediumPlus.fontSize,\n        paddingRight: '14px',\n        paddingLeft: '14px',\n        paddingBottom: '5px',\n        paddingTop: '5px',\n        backgroundColor: semanticColors.menuItemBackgroundPressed,\n      },\n    ],\n    subComponentStyles: {\n      callout: {\n        root: {\n          boxShadow: effects.elevation8,\n        },\n      },\n      menuItem: {},\n    },\n  };\n};\n","import * as React from 'react';\nimport { styled, composeRenderFunction } from '../../Utilities';\nimport { ContextualMenuBase } from './ContextualMenu.base';\nimport { getStyles } from './ContextualMenu.styles';\nimport type { IContextualMenuProps, IContextualMenuStyleProps, IContextualMenuStyles } from './ContextualMenu.types';\n\nfunction onRenderSubMenu(subMenuProps: IContextualMenuProps) {\n  return <LocalContextualMenu {...subMenuProps} />;\n}\n\n// This is to prevent cyclic import with ContextualMenu.base.tsx.\nconst LocalContextualMenu: React.FunctionComponent<IContextualMenuProps> = styled<\n  IContextualMenuProps,\n  IContextualMenuStyleProps,\n  IContextualMenuStyles\n>(\n  ContextualMenuBase,\n  getStyles,\n  (props: IContextualMenuProps) => ({\n    onRenderSubMenu: props.onRenderSubMenu\n      ? composeRenderFunction(props.onRenderSubMenu, onRenderSubMenu)\n      : onRenderSubMenu,\n  }),\n  { scope: 'ContextualMenu' },\n);\n\n/**\n * ContextualMenu description\n */\nexport const ContextualMenu: React.FunctionComponent<IContextualMenuProps> = LocalContextualMenu;\nContextualMenu.displayName = 'ContextualMenu';\n","import { memoizeFunction } from '../../Utilities';\nimport { getGlobalClassNames, mergeStyleSets } from '../../Styling';\nimport type { ITheme } from '../../Styling';\nimport type { IButtonStyles } from './Button.types';\n\nexport interface IButtonClassNames {\n  root?: string;\n  flexContainer?: string;\n  textContainer?: string;\n  icon?: string;\n  label?: string;\n  menuIcon?: string;\n  description?: string;\n  screenReaderText?: string;\n}\n\nexport const ButtonGlobalClassNames = {\n  msButton: 'ms-Button',\n  msButtonHasMenu: 'ms-Button--hasMenu',\n  msButtonIcon: 'ms-Button-icon',\n  msButtonMenuIcon: 'ms-Button-menuIcon',\n  msButtonLabel: 'ms-Button-label',\n  msButtonDescription: 'ms-Button-description',\n  msButtonScreenReaderText: 'ms-Button-screenReaderText',\n  msButtonFlexContainer: 'ms-Button-flexContainer',\n  msButtonTextContainer: 'ms-Button-textContainer',\n};\n\nexport const getBaseButtonClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    styles: IButtonStyles,\n    className: string,\n    variantClassName: string,\n    iconClassName: string | undefined,\n    menuIconClassName: string | undefined,\n    disabled: boolean,\n    hasMenu: boolean,\n    checked: boolean,\n    expanded: boolean,\n    isSplit: boolean | undefined,\n  ): IButtonClassNames => {\n    const classNames = getGlobalClassNames(ButtonGlobalClassNames, theme || {});\n\n    const isExpanded = expanded && !isSplit;\n    return mergeStyleSets({\n      root: [\n        classNames.msButton,\n        styles.root,\n        variantClassName,\n        checked && ['is-checked', styles.rootChecked],\n        isExpanded && [\n          'is-expanded',\n          styles.rootExpanded,\n          {\n            selectors: {\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconExpandedHovered,\n              // menuIcon falls back to rootExpandedHovered to support original behavior\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconExpandedHovered || styles.rootExpandedHovered,\n              ':hover': styles.rootExpandedHovered,\n            },\n          },\n        ],\n        hasMenu && [ButtonGlobalClassNames.msButtonHasMenu, styles.rootHasMenu],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.rootHovered,\n              [`:hover .${classNames.msButtonLabel}`]: styles.labelHovered,\n              [`:hover .${classNames.msButtonIcon}`]: styles.iconHovered,\n              [`:hover .${classNames.msButtonDescription}`]: styles.descriptionHovered,\n              [`:hover .${classNames.msButtonMenuIcon}`]: styles.menuIconHovered,\n              ':focus': styles.rootFocused,\n              ':active': styles.rootPressed,\n              [`:active .${classNames.msButtonIcon}`]: styles.iconPressed,\n              [`:active .${classNames.msButtonDescription}`]: styles.descriptionPressed,\n              [`:active .${classNames.msButtonMenuIcon}`]: styles.menuIconPressed,\n            },\n          },\n        disabled && checked && [styles.rootCheckedDisabled],\n        !disabled &&\n          checked && {\n            selectors: {\n              ':hover': styles.rootCheckedHovered,\n              ':active': styles.rootCheckedPressed,\n            },\n          },\n        className,\n      ],\n      flexContainer: [classNames.msButtonFlexContainer, styles.flexContainer],\n      textContainer: [classNames.msButtonTextContainer, styles.textContainer],\n      icon: [\n        classNames.msButtonIcon,\n        iconClassName,\n        styles.icon,\n        isExpanded && styles.iconExpanded,\n        checked && styles.iconChecked,\n        disabled && styles.iconDisabled,\n      ],\n      label: [classNames.msButtonLabel, styles.label, checked && styles.labelChecked, disabled && styles.labelDisabled],\n      menuIcon: [\n        classNames.msButtonMenuIcon,\n        menuIconClassName,\n        styles.menuIcon,\n        checked && styles.menuIconChecked,\n        disabled && !isSplit && styles.menuIconDisabled,\n        !disabled &&\n          !isExpanded &&\n          !checked && {\n            selectors: {\n              ':hover': styles.menuIconHovered,\n              ':active': styles.menuIconPressed,\n            },\n          },\n        isExpanded && ['is-expanded', styles.menuIconExpanded],\n      ],\n      description: [\n        classNames.msButtonDescription,\n        styles.description,\n        checked && styles.descriptionChecked,\n        disabled && styles.descriptionDisabled,\n      ],\n      screenReaderText: [classNames.msButtonScreenReaderText, styles.screenReaderText],\n    });\n  },\n);\n","import { memoizeFunction } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport type { IButtonStyles } from '../Button.types';\n\nexport interface ISplitButtonClassNames {\n  root?: string;\n  icon?: string;\n  splitButtonContainer?: string;\n  flexContainer?: string;\n  divider?: string;\n}\n\nexport const getSplitButtonClassNames = memoizeFunction(\n  (\n    styles: IButtonStyles,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    primaryDisabled?: boolean,\n  ): ISplitButtonClassNames => {\n    return {\n      root: mergeStyles(\n        styles.splitButtonMenuButton,\n        expanded && [styles.splitButtonMenuButtonExpanded],\n        disabled && [styles.splitButtonMenuButtonDisabled],\n        checked && !disabled && [styles.splitButtonMenuButtonChecked],\n        primaryDisabled &&\n          !disabled && [\n            {\n              selectors: {\n                ':focus': styles.splitButtonMenuFocused,\n              },\n            },\n          ],\n      ),\n\n      splitButtonContainer: mergeStyles(\n        styles.splitButtonContainer,\n        !disabled &&\n          checked && [\n            styles.splitButtonContainerChecked,\n            {\n              selectors: {\n                ':hover': styles.splitButtonContainerCheckedHovered,\n              },\n            },\n          ],\n        !disabled &&\n          !checked && [\n            {\n              selectors: {\n                ':hover': styles.splitButtonContainerHovered,\n                ':focus': styles.splitButtonContainerFocused,\n              },\n            },\n          ],\n        disabled && styles.splitButtonContainerDisabled,\n      ),\n\n      icon: mergeStyles(\n        styles.splitButtonMenuIcon,\n        disabled && styles.splitButtonMenuIconDisabled,\n        !disabled && primaryDisabled && styles.splitButtonMenuIcon,\n      ),\n\n      flexContainer: mergeStyles(styles.splitButtonFlexContainer),\n\n      divider: mergeStyles(\n        styles.splitButtonDivider,\n        (primaryDisabled || disabled) && styles.splitButtonDividerDisabled,\n      ),\n    };\n  },\n);\n","import * as React from 'react';\nimport { createMemoizer } from '../memoize';\nimport type { IComponentAs, IComponentAsProps } from '../IComponentAs';\n\ninterface IComposeComponentAs {\n  <TProps>(outer: IComponentAs<TProps>): (inner: IComponentAs<TProps>) => IComponentAs<TProps>;\n}\n\nfunction createComposedComponent<TProps>(\n  outer: IComponentAs<TProps>,\n): (inner: IComponentAs<TProps>) => IComponentAs<TProps> {\n  const Outer = outer;\n\n  const outerMemoizer = createMemoizer((inner: IComponentAs<TProps>) => {\n    if (outer === inner) {\n      throw new Error('Attempted to compose a component with itself.');\n    }\n\n    const Inner = inner;\n\n    const innerMemoizer = createMemoizer((defaultRender: IComponentAs<TProps>) => {\n      const InnerWithDefaultRender: React.ComponentType<IComponentAsProps<TProps>> = (\n        innerProps: IComponentAsProps<TProps>,\n      ): JSX.Element => {\n        return <Inner {...innerProps} defaultRender={defaultRender} />;\n      };\n\n      return InnerWithDefaultRender;\n    });\n\n    const OuterWithDefaultRender: React.ComponentType<IComponentAsProps<TProps>> = (\n      outerProps: IComponentAsProps<TProps>,\n    ): JSX.Element => {\n      const { defaultRender } = outerProps;\n\n      return <Outer {...outerProps} defaultRender={defaultRender ? innerMemoizer(defaultRender) : Inner} />;\n    };\n\n    return OuterWithDefaultRender;\n  });\n\n  return outerMemoizer;\n}\n\nconst componentAsMemoizer = createMemoizer<IComposeComponentAs>(createComposedComponent);\n\n/**\n * Composes two components which conform to the `IComponentAs` specification; that is, two\n * components which accept a `defaultRender` prop, which is a 'default' implementation of\n * a component which accepts the same overall props.\n *\n * @public\n */\nexport function composeComponentAs<TProps>(\n  outer: IComponentAs<TProps>,\n  inner: IComponentAs<TProps>,\n): IComponentAs<TProps> {\n  return componentAsMemoizer(outer)(inner);\n}\n","import * as React from 'react';\nimport {\n  anchorProperties,\n  assign,\n  buttonProperties,\n  createMergedRef,\n  css,\n  getId,\n  getNativeProps,\n  initializeComponentRef,\n  memoizeFunction,\n  mergeAriaAttributeValues,\n  nullRender,\n  portalContainsElement,\n  setFocusVisibility,\n  warnConditionallyRequiredProps,\n  warnDeprecations,\n  Async,\n  EventGroup,\n  FocusRects,\n  KeyCodes,\n} from '../../Utilities';\nimport { Icon, FontIcon, ImageIcon } from '../../Icon';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { ContextualMenu } from '../../ContextualMenu';\nimport { getBaseButtonClassNames } from './BaseButton.classNames';\nimport { getSplitButtonClassNames as getBaseSplitButtonClassNames } from './SplitButton/SplitButton.classNames';\nimport { KeytipData } from '../../KeytipData';\nimport type { IRenderFunction } from '../../Utilities';\nimport type { IContextualMenuProps } from '../../ContextualMenu';\nimport type { IButtonProps, IButton } from './Button.types';\nimport type { IButtonClassNames } from './BaseButton.classNames';\nimport type { ISplitButtonClassNames } from './SplitButton/SplitButton.classNames';\nimport type { IKeytipProps } from '../../Keytip';\nimport { composeComponentAs } from '../../Utilities';\n\n/**\n * {@docCategory Button}\n */\nexport interface IBaseButtonProps extends IButtonProps {\n  baseClassName?: string;\n  variantClassName?: string;\n}\n\n/**\n * {@docCategory Button}\n */\nexport interface IBaseButtonState {\n  menuHidden: boolean;\n}\n\nconst TouchIdleDelay = 500; /* ms */\nconst COMPONENT_NAME = 'BaseButton';\n\n/**\n * {@docCategory Button}\n */\nexport class BaseButton extends React.Component<IBaseButtonProps, IBaseButtonState> implements IButton {\n  private get _isSplitButton(): boolean {\n    return !!this.props.menuProps && !!this.props.onClick && this.props.split === true;\n  }\n\n  public static defaultProps: Partial<IBaseButtonProps> = {\n    baseClassName: 'ms-Button',\n    styles: {},\n    split: false,\n  };\n\n  private _async: Async;\n  private _events: EventGroup;\n  private _buttonElement = React.createRef<HTMLElement>();\n  private _splitButtonContainer = React.createRef<HTMLDivElement>();\n  private _mergedRef = createMergedRef<HTMLElement>();\n  private _labelId: string;\n  private _descriptionId: string;\n  private _ariaDescriptionId: string;\n  private _classNames: IButtonClassNames;\n  private _processingTouch: boolean;\n  private _lastTouchTimeoutId: number | undefined;\n  private _renderedVisibleMenu: boolean = false;\n\n  // These fields will be used to set corresponding props on the menu.\n  private _menuShouldFocusOnContainer: boolean | undefined;\n  private _menuShouldFocusOnMount: boolean | undefined;\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  constructor(props: IBaseButtonProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n\n    warnConditionallyRequiredProps(COMPONENT_NAME, props, ['menuProps', 'onClick'], 'split', this.props.split!);\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      rootProps: undefined,\n      description: 'secondaryText',\n      toggled: 'checked',\n    });\n    this._labelId = getId();\n    this._descriptionId = getId();\n    this._ariaDescriptionId = getId();\n\n    this.state = {\n      menuHidden: true,\n    };\n  }\n\n  public render(): JSX.Element {\n    const {\n      ariaDescription,\n      ariaLabel,\n      ariaHidden,\n      className,\n      disabled,\n      allowDisabledFocus,\n      primaryDisabled,\n      // eslint-disable-next-line deprecation/deprecation\n      secondaryText = this.props.description,\n      href,\n      iconProps,\n      menuIconProps,\n      styles,\n      checked,\n      variantClassName,\n      theme,\n      toggle,\n      getClassNames,\n      role,\n    } = this.props;\n\n    const { menuHidden } = this.state;\n\n    // Button is disabled if the whole button (in case of splitButton is disabled) or if the primary action is disabled\n    const isPrimaryButtonDisabled = disabled || primaryDisabled;\n\n    this._classNames = getClassNames\n      ? getClassNames(\n          theme!,\n          className!,\n          variantClassName!,\n          iconProps && iconProps.className,\n          menuIconProps && menuIconProps.className,\n          isPrimaryButtonDisabled!,\n          checked!,\n          !menuHidden,\n          !!this.props.menuProps,\n          this.props.split,\n          !!allowDisabledFocus,\n        )\n      : getBaseButtonClassNames(\n          theme!,\n          styles!,\n          className!,\n          variantClassName!,\n          iconProps && iconProps.className,\n          menuIconProps && menuIconProps.className,\n          isPrimaryButtonDisabled!,\n          !!this.props.menuProps,\n          checked!,\n          !menuHidden,\n          this.props.split,\n        );\n\n    const { _ariaDescriptionId, _labelId, _descriptionId } = this;\n    // Anchor tag cannot be disabled hence in disabled state rendering\n    // anchor button as normal button\n    const renderAsAnchor: boolean = !isPrimaryButtonDisabled && !!href;\n    const tag = renderAsAnchor ? 'a' : 'button';\n\n    const nativeProps = getNativeProps(\n      // eslint-disable-next-line deprecation/deprecation\n      assign(renderAsAnchor ? {} : { type: 'button' }, this.props.rootProps, this.props),\n      renderAsAnchor ? anchorProperties : buttonProperties,\n      [\n        'disabled', // let disabled buttons be focused and styled as disabled.\n      ],\n    );\n\n    // Check for ariaLabel passed in via Button props, and fall back to aria-label passed in via native props\n    const resolvedAriaLabel = ariaLabel || (nativeProps as any)['aria-label'];\n\n    // Check for ariaDescription, secondaryText or aria-describedby in the native props to determine source of\n    // aria-describedby. Otherwise default to undefined so property does not appear in output.\n    let ariaDescribedBy = undefined;\n    if (ariaDescription) {\n      ariaDescribedBy = _ariaDescriptionId;\n    } else if (secondaryText && this.props.onRenderDescription !== nullRender) {\n      // for buttons like CompoundButton with a valid onRenderDescription, we need to set an ariaDescribedBy\n      // for buttons that do not render anything (via nullRender), we should not set an ariaDescribedBy\n      ariaDescribedBy = _descriptionId;\n    } else if ((nativeProps as any)['aria-describedby']) {\n      ariaDescribedBy = (nativeProps as any)['aria-describedby'];\n    }\n\n    // If an explicit aria-labelledby is given, use that and we're done.\n    // If any kind of description is given (which will end up as an aria-describedby attribute)\n    // and no ariaLabel is specified, set the labelledby element.\n    // Otherwise, the button is labeled implicitly by the descendent text on the button (if it exists).\n    let ariaLabelledBy = undefined;\n    if ((nativeProps as any)['aria-labelledby']) {\n      ariaLabelledBy = (nativeProps as any)['aria-labelledby'];\n    } else if (ariaDescribedBy && !resolvedAriaLabel) {\n      ariaLabelledBy = this._hasText() ? _labelId : undefined;\n    }\n\n    const dataIsFocusable =\n      (this.props as any)['data-is-focusable'] === false || (disabled && !allowDisabledFocus) || this._isSplitButton\n        ? false\n        : true;\n\n    const isCheckboxTypeRole = role === 'menuitemcheckbox' || role === 'checkbox';\n    // if isCheckboxTypeRole, always return a checked value.\n    // Otherwise only return checked value if toggle is set to true.\n    // This is because role=\"checkbox\" always needs to have an aria-checked value\n    // but our checked prop only sets aria-pressed if we mark the button as a toggle=\"true\"\n    const checkedOrPressedValue = isCheckboxTypeRole ? !!checked : toggle === true ? !!checked : undefined;\n\n    const buttonProps = assign(nativeProps, {\n      className: this._classNames.root,\n      // eslint-disable-next-line deprecation/deprecation\n      ref: this._mergedRef(this.props.elementRef, this._buttonElement),\n      disabled: isPrimaryButtonDisabled && !allowDisabledFocus,\n      onKeyDown: this._onKeyDown,\n      onKeyPress: this._onKeyPress,\n      onKeyUp: this._onKeyUp,\n      onMouseDown: this._onMouseDown,\n      onMouseUp: this._onMouseUp,\n      onClick: this._onClick,\n      'aria-label': resolvedAriaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedBy,\n      'aria-disabled': isPrimaryButtonDisabled,\n      'data-is-focusable': dataIsFocusable,\n      // aria-pressed attribute should only be present for toggle buttons\n      // aria-checked attribute should only be present for toggle buttons with checkbox type role\n      [isCheckboxTypeRole ? 'aria-checked' : 'aria-pressed']: checkedOrPressedValue,\n    });\n\n    if (ariaHidden) {\n      buttonProps['aria-hidden'] = true;\n    }\n\n    if (this._isSplitButton) {\n      return this._onRenderSplitButtonContent(tag, buttonProps);\n    } else if (this.props.menuProps) {\n      const { id = `${this._labelId}-menu` } = this.props.menuProps;\n      assign(buttonProps, {\n        'aria-expanded': !menuHidden,\n        'aria-controls': !menuHidden ? id : null,\n        'aria-haspopup': true,\n      });\n    }\n\n    return this._onRenderContent(tag, buttonProps);\n  }\n\n  public componentDidMount() {\n    // For split buttons, touching anywhere in the button should drop the dropdown, which should contain the\n    // primary action. This gives more hit target space for touch environments. We're setting the onpointerdown here,\n    // because React does not support Pointer events yet.\n    if (this._isSplitButton && this._splitButtonContainer.current) {\n      if ('onpointerdown' in this._splitButtonContainer.current) {\n        this._events.on(this._splitButtonContainer.current, 'pointerdown', this._onPointerDown, true);\n      }\n      if ('onpointerup' in this._splitButtonContainer.current && this.props.onPointerUp) {\n        this._events.on(this._splitButtonContainer.current, 'pointerup', this.props.onPointerUp, true);\n      }\n    }\n  }\n\n  public componentDidUpdate(prevProps: IBaseButtonProps, prevState: IBaseButtonState) {\n    // If Button's menu was closed, run onAfterMenuDismiss.\n    if (this.props.onAfterMenuDismiss && !prevState.menuHidden && this.state.menuHidden) {\n      this.props.onAfterMenuDismiss();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public focus(): void {\n    if (this._isSplitButton && this._splitButtonContainer.current) {\n      setFocusVisibility(true);\n      this._splitButtonContainer.current.focus();\n    } else if (this._buttonElement.current) {\n      setFocusVisibility(true);\n      this._buttonElement.current.focus();\n    }\n  }\n\n  public dismissMenu(): void {\n    this._dismissMenu();\n  }\n\n  public openMenu(shouldFocusOnContainer?: boolean, shouldFocusOnMount?: boolean): void {\n    this._openMenu(shouldFocusOnContainer, shouldFocusOnMount);\n  }\n\n  private _onRenderContent(tag: any, buttonProps: IButtonProps): JSX.Element {\n    const props = this.props;\n    const Tag = tag;\n    const {\n      menuIconProps,\n      menuProps,\n      onRenderIcon = this._onRenderIcon,\n      onRenderAriaDescription = this._onRenderAriaDescription,\n      onRenderChildren = this._onRenderChildren,\n      // eslint-disable-next-line deprecation/deprecation\n      onRenderMenu = this._onRenderMenu,\n      onRenderMenuIcon = this._onRenderMenuIcon,\n      disabled,\n    } = props;\n    let { keytipProps } = props;\n    if (keytipProps && menuProps) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    const Button = (keytipAttributes?: any): JSX.Element => (\n      <Tag {...buttonProps} {...keytipAttributes}>\n        <span className={this._classNames.flexContainer} data-automationid=\"splitbuttonprimary\">\n          {onRenderIcon(props, this._onRenderIcon)}\n          {this._onRenderTextContents()}\n          {onRenderAriaDescription(props, this._onRenderAriaDescription)}\n          {onRenderChildren(props, this._onRenderChildren)}\n          {!this._isSplitButton &&\n            (menuProps || menuIconProps || this.props.onRenderMenuIcon) &&\n            onRenderMenuIcon(this.props, this._onRenderMenuIcon)}\n          {menuProps &&\n            !menuProps.doNotLayer &&\n            this._shouldRenderMenu() &&\n            onRenderMenu(this._getMenuProps(menuProps), this._onRenderMenu)}\n        </span>\n      </Tag>\n    );\n\n    const Content = keytipProps ? (\n      // If we're making a split button, we won't put the keytip here\n      <KeytipData\n        keytipProps={!this._isSplitButton ? keytipProps : undefined}\n        ariaDescribedBy={(buttonProps as any)['aria-describedby']}\n        disabled={disabled}\n      >\n        {(keytipAttributes: any): JSX.Element => Button(keytipAttributes)}\n      </KeytipData>\n    ) : (\n      Button()\n    );\n\n    if (menuProps && menuProps.doNotLayer) {\n      return (\n        <>\n          {Content}\n          {this._shouldRenderMenu() && onRenderMenu(this._getMenuProps(menuProps), this._onRenderMenu)}\n        </>\n      );\n    }\n\n    return (\n      <>\n        {Content}\n        <FocusRects />\n      </>\n    );\n  }\n\n  /**\n   * Method to help determine if the menu's component tree should\n   * be rendered. It takes into account whether the menu is expanded,\n   * whether it is a persisted menu and whether it has been shown to the user.\n   */\n  private _shouldRenderMenu() {\n    const { menuHidden } = this.state;\n    // eslint-disable-next-line deprecation/deprecation\n    const { persistMenu, renderPersistedMenuHiddenOnMount } = this.props;\n\n    if (!menuHidden) {\n      // Always should render a menu when it is expanded\n      return true;\n    } else if (persistMenu && (this._renderedVisibleMenu || renderPersistedMenuHiddenOnMount)) {\n      // _renderedVisibleMenu ensures that the first rendering of\n      // the menu happens on-screen, as edge's scrollbar calculations are off if done while hidden.\n      return true;\n    }\n\n    return false;\n  }\n\n  private _onRenderIcon = (\n    buttonProps?: IButtonProps,\n    defaultRender?: IRenderFunction<IButtonProps>,\n  ): JSX.Element | null => {\n    const { iconProps } = this.props;\n\n    if (iconProps && (iconProps.iconName !== undefined || iconProps.imageProps)) {\n      const { className, imageProps, ...rest } = iconProps;\n\n      // If the styles prop is specified as part of iconProps, fall back to regular Icon as FontIcon and ImageIcon\n      // do not have this prop.\n      if (iconProps.styles) {\n        return <Icon className={css(this._classNames.icon, className)} imageProps={imageProps} {...rest} />;\n      }\n      if (iconProps.iconName) {\n        return <FontIcon className={css(this._classNames.icon, className)} {...rest} />;\n      }\n      if (imageProps) {\n        return <ImageIcon className={css(this._classNames.icon, className)} imageProps={imageProps} {...rest} />;\n      }\n    }\n    return null;\n  };\n\n  private _onRenderTextContents = (): JSX.Element | (JSX.Element | null)[] => {\n    const {\n      text,\n      children,\n      // eslint-disable-next-line deprecation/deprecation\n      secondaryText = this.props.description,\n      onRenderText = this._onRenderText,\n      onRenderDescription = this._onRenderDescription,\n    } = this.props;\n\n    if (text || typeof children === 'string' || secondaryText) {\n      return (\n        <span className={this._classNames.textContainer}>\n          {onRenderText(this.props, this._onRenderText)}\n          {onRenderDescription(this.props, this._onRenderDescription)}\n        </span>\n      );\n    }\n    return [onRenderText(this.props, this._onRenderText), onRenderDescription(this.props, this._onRenderDescription)];\n  };\n\n  private _onRenderText = (): JSX.Element | null => {\n    let { text } = this.props;\n    const { children } = this.props;\n\n    // For backwards compat, we should continue to take in the text content from children.\n    if (text === undefined && typeof children === 'string') {\n      text = children;\n    }\n\n    if (this._hasText()) {\n      return (\n        <span key={this._labelId} className={this._classNames.label} id={this._labelId}>\n          {text}\n        </span>\n      );\n    }\n\n    return null;\n  };\n\n  private _hasText(): boolean {\n    // _onRenderTextContents and _onRenderText do not perform the same checks. Below is parity with what _onRenderText\n    // used to have before the refactor that introduced this function. _onRenderTextContents does not require props.\n    // text to be undefined in order for props.children to be used as a fallback.\n    // Purely a code maintainability/reuse issue, but logged as Issue #4979.\n    return this.props.text !== null && (this.props.text !== undefined || typeof this.props.children === 'string');\n  }\n\n  private _onRenderChildren = (): JSX.Element | null => {\n    const { children } = this.props;\n\n    // If children is just a string, either it or the text will be rendered via onRenderLabel\n    // If children is another component, it will be rendered after text\n    if (typeof children === 'string') {\n      return null;\n    }\n\n    return children as any;\n  };\n\n  private _onRenderDescription = (props: IButtonProps) => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { secondaryText = this.props.description } = props;\n\n    // ms-Button-description is only shown when the button type is compound.\n    // In other cases it will not be displayed.\n    return secondaryText ? (\n      <span key={this._descriptionId} className={this._classNames.description} id={this._descriptionId}>\n        {secondaryText}\n      </span>\n    ) : null;\n  };\n\n  private _onRenderAriaDescription = () => {\n    const { ariaDescription } = this.props;\n\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n    return ariaDescription ? (\n      <span className={this._classNames.screenReaderText} id={this._ariaDescriptionId}>\n        {ariaDescription}\n      </span>\n    ) : null;\n  };\n\n  private _onRenderMenuIcon = (props: IButtonProps): JSX.Element | null => {\n    const { menuIconProps } = this.props;\n\n    return <FontIcon iconName=\"ChevronDown\" {...menuIconProps} className={this._classNames.menuIcon} />;\n  };\n\n  private _getMenuProps(menuProps: IContextualMenuProps): IContextualMenuProps {\n    const { persistMenu } = this.props;\n    const { menuHidden } = this.state;\n\n    // the accessible menu label (accessible name) has a relationship to the button.\n    // If the menu props do not specify an explicit value for aria-label or aria-labelledBy,\n    // AND the button has text, we'll set the menu aria-labelledBy to the text element id.\n    if (!menuProps.ariaLabel && !menuProps.labelElementId && this._hasText()) {\n      menuProps = { ...menuProps, labelElementId: this._labelId };\n    }\n\n    return {\n      id: this._labelId + '-menu',\n      directionalHint: DirectionalHint.bottomLeftEdge,\n      ...menuProps,\n      shouldFocusOnContainer: this._menuShouldFocusOnContainer,\n      shouldFocusOnMount: this._menuShouldFocusOnMount,\n      hidden: persistMenu ? menuHidden : undefined,\n      className: css('ms-BaseButton-menuhost', menuProps.className),\n      target: this._isSplitButton ? this._splitButtonContainer.current : this._buttonElement.current,\n      onDismiss: this._onDismissMenu,\n    };\n  }\n\n  private _onRenderMenu = (menuProps: IContextualMenuProps): JSX.Element => {\n    const MenuType = this.props.menuAs ? composeComponentAs(this.props.menuAs, ContextualMenu) : ContextualMenu;\n\n    return <MenuType {...menuProps} />;\n  };\n\n  private _onDismissMenu: IContextualMenuProps['onDismiss'] = ev => {\n    const { menuProps } = this.props;\n\n    if (menuProps && menuProps.onDismiss) {\n      menuProps.onDismiss(ev);\n    }\n    if (!ev || !ev.defaultPrevented) {\n      this._dismissMenu();\n    }\n  };\n\n  private _dismissMenu = (): void => {\n    this._menuShouldFocusOnMount = undefined;\n    this._menuShouldFocusOnContainer = undefined;\n    this.setState({ menuHidden: true });\n  };\n\n  private _openMenu = (shouldFocusOnContainer?: boolean, shouldFocusOnMount: boolean = true): void => {\n    if (this.props.menuProps) {\n      this._menuShouldFocusOnContainer = shouldFocusOnContainer;\n      this._menuShouldFocusOnMount = shouldFocusOnMount;\n      this._renderedVisibleMenu = true;\n      this.setState({ menuHidden: false });\n    }\n  };\n\n  private _onToggleMenu = (shouldFocusOnContainer: boolean): void => {\n    let shouldFocusOnMount = true;\n    if (this.props.menuProps && this.props.menuProps.shouldFocusOnMount === false) {\n      shouldFocusOnMount = false;\n    }\n\n    this.state.menuHidden ? this._openMenu(shouldFocusOnContainer, shouldFocusOnMount) : this._dismissMenu();\n  };\n\n  private _onRenderSplitButtonContent(tag: any, buttonProps: IButtonProps): JSX.Element {\n    const {\n      styles = {},\n      disabled,\n      allowDisabledFocus,\n      checked,\n      getSplitButtonClassNames,\n      primaryDisabled,\n      menuProps,\n      toggle,\n      role,\n      primaryActionButtonProps,\n    } = this.props;\n    let { keytipProps } = this.props;\n    const { menuHidden } = this.state;\n\n    const classNames = getSplitButtonClassNames\n      ? getSplitButtonClassNames(!!disabled, !menuHidden, !!checked, !!allowDisabledFocus)\n      : styles && getBaseSplitButtonClassNames(styles!, !!disabled, !menuHidden, !!checked, !!primaryDisabled);\n\n    assign(buttonProps, {\n      onClick: undefined,\n      onPointerDown: undefined,\n      onPointerUp: undefined,\n      tabIndex: -1,\n      'data-is-focusable': false,\n    });\n\n    if (keytipProps && menuProps) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    const containerProps = getNativeProps<React.HTMLAttributes<HTMLSpanElement>>(buttonProps, [], ['disabled']);\n\n    // Add additional props to apply on primary action button\n    if (primaryActionButtonProps) {\n      assign(buttonProps, primaryActionButtonProps);\n    }\n\n    const SplitButton = (keytipAttributes?: any): JSX.Element => (\n      <div\n        {...containerProps}\n        data-ktp-target={keytipAttributes ? keytipAttributes['data-ktp-target'] : undefined}\n        role={role ? role : 'button'}\n        aria-disabled={disabled}\n        aria-haspopup={true}\n        aria-expanded={!menuHidden}\n        aria-pressed={toggle ? !!checked : undefined} // should only be present for toggle buttons\n        aria-describedby={mergeAriaAttributeValues(\n          buttonProps['aria-describedby'],\n          keytipAttributes ? keytipAttributes['aria-describedby'] : undefined,\n        )}\n        className={classNames && classNames.splitButtonContainer}\n        onKeyDown={this._onSplitButtonContainerKeyDown}\n        onTouchStart={this._onTouchStart}\n        ref={this._splitButtonContainer}\n        data-is-focusable={true}\n        onClick={!disabled && !primaryDisabled ? this._onSplitButtonPrimaryClick : undefined}\n        tabIndex={(!disabled && !primaryDisabled) || allowDisabledFocus ? 0 : undefined}\n        aria-roledescription={buttonProps['aria-roledescription']}\n        onFocusCapture={this._onSplitContainerFocusCapture}\n      >\n        <span style={{ display: 'flex' }}>\n          {this._onRenderContent(tag, buttonProps)}\n          {this._onRenderSplitButtonMenuButton(classNames, keytipAttributes)}\n          {this._onRenderSplitButtonDivider(classNames)}\n        </span>\n      </div>\n    );\n\n    return keytipProps ? (\n      <KeytipData keytipProps={keytipProps} disabled={disabled}>\n        {(keytipAttributes: any): JSX.Element => SplitButton(keytipAttributes)}\n      </KeytipData>\n    ) : (\n      SplitButton()\n    );\n  }\n\n  private _onSplitContainerFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\n    const container = this._splitButtonContainer.current;\n\n    // If the target is coming from the portal we do not need to set focus on the container.\n    if (!container || (ev.target && portalContainsElement(ev.target, container))) {\n      return;\n    }\n\n    // We should never be able to focus the individual buttons in a split button. Focus\n    // should always remain on the container.\n    container.focus();\n  };\n\n  private _onSplitButtonPrimaryClick = (ev: React.MouseEvent<HTMLDivElement>) => {\n    if (!this.state.menuHidden) {\n      this._dismissMenu();\n    }\n\n    if (!this._processingTouch && this.props.onClick) {\n      this.props.onClick(ev);\n    } else if (this._processingTouch) {\n      this._onMenuClick(ev);\n    }\n  };\n\n  private _onRenderSplitButtonDivider(classNames: ISplitButtonClassNames | undefined): JSX.Element | null {\n    if (classNames && classNames.divider) {\n      const onClick = (ev: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        ev.stopPropagation();\n      };\n      return <span className={classNames.divider} aria-hidden={true} onClick={onClick} />;\n    }\n    return null;\n  }\n\n  private _onRenderSplitButtonMenuButton(\n    classNames: ISplitButtonClassNames | undefined,\n    keytipAttributes: any,\n  ): JSX.Element {\n    const {\n      allowDisabledFocus,\n      checked,\n      disabled,\n      splitButtonMenuProps,\n      splitButtonAriaLabel,\n      primaryDisabled,\n    } = this.props;\n    const { menuHidden } = this.state;\n    let menuIconProps = this.props.menuIconProps;\n\n    if (menuIconProps === undefined) {\n      menuIconProps = {\n        iconName: 'ChevronDown',\n      };\n    }\n\n    const splitButtonProps = {\n      ...splitButtonMenuProps,\n      styles: classNames,\n      checked: checked,\n      disabled: disabled,\n      allowDisabledFocus: allowDisabledFocus,\n      onClick: this._onMenuClick,\n      menuProps: undefined,\n      iconProps: { ...menuIconProps, className: this._classNames.menuIcon },\n      ariaLabel: splitButtonAriaLabel,\n      'aria-haspopup': true,\n      'aria-expanded': !menuHidden,\n      'data-is-focusable': false,\n    };\n\n    // Add data-ktp-execute-target to the split button if the keytip is defined\n    return (\n      <BaseButton\n        {...splitButtonProps}\n        data-ktp-execute-target={keytipAttributes ? keytipAttributes['data-ktp-execute-target'] : keytipAttributes}\n        onMouseDown={this._onMouseDown}\n        tabIndex={primaryDisabled && !allowDisabledFocus ? 0 : -1}\n      />\n    );\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    // explicity cancelling event so click won't fire after this\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.props.disabled && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (!this.props.disabled) {\n      if (this.props.menuProps) {\n        this._onMenuKeyDown(ev);\n      } else if (this.props.onKeyDown !== undefined) {\n        this.props.onKeyDown(ev); // not cancelling event because it's not disabled\n      }\n    }\n  };\n\n  private _onKeyUp = (\n    ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onKeyUp !== undefined) {\n      this.props.onKeyUp(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onKeyPress = (\n    ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onKeyPress !== undefined) {\n      this.props.onKeyPress(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onMouseUp = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onMouseUp !== undefined) {\n      this.props.onMouseUp(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onMouseDown = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled && this.props.onMouseDown !== undefined) {\n      this.props.onMouseDown(ev); // not cancelling event because it's not disabled\n    }\n  };\n\n  private _onClick = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>,\n  ) => {\n    if (!this.props.disabled) {\n      if (this.props.menuProps) {\n        this._onMenuClick(ev);\n      } else if (this.props.onClick !== undefined) {\n        this.props.onClick(ev); // not cancelling event because it's not disabled\n      }\n    }\n  };\n\n  private _onSplitButtonContainerKeyDown = (ev: React.KeyboardEvent<HTMLDivElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      if (this._buttonElement.current) {\n        this._buttonElement.current.click();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    } else {\n      this._onMenuKeyDown(ev);\n    }\n  };\n\n  private _onMenuKeyDown = (ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const isUp = ev.which === KeyCodes.up;\n    // eslint-disable-next-line deprecation/deprecation\n    const isDown = ev.which === KeyCodes.down;\n\n    if (!ev.defaultPrevented && this._isValidMenuOpenKey(ev)) {\n      const { onMenuClick } = this.props;\n      if (onMenuClick) {\n        onMenuClick(ev, this.props);\n      }\n\n      this._onToggleMenu(false);\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      // We manually set the focus visibility to true if opening via Enter or Space to account for the scenario where\n      // a user clicks on the button, closes the menu and then opens it via keyboard. In this scenario our default logic\n      // for setting focus visibility is not triggered since there is no keyboard navigation present beforehand.\n      setFocusVisibility(true, ev.target as Element);\n    }\n\n    if (!(ev.altKey || ev.metaKey) && (isUp || isDown)) {\n      // Suppose a menu, with shouldFocusOnMount: false, is open, and user wants to keyboard to the menu items\n      // We need to re-render the menu with shouldFocusOnMount as true.\n\n      if (!this.state.menuHidden && this.props.menuProps) {\n        const currentShouldFocusOnMount =\n          this._menuShouldFocusOnMount !== undefined\n            ? this._menuShouldFocusOnMount\n            : this.props.menuProps.shouldFocusOnMount;\n        if (!currentShouldFocusOnMount) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._menuShouldFocusOnMount = true;\n          this.forceUpdate();\n        }\n      }\n    }\n  };\n\n  private _onTouchStart: () => void = () => {\n    if (\n      this._isSplitButton &&\n      this._splitButtonContainer.current &&\n      !('onpointerdown' in this._splitButtonContainer.current)\n    ) {\n      this._handleTouchAndPointerEvent();\n    }\n  };\n\n  private _onPointerDown(\n    ev: PointerEvent &\n      React.PointerEvent<HTMLAnchorElement | HTMLButtonElement | HTMLDivElement | BaseButton | HTMLSpanElement>,\n  ) {\n    const { onPointerDown } = this.props;\n    if (onPointerDown) {\n      onPointerDown(ev);\n    }\n\n    if (ev.pointerType === 'touch') {\n      this._handleTouchAndPointerEvent();\n\n      ev.preventDefault();\n      ev.stopImmediatePropagation();\n    }\n  }\n\n  private _handleTouchAndPointerEvent() {\n    // If we already have an existing timeout from a previous touch and pointer event\n    // cancel that timeout so we can set a new one.\n    if (this._lastTouchTimeoutId !== undefined) {\n      this._async.clearTimeout(this._lastTouchTimeoutId);\n      this._lastTouchTimeoutId = undefined;\n    }\n    this._processingTouch = true;\n\n    this._lastTouchTimeoutId = this._async.setTimeout(() => {\n      this._processingTouch = false;\n      this._lastTouchTimeoutId = undefined;\n\n      // Touch and pointer events don't focus the button naturally,\n      // so adding an imperative focus call to guarantee this behavior.\n      this.focus();\n    }, TouchIdleDelay);\n  }\n\n  /**\n   * Returns if the user hits a valid keyboard key to open the menu\n   * @param ev - the keyboard event\n   * @returns True if user clicks on custom trigger key if enabled or alt + down arrow if not. False otherwise.\n   */\n  private _isValidMenuOpenKey(\n    ev: React.KeyboardEvent<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement>,\n  ): boolean {\n    if (this.props.menuTriggerKeyCode) {\n      // eslint-disable-next-line deprecation/deprecation\n      return ev.which === this.props.menuTriggerKeyCode;\n    } else if (this.props.menuProps) {\n      // eslint-disable-next-line deprecation/deprecation\n      return ev.which === KeyCodes.down && (ev.altKey || ev.metaKey);\n    }\n\n    // Note: When enter is pressed, we will let the event continue to propagate\n    // to trigger the onClick event on the button\n    return false;\n  }\n\n  private _onMenuClick = (\n    ev: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLAnchorElement | HTMLSpanElement>,\n  ) => {\n    const { onMenuClick } = this.props;\n    if (onMenuClick) {\n      onMenuClick(ev, this.props);\n    }\n\n    if (!ev.defaultPrevented) {\n      this._onToggleMenu(false);\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  };\n}\n","import { memoizeFunction } from '../../Utilities';\nimport { HighContrastSelector, getFocusStyle, hiddenContentStyle } from '../../Styling';\nimport type { IButtonStyles } from './Button.types';\nimport type { ITheme, IRawStyle } from '../../Styling';\n\nconst noOutline: IRawStyle = {\n  outline: 0,\n};\n\nconst iconStyle = (fontSize?: string | number): IRawStyle => {\n  return {\n    fontSize: fontSize,\n    margin: '0 4px',\n    height: '16px',\n    lineHeight: '16px',\n    textAlign: 'center',\n    flexShrink: 0,\n  };\n};\n\n/**\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\n * mixing class names together.\n */\nexport const getStyles = memoizeFunction(\n  (theme: ITheme): IButtonStyles => {\n    const { semanticColors, effects, fonts } = theme;\n\n    const border = semanticColors.buttonBorder;\n    const disabledBackground = semanticColors.disabledBackground;\n    const disabledText = semanticColors.disabledText;\n    const buttonHighContrastFocus = {\n      left: -2,\n      top: -2,\n      bottom: -2,\n      right: -2,\n      outlineColor: 'ButtonText',\n    };\n\n    return {\n      root: [\n        getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n        theme.fonts.medium,\n        {\n          boxSizing: 'border-box',\n          border: '1px solid ' + border,\n          userSelect: 'none',\n          display: 'inline-block',\n          textDecoration: 'none',\n          textAlign: 'center',\n          cursor: 'pointer',\n          padding: '0 16px',\n          borderRadius: effects.roundedCorner2,\n\n          selectors: {\n            // IE11 workaround for preventing shift of child elements of a button when active.\n            ':active > *': {\n              position: 'relative',\n              left: 0,\n              top: 0,\n            },\n          },\n        },\n      ],\n\n      rootDisabled: [\n        getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n        {\n          backgroundColor: disabledBackground,\n          borderColor: disabledBackground,\n          color: disabledText,\n          cursor: 'default',\n          selectors: {\n            ':hover': noOutline,\n            ':focus': noOutline,\n          },\n        },\n      ],\n\n      iconDisabled: {\n        color: disabledText,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n\n      menuIconDisabled: {\n        color: disabledText,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n\n      flexContainer: {\n        display: 'flex',\n        height: '100%',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      description: {\n        display: 'block',\n      },\n\n      textContainer: {\n        flexGrow: 1,\n        display: 'block',\n      },\n\n      icon: iconStyle(fonts.mediumPlus.fontSize),\n\n      menuIcon: iconStyle(fonts.small.fontSize),\n\n      label: {\n        margin: '0 4px',\n        lineHeight: '100%',\n        display: 'block',\n      },\n\n      screenReaderText: hiddenContentStyle,\n    };\n  },\n);\n","import { HighContrastSelector, concatStyleSets, getFocusStyle, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme, IStyle } from '../../../Styling';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n    const { effects, palette, semanticColors } = theme;\n\n    const buttonHighContrastFocus = {\n      left: -2,\n      top: -2,\n      bottom: -2,\n      right: -2,\n      border: 'none',\n    };\n\n    const splitButtonDividerBaseStyles: IStyle = {\n      position: 'absolute',\n      width: 1,\n      right: 31,\n      top: 8,\n      bottom: 8,\n    };\n\n    const splitButtonStyles: IButtonStyles = {\n      splitButtonContainer: [\n        getFocusStyle(theme, { highContrastStyle: buttonHighContrastFocus, inset: 2 }),\n        {\n          display: 'inline-flex',\n          selectors: {\n            '.ms-Button--default': {\n              borderTopRightRadius: '0',\n              borderBottomRightRadius: '0',\n              borderRight: 'none',\n            },\n            '.ms-Button--primary': {\n              borderTopRightRadius: '0',\n              borderBottomRightRadius: '0',\n              border: 'none',\n\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'WindowText',\n                  backgroundColor: 'Window',\n                  border: '1px solid WindowText',\n                  borderRightWidth: '0',\n                  ...getHighContrastNoAdjustStyle(),\n                },\n              },\n            },\n            '.ms-Button--primary + .ms-Button': {\n              border: 'none',\n              selectors: {\n                [HighContrastSelector]: {\n                  border: '1px solid WindowText',\n                  borderLeftWidth: '0',\n                },\n              },\n            },\n          },\n        },\n      ],\n      splitButtonContainerHovered: {\n        selectors: {\n          '.ms-Button--primary': {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'Window',\n                backgroundColor: 'Highlight',\n              },\n            },\n          },\n          '.ms-Button.is-disabled': {\n            color: semanticColors.buttonTextDisabled,\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'GrayText',\n                borderColor: 'GrayText',\n                backgroundColor: 'Window',\n              },\n            },\n          },\n        },\n      },\n      splitButtonContainerChecked: {\n        selectors: {\n          '.ms-Button--primary': {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'Window',\n                backgroundColor: 'WindowText',\n                ...getHighContrastNoAdjustStyle(),\n              },\n            },\n          },\n        },\n      },\n      splitButtonContainerCheckedHovered: {\n        selectors: {\n          '.ms-Button--primary': {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'Window',\n                backgroundColor: 'WindowText',\n                ...getHighContrastNoAdjustStyle(),\n              },\n            },\n          },\n        },\n      },\n      splitButtonContainerFocused: {\n        outline: 'none!important',\n      },\n      splitButtonMenuButton: {\n        padding: 6,\n        height: 'auto',\n        boxSizing: 'border-box',\n        borderRadius: 0,\n        borderTopRightRadius: effects.roundedCorner2,\n        borderBottomRightRadius: effects.roundedCorner2,\n        border: `1px solid ${palette.neutralSecondaryAlt}`,\n        borderLeft: 'none',\n        outline: 'transparent',\n        userSelect: 'none',\n        display: 'inline-block',\n        textDecoration: 'none',\n        textAlign: 'center',\n        cursor: 'pointer',\n        verticalAlign: 'top',\n        width: 32,\n        marginLeft: -1,\n        marginTop: 0,\n        marginRight: 0,\n        marginBottom: 0,\n        [HighContrastSelector]: {\n          '.ms-Button-menuIcon': {\n            color: 'WindowText',\n          },\n        },\n      },\n      splitButtonDivider: {\n        ...splitButtonDividerBaseStyles,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'WindowText',\n          },\n        },\n      },\n      splitButtonDividerDisabled: {\n        ...splitButtonDividerBaseStyles,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'GrayText',\n          },\n        },\n      },\n      splitButtonMenuButtonDisabled: {\n        pointerEvents: 'none',\n        border: 'none',\n        selectors: {\n          ':hover': {\n            cursor: 'default',\n          },\n\n          '.ms-Button--primary': {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'GrayText',\n                borderColor: 'GrayText',\n                backgroundColor: 'Window',\n              },\n            },\n          },\n          '.ms-Button-menuIcon': {\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'GrayText',\n              },\n            },\n          },\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            border: '1px solid GrayText',\n            backgroundColor: 'Window',\n          },\n        },\n      },\n\n      splitButtonFlexContainer: {\n        display: 'flex',\n        height: '100%',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n\n      splitButtonContainerDisabled: {\n        outline: 'none',\n        border: 'none',\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            borderColor: 'GrayText',\n            backgroundColor: 'Window',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      splitButtonMenuFocused: {\n        ...getFocusStyle(theme, { highContrastStyle: buttonHighContrastFocus, inset: 2 }),\n      },\n    };\n\n    return concatStyleSets(splitButtonStyles, customStyles)!;\n  },\n);\n","import { concatStyleSets, FontWeights } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\n\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme } from '../../../Styling';\n\nconst DEFAULT_BUTTON_HEIGHT = '32px';\nconst DEFAULT_BUTTON_MIN_WIDTH = '80px';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles, primary?: boolean): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const defaultButtonStyles: IButtonStyles = {\n      root: {\n        minWidth: DEFAULT_BUTTON_MIN_WIDTH,\n        height: DEFAULT_BUTTON_HEIGHT,\n      },\n      label: {\n        fontWeight: FontWeights.semibold,\n      },\n    };\n\n    return concatStyleSets(\n      baseButtonStyles,\n      defaultButtonStyles,\n      primary ? primaryStyles(theme) : standardStyles(theme),\n      splitButtonStyles,\n      customStyles,\n    )!;\n  },\n);\n","import { HighContrastSelector, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport type { IButtonStyles } from './Button.types';\nimport type { ITheme, IRawStyle } from '../../Styling';\n\nconst splitButtonDividerBaseStyles = (): IRawStyle => {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8,\n  };\n};\n\nexport function standardStyles(theme: ITheme): IButtonStyles {\n  const { semanticColors: s, palette: p } = theme;\n\n  const buttonBackground = s.buttonBackground;\n  const buttonBackgroundPressed = s.buttonBackgroundPressed;\n  const buttonBackgroundHovered = s.buttonBackgroundHovered;\n  const buttonBackgroundDisabled = s.buttonBackgroundDisabled;\n\n  const buttonText = s.buttonText;\n  const buttonTextHovered = s.buttonTextHovered;\n  const buttonTextDisabled = s.buttonTextDisabled;\n  const buttonTextChecked = s.buttonTextChecked;\n  const buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText,\n    },\n\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          color: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered,\n    },\n\n    rootDisabled: {\n      color: buttonTextDisabled,\n      backgroundColor: buttonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n      },\n    },\n\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt,\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.buttonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled,\n    },\n  };\n}\n\nexport function primaryStyles(theme: ITheme): IButtonStyles {\n  const { palette: p, semanticColors: s } = theme;\n\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: `1px solid ${s.primaryButtonBackground}`,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          selectors: {\n            ':after': {\n              border: `none`,\n              outlineColor: p.white,\n            },\n          },\n        },\n      },\n    },\n\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: `1px solid ${s.primaryButtonBackgroundHovered}`,\n      color: s.primaryButtonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: `1px solid ${s.primaryButtonBackgroundPressed}`,\n      color: s.primaryButtonTextPressed,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootDisabled: {\n      color: s.primaryButtonTextDisabled,\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.white,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundHovered,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  };\n}\n","import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { getStyles } from './DefaultButton.styles';\nimport type { IButtonProps } from '../Button.types';\n\n/**\n * {@docCategory Button}\n */\n@customizable('DefaultButton', ['theme', 'styles'], true)\nexport class DefaultButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { primary = false, styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName={primary ? 'ms-Button--primary' : 'ms-Button--default'}\n        styles={getStyles(theme!, styles, primary)}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { hoistStatics } from '../hoistStatics';\nimport { CustomizerContext } from './CustomizerContext';\nimport { concatStyleSets } from '@fluentui/merge-styles';\nimport type { ICustomizerContext } from './CustomizerContext';\n\nexport function customizable(\n  scope: string,\n  fields: string[],\n  concatStyles?: boolean,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): <P>(ComposedComponent: React.ComponentType<P>) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function customizableFactory<P>(ComposedComponent: React.ComponentType<P>): any {\n    const resultClass = class ComponentWithInjectedProps extends React.Component<P, {}> {\n      public static displayName: string = 'Customized' + scope;\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      private _styleCache: { default?: any; component?: any; merged?: any } = {};\n\n      constructor(props: P) {\n        super(props);\n\n        this._onSettingChanged = this._onSettingChanged.bind(this);\n      }\n\n      public componentDidMount(): void {\n        Customizations.observe(this._onSettingChanged);\n      }\n\n      public componentWillUnmount(): void {\n        Customizations.unobserve(this._onSettingChanged);\n      }\n\n      public render(): JSX.Element {\n        return (\n          <CustomizerContext.Consumer>\n            {(context: ICustomizerContext) => {\n              const defaultProps = Customizations.getSettings(fields, scope, context.customizations);\n\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const componentProps = this.props as any;\n\n              // If defaultProps.styles is a function, evaluate it before calling concatStyleSets\n              if (defaultProps.styles && typeof defaultProps.styles === 'function') {\n                defaultProps.styles = defaultProps.styles({ ...defaultProps, ...componentProps });\n              }\n\n              // If concatStyles is true and custom styles have been defined compute those styles\n              if (concatStyles && defaultProps.styles) {\n                if (\n                  this._styleCache.default !== defaultProps.styles ||\n                  this._styleCache.component !== componentProps.styles\n                ) {\n                  const mergedStyles = concatStyleSets(defaultProps.styles, componentProps.styles);\n                  this._styleCache.default = defaultProps.styles;\n                  this._styleCache.component = componentProps.styles;\n                  this._styleCache.merged = mergedStyles;\n                }\n\n                return <ComposedComponent {...defaultProps} {...componentProps} styles={this._styleCache.merged} />;\n              }\n\n              return <ComposedComponent {...defaultProps} {...componentProps} />;\n            }}\n          </CustomizerContext.Consumer>\n        );\n      }\n\n      private _onSettingChanged(): void {\n        this.forceUpdate();\n      }\n    };\n\n    return hoistStatics(ComposedComponent, resultClass);\n  };\n}\n","/**\n * Allows you to hoist static functions in components.\n * Created for the purpose of fixing broken static functions in classes\n * that utilize decorators.\n *\n * @public\n * @param source - The object where the methods are hoisted from.\n * @param dest - The object to hoist the methods onto.\n * @returns The dest object with methods added\n */\n\nexport function hoistStatics<TSource extends Object, TDest>(source: TSource, dest: TDest): TDest {\n  for (const name in source) {\n    if (source.hasOwnProperty(name)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (dest as any)[name] = source[name];\n    }\n  }\n\n  return dest;\n}\n","import * as React from 'react';\nimport { classNames, MS_ICON } from './Icon.styles';\nimport { css, getNativeProps, htmlElementProperties, memoizeFunction } from '../../Utilities';\nimport { getIcon } from '../../Styling';\nimport type { IFontIconProps } from './Icon.types';\nimport type { IIconRecord, IIconSubsetRecord } from '../../Styling';\n\nexport interface IIconContent {\n  children?: string | JSX.Element;\n  iconClassName?: string;\n  fontFamily?: string;\n  mergeImageProps?: boolean;\n}\n\nexport const getIconContent = memoizeFunction(\n  (iconName?: string): IIconContent | null => {\n    const { code, subset }: Pick<IIconRecord, 'code'> & { subset: Partial<IIconSubsetRecord> } = getIcon(iconName) || {\n      subset: {},\n      code: undefined,\n    };\n\n    if (!code) {\n      return null;\n    }\n\n    return {\n      children: code,\n      iconClassName: subset.className,\n      fontFamily: subset.fontFace && subset.fontFace.fontFamily,\n      mergeImageProps: subset.mergeImageProps,\n    };\n  },\n  undefined,\n  true /*ignoreNullOrUndefinedResult */,\n);\n\n/**\n * Fast icon component which only supports font glyphs (not images) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport const FontIcon: React.FunctionComponent<IFontIconProps> = props => {\n  const { iconName, className, style = {} } = props;\n  const iconContent = getIconContent(iconName) || {};\n  const { iconClassName, children, fontFamily, mergeImageProps } = iconContent;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLElement>>(props, htmlElementProperties);\n  const accessibleName = props['aria-label'] || props.title;\n  const containerProps =\n    props['aria-label'] || props['aria-labelledby'] || props.title\n      ? {\n          role: mergeImageProps ? undefined : 'img',\n        }\n      : {\n          'aria-hidden': true,\n        };\n\n  let finalChildren = children;\n\n  if (mergeImageProps) {\n    if (typeof children === 'object' && typeof children.props === 'object' && accessibleName) {\n      finalChildren = React.cloneElement(children, { alt: accessibleName });\n    }\n  }\n\n  return (\n    <i\n      data-icon-name={iconName}\n      {...containerProps}\n      {...nativeProps}\n      {...(mergeImageProps\n        ? {\n            title: undefined,\n            'aria-label': undefined,\n          }\n        : {})}\n      className={css(MS_ICON, classNames.root, iconClassName, !iconName && classNames.placeholder, className)}\n      // Apply the font family this way to ensure it doesn't get overridden by Fabric Core ms-Icon styles\n      // https://github.com/microsoft/fluentui/issues/10449\n      style={{ fontFamily, ...style }}\n    >\n      {finalChildren}\n    </i>\n  );\n};\n\n/**\n * Memoized helper for rendering a FontIcon.\n * @param iconName - The name of the icon to use from the icon font.\n * @param className - Class name for styling the icon.\n * @param ariaLabel - Label for the icon for the benefit of screen readers.\n * {@docCategory Icon}\n */\nexport const getFontIcon = memoizeFunction((iconName: string, className?: string, ariaLabel?: string) => {\n  return FontIcon({ iconName, className, 'aria-label': ariaLabel });\n});\n","import * as React from 'react';\nimport type { IImageProps } from '../Image/Image.types';\nimport type { IStyle, ITheme } from '../../Styling';\nimport type { IBaseProps, IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n * {@docCategory Icon}\n */\nexport enum IconType {\n  /**\n   * Render using the fabric icon font.\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  default = 0,\n\n  /**\n   * Render using an image, where imageProps would be used.\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  image = 1,\n\n  /**\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  Default = 100000,\n\n  /**\n   * @deprecated Icon type is inferred based on presence of `IIconProps.imageProps`\n   */\n  Image = 100001,\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconProps extends IBaseProps, React.HTMLAttributes<HTMLElement> {\n  /**\n   * The name of the icon to use from the icon font.\n   * If string is empty, a placeholder icon will be rendered the same width as an icon.\n   */\n  iconName?: string;\n\n  /**\n   * The aria label of the icon for the benefit of screen readers.\n   * @deprecated Use the native prop `aria-label`\n   */\n  ariaLabel?: string;\n\n  /**\n   * The type of icon to render (image or icon font).\n   * @deprecated Inferred based on the presence of `imageProps`\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  iconType?: IconType;\n\n  /**\n   * If rendering an image icon, these props will be passed to the Image component.\n   */\n  imageProps?: IImageProps;\n\n  /**\n   * If rendering an image icon, this component will be rendered in the event that loading the image fails.\n   */\n  imageErrorAs?: React.ComponentType<IImageProps>;\n\n  /**\n   * Gets the styles for an Icon.\n   */\n  styles?: IStyleFunctionOrObject<IIconStyleProps, IIconStyles>;\n  theme?: ITheme;\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconStyleProps {\n  className?: string;\n  iconClassName?: string;\n  isPlaceholder: boolean;\n  isImage: boolean;\n  styles?: Partial<IIconStyles>;\n  theme?: ITheme;\n}\n\n/**\n * {@docCategory Icon}\n */\nexport interface IIconStyles {\n  root?: IStyle;\n\n  /**\n   * @deprecated Use `root`.\n   */\n  imageContainer?: IStyle;\n}\n\n/**\n * Props for a basic icon component which only supports font glyphs and can't be targeted by customizations.\n * {@docCategory Icon}\n */\nexport interface IFontIconProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * The name of the icon to use from the icon font.\n   * If string is empty, a placeholder icon will be rendered the same width as an icon.\n   */\n  iconName?: string;\n\n  /**\n   * Custom class to style the icon.\n   */\n  className?: string;\n}\n\n/**\n * Props for a basic image icon component which doesn't directly provide image load error handling\n * and can't be targeted by customizations.\n * {@docCategory Icon}\n */\nexport interface IImageIconProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * Props passed to the Image component.\n   */\n  imageProps: IImageProps;\n\n  /**\n   * Custom class to style the icon.\n   */\n  className?: string;\n}\n","import * as React from 'react';\n\nimport { IconType } from './Icon.types';\nimport { Image } from '../Image/Image';\nimport { ImageLoadState } from '../Image/Image.types';\nimport { getNativeProps, htmlElementProperties, classNamesFunction } from '../../Utilities';\nimport { getIconContent } from './FontIcon';\nimport type { IIconProps, IIconStyleProps, IIconStyles } from './Icon.types';\nimport type { IImageProps } from '../Image/Image.types';\n\nexport interface IIconState {\n  imageLoadError: boolean;\n}\n\nconst getClassNames = classNamesFunction<IIconStyleProps, IIconStyles>({\n  // Icon is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Icon.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class IconBase extends React.Component<IIconProps, IIconState> {\n  constructor(props: IIconProps) {\n    super(props);\n    this.state = {\n      imageLoadError: false,\n    };\n  }\n\n  public render() {\n    const { children, className, styles, iconName, imageErrorAs, theme } = this.props;\n    const isPlaceholder = typeof iconName === 'string' && iconName.length === 0;\n    const isImage =\n      // eslint-disable-next-line deprecation/deprecation\n      !!this.props.imageProps || this.props.iconType === IconType.image || this.props.iconType === IconType.Image;\n    const iconContent = getIconContent(iconName) || {};\n    const { iconClassName, children: iconContentChildren, mergeImageProps } = iconContent;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      iconClassName,\n      isImage,\n      isPlaceholder,\n    });\n\n    const RootType = isImage ? 'span' : 'i';\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, htmlElementProperties, [\n      'aria-label',\n    ]);\n    const { imageLoadError } = this.state;\n    const imageProps: IImageProps = {\n      ...this.props.imageProps,\n      onLoadingStateChange: this._onImageLoadingStateChange,\n    };\n    const ImageType = (imageLoadError && imageErrorAs) || Image;\n\n    // eslint-disable-next-line deprecation/deprecation\n    const ariaLabel = this.props['aria-label'] || this.props.ariaLabel;\n    const accessibleName = imageProps.alt || ariaLabel || this.props.title;\n    const hasName = !!(\n      accessibleName ||\n      this.props['aria-labelledby'] ||\n      imageProps['aria-label'] ||\n      imageProps['aria-labelledby']\n    );\n    const containerProps = hasName\n      ? {\n          role: isImage || mergeImageProps ? undefined : 'img',\n          'aria-label': isImage || mergeImageProps ? undefined : accessibleName,\n        }\n      : {\n          'aria-hidden': true,\n        };\n\n    let finalIconContentChildren = iconContentChildren;\n\n    if (mergeImageProps && iconContentChildren && typeof iconContentChildren === 'object' && accessibleName) {\n      finalIconContentChildren = React.cloneElement(iconContentChildren, {\n        alt: accessibleName,\n      });\n    }\n\n    return (\n      <RootType\n        data-icon-name={iconName}\n        {...containerProps}\n        {...nativeProps}\n        {...(mergeImageProps\n          ? {\n              title: undefined,\n              'aria-label': undefined,\n            }\n          : {})}\n        className={classNames.root}\n      >\n        {isImage ? <ImageType {...imageProps} /> : children || finalIconContentChildren}\n      </RootType>\n    );\n  }\n\n  private _onImageLoadingStateChange = (state: ImageLoadState): void => {\n    if (this.props.imageProps && this.props.imageProps.onLoadingStateChange) {\n      this.props.imageProps.onLoadingStateChange(state);\n    }\n    if (state === ImageLoadState.error) {\n      this.setState({ imageLoadError: true });\n    }\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { IconBase } from './Icon.base';\nimport { getStyles } from './Icon.styles';\nimport type { IIconProps, IIconStyleProps, IIconStyles } from './Icon.types';\n\n/**\n * Legacy Icon component which can be targeted by customization. It's recommended to use `FontIcon`\n * or `ImageIcon` instead, especially in scenarios where rendering performance is important.\n * {@docCategory Icon}\n */\nexport const Icon: React.FunctionComponent<IIconProps> = styled<IIconProps, IIconStyleProps, IIconStyles>(\n  IconBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Icon',\n  },\n  true,\n);\nIcon.displayName = 'Icon';\n","import { mergeStyleSets } from '../../Styling';\nimport type { IIconStyleProps, IIconStyles } from './Icon.types';\n\n/** Class names used in themeable and non-themeable Icon components */\nexport const classNames = mergeStyleSets({\n  root: {\n    display: 'inline-block',\n  },\n  placeholder: [\n    'ms-Icon-placeHolder',\n    {\n      width: '1em',\n    },\n  ],\n  image: [\n    'ms-Icon-imageContainer',\n    {\n      overflow: 'hidden',\n    },\n  ],\n});\n/** Class name used only in non-themeable Icon components */\nexport const MS_ICON = 'ms-Icon';\n\nexport const getStyles = (props: IIconStyleProps): IIconStyles => {\n  const { className, iconClassName, isPlaceholder, isImage, styles } = props;\n\n  return {\n    root: [\n      isPlaceholder && classNames.placeholder,\n      classNames.root,\n      isImage && classNames.image,\n      iconClassName,\n      className,\n      styles && styles.root,\n      // eslint-disable-next-line deprecation/deprecation\n      styles && styles.imageContainer,\n    ],\n  };\n};\n","import * as React from 'react';\nimport { classNamesFunction, getNativeProps, imgProperties } from '../../Utilities';\nimport { ImageCoverStyle, ImageFit, ImageLoadState } from './Image.types';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport type { IImageProps, IImageStyleProps, IImageStyles } from './Image.types';\n\nconst getClassNames = classNamesFunction<IImageStyleProps, IImageStyles>();\n\nexport interface IImageState {\n  loadState?: ImageLoadState;\n}\n\nconst SVG_REGEX = /\\.svg$/i;\nconst KEY_PREFIX = 'fabricImage';\n\nfunction useLoadState(\n  props: IImageProps,\n  imageElement: React.RefObject<HTMLImageElement>,\n): readonly [\n  ImageLoadState,\n  /* onImageLoad */ (ev: React.SyntheticEvent<HTMLImageElement>) => void,\n  /* onImageError */ (ev: React.SyntheticEvent<HTMLImageElement>) => void,\n] {\n  const { onLoadingStateChange, onLoad, onError, src } = props;\n\n  const [loadState, setLoadState] = React.useState<ImageLoadState>(ImageLoadState.notLoaded);\n\n  // eslint-disable-next-line no-restricted-properties\n  React.useLayoutEffect(() => {\n    // If the src property changes, reset the load state\n    // (does nothing if the load state is already notLoaded)\n    setLoadState(ImageLoadState.notLoaded);\n  }, [src]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps -- intended to run every render\n  React.useEffect(() => {\n    if (loadState === ImageLoadState.notLoaded) {\n      // testing if naturalWidth and naturalHeight are greater than zero is better than checking\n      // .complete, because .complete will also be set to true if the image breaks. However,\n      // for some browsers, SVG images do not have a naturalWidth or naturalHeight, so fall back\n      // to checking .complete for these images.\n      const isLoaded: boolean = imageElement.current\n        ? (src && imageElement.current.naturalWidth > 0 && imageElement.current.naturalHeight > 0) ||\n          (imageElement.current.complete && SVG_REGEX.test(src!))\n        : false;\n\n      if (isLoaded) {\n        setLoadState(ImageLoadState.loaded);\n      }\n    }\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChange?.(loadState);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run when loadState changes\n  }, [loadState]);\n\n  const onImageLoaded = React.useCallback(\n    (ev: React.SyntheticEvent<HTMLImageElement>) => {\n      onLoad?.(ev);\n      if (src) {\n        setLoadState(ImageLoadState.loaded);\n      }\n    },\n    [src, onLoad],\n  );\n\n  const onImageError = React.useCallback(\n    (ev: React.SyntheticEvent<HTMLImageElement>) => {\n      onError?.(ev);\n      setLoadState(ImageLoadState.error);\n    },\n    [onError],\n  );\n\n  return [loadState, onImageLoaded, onImageError] as const;\n}\n\nexport const ImageBase: React.FunctionComponent<IImageProps> = React.forwardRef<HTMLImageElement, IImageProps>(\n  (props, forwardedRef) => {\n    const frameElement = React.useRef<HTMLDivElement>() as React.RefObject<HTMLDivElement>;\n    const imageElement = React.useRef<HTMLImageElement>() as React.RefObject<HTMLImageElement>;\n    const [loadState, onImageLoaded, onImageError] = useLoadState(props, imageElement);\n\n    const imageProps = getNativeProps<React.ImgHTMLAttributes<HTMLImageElement>>(props, imgProperties, [\n      'width',\n      'height',\n    ]);\n    const {\n      src,\n      alt,\n      width,\n      height,\n      shouldFadeIn = true,\n      shouldStartVisible,\n      className,\n      imageFit,\n      role,\n      maximizeFrame,\n      styles,\n      theme,\n      loading,\n    } = props;\n    const coverStyle = useCoverStyle(props, loadState, imageElement, frameElement);\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      width,\n      height,\n      maximizeFrame,\n      shouldFadeIn,\n      shouldStartVisible,\n      isLoaded:\n        loadState === ImageLoadState.loaded || (loadState === ImageLoadState.notLoaded && props.shouldStartVisible),\n      isLandscape: coverStyle === ImageCoverStyle.landscape,\n      isCenter: imageFit === ImageFit.center,\n      isCenterContain: imageFit === ImageFit.centerContain,\n      isCenterCover: imageFit === ImageFit.centerCover,\n      isContain: imageFit === ImageFit.contain,\n      isCover: imageFit === ImageFit.cover,\n      isNone: imageFit === ImageFit.none,\n      isError: loadState === ImageLoadState.error,\n      isNotImageFit: imageFit === undefined,\n    });\n\n    // If image dimensions aren't specified, the natural size of the image is used.\n    return (\n      <div className={classNames.root} style={{ width: width, height: height }} ref={frameElement}>\n        <img\n          {...imageProps}\n          onLoad={onImageLoaded}\n          onError={onImageError}\n          key={KEY_PREFIX + props.src || ''}\n          className={classNames.image}\n          ref={useMergedRefs(imageElement, forwardedRef)}\n          src={src}\n          alt={alt}\n          role={role}\n          loading={loading}\n        />\n      </div>\n    );\n  },\n);\nImageBase.displayName = 'ImageBase';\n\nfunction useCoverStyle(\n  props: IImageProps,\n  loadState: ImageLoadState,\n  imageElement: React.RefObject<HTMLImageElement>,\n  frameElement: React.RefObject<HTMLDivElement>,\n) {\n  const previousLoadState = React.useRef(loadState);\n  const coverStyle = React.useRef<ImageCoverStyle | undefined>();\n\n  if (\n    coverStyle === undefined ||\n    (previousLoadState.current === ImageLoadState.notLoaded && loadState === ImageLoadState.loaded)\n  ) {\n    coverStyle.current = computeCoverStyle(props, loadState, imageElement, frameElement);\n  }\n\n  previousLoadState.current = loadState;\n\n  return coverStyle.current!;\n}\n\nfunction computeCoverStyle(\n  props: IImageProps,\n  loadState: ImageLoadState,\n  imageElement: React.RefObject<HTMLImageElement>,\n  frameElement: React.RefObject<HTMLDivElement>,\n): ImageCoverStyle {\n  const { imageFit, width, height } = props;\n\n  // Do not compute cover style if it was already specified in props\n  if (props.coverStyle !== undefined) {\n    return props.coverStyle;\n  } else if (\n    loadState === ImageLoadState.loaded &&\n    (imageFit === ImageFit.cover ||\n      imageFit === ImageFit.contain ||\n      imageFit === ImageFit.centerContain ||\n      imageFit === ImageFit.centerCover) &&\n    imageElement.current &&\n    frameElement.current\n  ) {\n    // Determine the desired ratio using the width and height props.\n    // If those props aren't available, measure measure the frame.\n    let desiredRatio;\n    if (\n      typeof width === 'number' &&\n      typeof height === 'number' &&\n      imageFit !== ImageFit.centerContain &&\n      imageFit !== ImageFit.centerCover\n    ) {\n      desiredRatio = width / height;\n    } else {\n      desiredRatio = frameElement.current.clientWidth / frameElement.current.clientHeight;\n    }\n\n    // Examine the source image to determine its original ratio.\n    const naturalRatio = imageElement.current.naturalWidth / imageElement.current.naturalHeight;\n\n    // Should we crop from the top or the sides?\n    if (naturalRatio > desiredRatio) {\n      return ImageCoverStyle.landscape;\n    }\n  }\n  return ImageCoverStyle.portrait;\n}\n","import { AnimationClassNames, getGlobalClassNames } from '../../Styling';\nimport { getWindow } from '../../Utilities';\nimport type { IStyle } from '../../Styling';\nimport type { IImageStyleProps, IImageStyles } from './Image.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Image',\n  rootMaximizeFrame: 'ms-Image--maximizeFrame',\n  image: 'ms-Image-image',\n  imageCenter: 'ms-Image-image--center',\n  imageContain: 'ms-Image-image--contain',\n  imageCover: 'ms-Image-image--cover',\n  imageCenterContain: 'ms-Image-image--centerContain',\n  imageCenterCover: 'ms-Image-image--centerCover',\n  imageNone: 'ms-Image-image--none',\n  imageLandscape: 'ms-Image-image--landscape',\n  imagePortrait: 'ms-Image-image--portrait',\n};\n\nexport const getStyles = (props: IImageStyleProps): IImageStyles => {\n  const {\n    className,\n    width,\n    height,\n    maximizeFrame,\n    isLoaded,\n    shouldFadeIn,\n    shouldStartVisible,\n    isLandscape,\n    isCenter,\n    isContain,\n    isCover,\n    isCenterContain,\n    isCenterCover,\n    isNone,\n    isError,\n    isNotImageFit,\n    theme,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const ImageFitStyles: IStyle = {\n    position: 'absolute',\n    left: '50% /* @noflip */',\n    top: '50%',\n    transform: 'translate(-50%,-50%)', // @todo test RTL renders transform: translate(50%,-50%);\n  };\n\n  // Cut the mustard using msMaxTouchPoints to detect IE11 which does not support CSS object-fit\n  const window: Window | undefined = getWindow();\n  const supportsObjectFit: boolean = window !== undefined && window.navigator.msMaxTouchPoints === undefined;\n  const fallbackObjectFitStyles =\n    (isContain && isLandscape) || (isCover && !isLandscape)\n      ? { width: '100%', height: 'auto' }\n      : { width: 'auto', height: '100%' };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        overflow: 'hidden',\n      },\n      maximizeFrame && [\n        classNames.rootMaximizeFrame,\n        {\n          height: '100%',\n          width: '100%',\n        },\n      ],\n      isLoaded && shouldFadeIn && !shouldStartVisible && AnimationClassNames.fadeIn400,\n      (isCenter || isContain || isCover || isCenterContain || isCenterCover) && {\n        position: 'relative',\n      },\n      className,\n    ],\n    image: [\n      classNames.image,\n      {\n        display: 'block',\n        opacity: 0,\n      },\n      isLoaded && [\n        'is-loaded',\n        {\n          opacity: 1,\n        },\n      ],\n      isCenter && [classNames.imageCenter, ImageFitStyles],\n      isContain && [\n        classNames.imageContain,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        !supportsObjectFit && ImageFitStyles,\n      ],\n      isCover && [\n        classNames.imageCover,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        !supportsObjectFit && ImageFitStyles,\n      ],\n      isCenterContain && [\n        classNames.imageCenterContain,\n        isLandscape && {\n          maxWidth: '100%',\n        },\n        !isLandscape && {\n          maxHeight: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isCenterCover && [\n        classNames.imageCenterCover,\n        isLandscape && {\n          maxHeight: '100%',\n        },\n        !isLandscape && {\n          maxWidth: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isNone && [\n        classNames.imageNone,\n        {\n          width: 'auto',\n          height: 'auto',\n        },\n      ],\n      isNotImageFit && [\n        !!width &&\n          !height && {\n            height: 'auto',\n            width: '100%',\n          },\n        !width &&\n          !!height && {\n            height: '100%',\n            width: 'auto',\n          },\n        !!width &&\n          !!height && {\n            height: '100%',\n            width: '100%',\n          },\n      ],\n      isLandscape && classNames.imageLandscape,\n      !isLandscape && classNames.imagePortrait,\n      !isLoaded && 'is-notLoaded',\n      shouldFadeIn && 'is-fadeIn',\n      isError && 'is-error',\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { ImageBase } from './Image.base';\nimport { getStyles } from './Image.styles';\nimport type { IImageProps, IImageStyleProps, IImageStyles } from './Image.types';\n\nexport const Image: React.FunctionComponent<IImageProps> = styled<IImageProps, IImageStyleProps, IImageStyles>(\n  ImageBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Image',\n  },\n  true,\n);\nImage.displayName = 'Image';\n","import * as React from 'react';\nimport type { IStyle, ITheme } from '../../Styling';\nimport type { IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * {@docCategory Image}\n */\nexport interface IImage {}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageProps extends React.ImgHTMLAttributes<HTMLImageElement>, React.RefAttributes<HTMLImageElement> {\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IImageStyleProps, IImageStyles>;\n\n  /**\n   * Theme provided by HOC.\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional css class to apply to the Component\n   * @defaultvalue undefined\n   */\n  className?: string;\n\n  /**\n   * If true, fades the image in when loaded.\n   * @defaultvalue true\n   */\n  shouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables shouldFadeIn.\n   * @defaultvalue false;\n   */\n  shouldStartVisible?: boolean;\n\n  /**\n   * Used to determine how the image is scaled and cropped to fit the frame.\n   *\n   * @defaultvalue If both dimensions are provided, then the image is fit using `ImageFit.scale`.\n   * Otherwise, the image won't be scaled or cropped.\n   */\n  imageFit?: ImageFit;\n\n  /**\n   * @deprecated Not used. Use `onLoadingStateChange` and re-render the Image with a different src.\n   */\n  errorSrc?: string;\n\n  /**\n   * If true, the image frame will expand to fill its parent container.\n   */\n  maximizeFrame?: boolean;\n\n  /**\n   * Optional callback method for when the image load state has changed.\n   * The 'loadState' parameter indicates the current state of the Image.\n   */\n  onLoadingStateChange?: (loadState: ImageLoadState) => void;\n\n  /**\n   * Specifies the cover style to be used for this image. If not\n   * specified, this will be dynamically calculated based on the\n   * aspect ratio for the image.\n   */\n  coverStyle?: ImageCoverStyle;\n\n  /**\n   * Allows for browser-level image lazy-loading.\n   */\n  loading?: 'lazy' | 'eager';\n}\n\n/**\n * The possible methods that can be used to fit the image.\n * {@docCategory Image}\n */\nexport enum ImageFit {\n  /**\n   * The image is not scaled. The image is centered and cropped within the content box.\n   */\n  center = 0,\n\n  /**\n   * The image is scaled to maintain its aspect ratio while being fully contained within the frame. The image will\n   * be centered horizontally and vertically within the frame. The space in the top and bottom or in the sides of\n   * the frame will be empty depending on the difference in aspect ratio between the image and the frame.\n   */\n  contain = 1,\n\n  /**\n   * The image is scaled to maintain its aspect ratio while filling the frame. Portions of the image will be cropped\n   * from the top and bottom, or the sides, depending on the difference in aspect ratio between the image and the frame.\n   */\n  cover = 2,\n\n  /**\n   * Neither the image nor the frame are scaled. If their sizes do not match, the image will either be cropped or the\n   * frame will have empty space.\n   */\n  none = 3,\n\n  /**\n   * The image will be centered horizontally and vertically within the frame and maintains its aspect ratio. It will\n   * behave as ImageFit.center if the image's natural height or width is less than the Image frame's height or width,\n   * but if both natural height and width are larger than the frame it will behave as ImageFit.cover.\n   */\n  centerCover = 4,\n\n  /**\n   * The image will be centered horizontally and vertically within the frame and maintains its aspect ratio. It will\n   * behave as ImageFit.center if the image's natural height and width is less than the Image frame's height and width,\n   * but if either natural height or width are larger than the frame it will behave as ImageFit.contain.\n   */\n  centerContain = 5,\n}\n\n/**\n * The cover style to be used on the image\n * {@docCategory Image}\n */\nexport enum ImageCoverStyle {\n  /**\n   * The image will be shown at 100% height of container and the width will be scaled accordingly\n   */\n  landscape = 0,\n\n  /**\n   * The image will be shown at 100% width of container and the height will be scaled accordingly\n   */\n  portrait = 1,\n}\n\n/**\n * {@docCategory Image}\n */\nexport enum ImageLoadState {\n  /**\n   * The image has not yet been loaded, and there is no error yet.\n   */\n  notLoaded = 0,\n\n  /**\n   * The image has been loaded successfully.\n   */\n  loaded = 1,\n\n  /**\n   * An error has been encountered while loading the image.\n   */\n  error = 2,\n\n  /**\n   * @deprecated Not used. Use `onLoadingStateChange` and re-render the Image with a different src.\n   */\n  errorLoaded = 3,\n}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageStyleProps {\n  /**\n   * Accept theme prop.\n   */\n  theme: ITheme;\n\n  /**\n   * Accept custom classNames\n   */\n  className?: string;\n\n  /**\n   * If true, the image frame will expand to fill its parent container.\n   */\n  maximizeFrame?: boolean;\n\n  /**\n   * If true, the image is loaded\n   */\n  isLoaded?: boolean;\n\n  /**\n   * If true, fades the image in when loaded.\n   * @defaultvalue true\n   */\n  shouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables shouldFadeIn.\n   * @defaultvalue false;\n   */\n  shouldStartVisible?: boolean;\n\n  /**\n   * If true the image is coverStyle landscape instead of portrait\n   */\n  isLandscape?: boolean;\n\n  /**\n   * ImageFit booleans for center, cover, contain, centerContain, centerCover, none\n   */\n  isCenter?: boolean;\n  isContain?: boolean;\n  isCover?: boolean;\n  isCenterContain?: boolean;\n  isCenterCover?: boolean;\n  isNone?: boolean;\n\n  /**\n   * if true image load is in error\n   */\n  isError?: boolean;\n\n  /**\n   * if true, imageFit is undefined\n   */\n  isNotImageFit?: boolean;\n\n  /**\n   * Image width value\n   */\n  width?: number | string;\n\n  /**\n   * Image height value\n   */\n  height?: number | string;\n}\n\n/**\n * {@docCategory Image}\n */\nexport interface IImageStyles {\n  /**\n   * Style set for the root div element.\n   */\n  root: IStyle;\n  /**\n   * Style set for the img element.\n   */\n  image: IStyle;\n}\n","import * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nimport type { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nconst getClassNames = classNamesFunction<ILabelStyleProps, ILabelStyles>({\n  // Label is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Label.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class LabelBase extends React.Component<ILabelProps, {}> {\n  public render(): JSX.Element {\n    const { as: RootType = 'label', children, className, disabled, styles, required, theme } = this.props;\n    const classNames = getClassNames(styles, {\n      className,\n      disabled,\n      required,\n      theme: theme!,\n    });\n    return (\n      <RootType {...getNativeProps(this.props, divProperties)} className={classNames.root}>\n        {children}\n      </RootType>\n    );\n  }\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { LabelBase } from './Label.base';\nimport { getStyles } from './Label.styles';\nimport type { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nexport const Label: React.FunctionComponent<ILabelProps> = styled<ILabelProps, ILabelStyleProps, ILabelStyles>(\n  LabelBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Label',\n  },\n);\n","import { HighContrastSelector, FontWeights, getHighContrastNoAdjustStyle } from '../../Styling';\nimport type { ILabelStyleProps, ILabelStyles } from './Label.types';\n\nexport const getStyles = (props: ILabelStyleProps): ILabelStyles => {\n  const { theme, className, disabled, required } = props;\n  const { semanticColors } = theme;\n\n  // Tokens\n  const labelFontWeight = FontWeights.semibold;\n  const labelColor = semanticColors.bodyText;\n  const labelDisabledColor = semanticColors.disabledBodyText;\n  const labelRequiredStarColor = semanticColors.errorText;\n\n  return {\n    root: [\n      'ms-Label',\n      theme.fonts.medium,\n      {\n        fontWeight: labelFontWeight,\n        color: labelColor,\n        boxSizing: 'border-box',\n        boxShadow: 'none',\n        margin: 0,\n        display: 'block',\n        padding: '5px 0',\n        wordWrap: 'break-word',\n        overflowWrap: 'break-word',\n      },\n      disabled && {\n        color: labelDisabledColor,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      required && {\n        selectors: {\n          '::after': {\n            content: `' *'`,\n            color: labelRequiredStarColor,\n            paddingRight: 12,\n          },\n        },\n      },\n      className,\n    ],\n  };\n};\n","import * as React from 'react';\nimport { Label } from '../../Label';\nimport { Icon } from '../../Icon';\nimport {\n  Async,\n  classNamesFunction,\n  DelayedRender,\n  getId,\n  getNativeProps,\n  getWindow,\n  initializeComponentRef,\n  inputProperties,\n  isControlled,\n  isIE11,\n  textAreaProperties,\n  warn,\n  warnControlledUsage,\n  warnMutuallyExclusive,\n} from '../../Utilities';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { ILabelStyleProps, ILabelStyles } from '../../Label';\nimport type { IStyleFunctionOrObject } from '../../Utilities';\nimport type { ITextField, ITextFieldProps, ITextFieldStyleProps, ITextFieldStyles } from './TextField.types';\n\nconst getClassNames = classNamesFunction<ITextFieldStyleProps, ITextFieldStyles>();\n\n/** @internal */\nexport interface ITextFieldState {\n  /** The currently displayed value if uncontrolled. */\n  uncontrolledValue: string | undefined;\n\n  /** Is true when the control has focus. */\n  isFocused?: boolean;\n\n  /**\n   * Dynamic error message returned by `onGetErrorMessage`.\n   * Use `this._errorMessage` to get the actual current error message.\n   */\n  errorMessage: string | JSX.Element;\n\n  /**\n   * Whether this field has `type='password'` and `canRevealPassword=true`, and the password is\n   * currently being revealed.\n   */\n  isRevealingPassword?: boolean;\n}\n\n/** @internal */\nexport interface ITextFieldSnapshot {\n  /**\n   * If set, the text field is changing between single- and multi-line, so we'll need to reset\n   * selection/cursor after the change completes.\n   */\n  selection?: [number | null, number | null];\n}\n\nconst DEFAULT_STATE_VALUE = '';\nconst COMPONENT_NAME = 'TextField';\n\nconst REVEAL_ICON_NAME = 'RedEye';\nconst HIDE_ICON_NAME = 'Hide';\n\nexport class TextFieldBase\n  extends React.Component<ITextFieldProps, ITextFieldState, ITextFieldSnapshot>\n  implements ITextField {\n  public static defaultProps: ITextFieldProps = {\n    resizable: true,\n    deferredValidationTime: 200,\n    validateOnLoad: true,\n  };\n\n  /** Fallback ID if none is provided in props. Access proper value via `this._id`. */\n  private _fallbackId: string;\n  private _descriptionId: string;\n  private _labelId: string;\n  private _prefixId: string;\n  private _suffixId: string;\n  private _delayedValidate: (value: string | undefined) => void;\n  private _lastValidation: number;\n  private _latestValidateValue: string | undefined;\n  private _hasWarnedNullValue: boolean | undefined;\n  private _textElement = React.createRef<HTMLTextAreaElement | HTMLInputElement>();\n  private _classNames: IProcessedStyleSet<ITextFieldStyles>;\n  private _async: Async;\n  /** Most recent value from a change or input event, to help avoid processing events twice */\n  private _lastChangeValue: string | undefined;\n\n  public constructor(props: ITextFieldProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnMutuallyExclusive(COMPONENT_NAME, props, {\n        errorMessage: 'onGetErrorMessage',\n      });\n    }\n\n    this._fallbackId = getId(COMPONENT_NAME);\n    this._descriptionId = getId(COMPONENT_NAME + 'Description');\n    this._labelId = getId(COMPONENT_NAME + 'Label');\n    this._prefixId = getId(COMPONENT_NAME + 'Prefix');\n    this._suffixId = getId(COMPONENT_NAME + 'Suffix');\n\n    this._warnControlledUsage();\n\n    let { defaultValue = DEFAULT_STATE_VALUE } = props;\n    if (typeof defaultValue === 'number') {\n      // This isn't allowed per the props, but happens anyway.\n      defaultValue = String(defaultValue);\n    }\n    this.state = {\n      uncontrolledValue: this._isControlled ? undefined : defaultValue,\n      isFocused: false,\n      errorMessage: '',\n    };\n\n    this._delayedValidate = this._async.debounce(this._validate, this.props.deferredValidationTime);\n    this._lastValidation = 0;\n  }\n\n  /**\n   * Gets the current value of the text field.\n   */\n  public get value(): string | undefined {\n    return _getValue(this.props, this.state);\n  }\n\n  public componentDidMount(): void {\n    this._adjustInputHeight();\n\n    if (this.props.validateOnLoad) {\n      this._validate(this.value);\n    }\n  }\n\n  public componentWillUnmount() {\n    this._async.dispose();\n  }\n\n  public getSnapshotBeforeUpdate(prevProps: ITextFieldProps, prevState: ITextFieldState): ITextFieldSnapshot | null {\n    return {\n      selection: [this.selectionStart, this.selectionEnd],\n    };\n  }\n\n  public componentDidUpdate(\n    prevProps: ITextFieldProps,\n    prevState: ITextFieldState,\n    snapshot: ITextFieldSnapshot,\n  ): void {\n    const props = this.props;\n    const { selection = [null, null] } = snapshot || {};\n    const [start, end] = selection;\n\n    if (!!prevProps.multiline !== !!props.multiline && prevState.isFocused) {\n      // The text field has just changed between single- and multi-line, so we need to reset focus\n      // and selection/cursor.\n      this.focus();\n      if (start !== null && end !== null && start >= 0 && end >= 0) {\n        this.setSelectionRange(start, end);\n      }\n    }\n\n    if (prevProps.value !== props.value) {\n      // Only if the value in props changed, reset the record of the last value seen by a\n      // change/input event (don't do this if the value in state changed, since at least in tests\n      // the state update may happen before the second event in a series)\n      this._lastChangeValue = undefined;\n    }\n\n    const prevValue = _getValue(prevProps, prevState);\n    const value = this.value;\n    if (prevValue !== value) {\n      // Handle controlled/uncontrolled warnings and status\n      this._warnControlledUsage(prevProps);\n\n      // Clear error message if needed\n      // TODO: is there any way to do this without an extra render?\n      if (this.state.errorMessage && !props.errorMessage) {\n        this.setState({ errorMessage: '' });\n      }\n\n      // Adjust height if needed based on new value\n      this._adjustInputHeight();\n\n      // TODO: #5875 added logic to trigger validation in componentWillReceiveProps and other places.\n      // This seems a bit odd and hard to integrate with the new approach.\n      // (Starting to think we should just put the validation logic in a separate wrapper component...?)\n      if (_shouldValidateAllChanges(props)) {\n        this._delayedValidate(value);\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      borderless,\n      className,\n      disabled,\n      invalid,\n      iconProps,\n      inputClassName,\n      label,\n      multiline,\n      required,\n      underlined,\n      prefix,\n      resizable,\n      suffix,\n      theme,\n      styles,\n      autoAdjustHeight,\n      canRevealPassword,\n      revealPasswordAriaLabel,\n      type,\n      onRenderPrefix = this._onRenderPrefix,\n      onRenderSuffix = this._onRenderSuffix,\n      onRenderLabel = this._onRenderLabel,\n      onRenderDescription = this._onRenderDescription,\n    } = this.props;\n    const { isFocused, isRevealingPassword } = this.state;\n    const errorMessage = this._errorMessage;\n    const isInvalid = typeof invalid === 'boolean' ? invalid : !!errorMessage;\n\n    const hasRevealButton = !!canRevealPassword && type === 'password' && _browserNeedsRevealButton();\n\n    const classNames = (this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      disabled,\n      focused: isFocused,\n      required,\n      multiline,\n      hasLabel: !!label,\n      hasErrorMessage: isInvalid,\n      borderless,\n      resizable,\n      hasIcon: !!iconProps,\n      underlined,\n      inputClassName,\n      autoAdjustHeight,\n      hasRevealButton,\n    }));\n\n    return (\n      // eslint-disable-next-line deprecation/deprecation\n      <div ref={this.props.elementRef} className={classNames.root}>\n        <div className={classNames.wrapper}>\n          {onRenderLabel(this.props, this._onRenderLabel)}\n          <div className={classNames.fieldGroup}>\n            {(prefix !== undefined || this.props.onRenderPrefix) && (\n              <div className={classNames.prefix} id={this._prefixId}>\n                {onRenderPrefix(this.props, this._onRenderPrefix)}\n              </div>\n            )}\n            {multiline ? this._renderTextArea() : this._renderInput()}\n            {iconProps && <Icon className={classNames.icon} {...iconProps} />}\n            {hasRevealButton && (\n              // Explicitly set type=\"button\" since the default button type within a form is \"submit\"\n              <button\n                aria-label={revealPasswordAriaLabel}\n                className={classNames.revealButton}\n                onClick={this._onRevealButtonClick}\n                aria-pressed={!!isRevealingPassword}\n                type=\"button\"\n              >\n                <span className={classNames.revealSpan}>\n                  <Icon\n                    className={classNames.revealIcon}\n                    iconName={isRevealingPassword ? HIDE_ICON_NAME : REVEAL_ICON_NAME}\n                  />\n                </span>\n              </button>\n            )}\n            {(suffix !== undefined || this.props.onRenderSuffix) && (\n              <div className={classNames.suffix} id={this._suffixId}>\n                {onRenderSuffix(this.props, this._onRenderSuffix)}\n              </div>\n            )}\n          </div>\n        </div>\n        {this._isDescriptionAvailable && (\n          <span id={this._descriptionId}>\n            {onRenderDescription(this.props, this._onRenderDescription)}\n            {errorMessage && (\n              <div role=\"alert\">\n                <DelayedRender>{this._renderErrorMessage()}</DelayedRender>\n              </div>\n            )}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Sets focus on the text field\n   */\n  public focus() {\n    if (this._textElement.current) {\n      this._textElement.current.focus();\n    }\n  }\n\n  /**\n   * Blurs the text field.\n   */\n  public blur() {\n    if (this._textElement.current) {\n      this._textElement.current.blur();\n    }\n  }\n\n  /**\n   * Selects the text field\n   */\n  public select() {\n    if (this._textElement.current) {\n      this._textElement.current.select();\n    }\n  }\n\n  /**\n   * Sets the selection start of the text field to a specified value\n   */\n  public setSelectionStart(value: number): void {\n    if (this._textElement.current) {\n      this._textElement.current.selectionStart = value;\n    }\n  }\n\n  /**\n   * Sets the selection end of the text field to a specified value\n   */\n  public setSelectionEnd(value: number): void {\n    if (this._textElement.current) {\n      this._textElement.current.selectionEnd = value;\n    }\n  }\n\n  /**\n   * Gets the selection start of the text field\n   */\n  public get selectionStart(): number | null {\n    return this._textElement.current ? this._textElement.current.selectionStart : -1;\n  }\n\n  /**\n   * Gets the selection end of the text field\n   */\n  public get selectionEnd(): number | null {\n    return this._textElement.current ? this._textElement.current.selectionEnd : -1;\n  }\n\n  /**\n   * Sets the start and end positions of a selection in a text field.\n   * @param start - Index of the start of the selection.\n   * @param end - Index of the end of the selection.\n   */\n  public setSelectionRange(start: number, end: number): void {\n    if (this._textElement.current) {\n      (this._textElement.current as HTMLInputElement).setSelectionRange(start, end);\n    }\n  }\n\n  private _warnControlledUsage(prevProps?: ITextFieldProps): void {\n    // Show warnings if props are being used in an invalid way\n    warnControlledUsage({\n      componentId: this._id,\n      componentName: COMPONENT_NAME,\n      props: this.props,\n      oldProps: prevProps,\n      valueProp: 'value',\n      defaultValueProp: 'defaultValue',\n      onChangeProp: 'onChange',\n      readOnlyProp: 'readOnly',\n    });\n\n    if (this.props.value === null && !this._hasWarnedNullValue) {\n      this._hasWarnedNullValue = true;\n      warn(\n        `Warning: 'value' prop on '${COMPONENT_NAME}' should not be null. Consider using an ` +\n          'empty string to clear the component or undefined to indicate an uncontrolled component.',\n      );\n    }\n  }\n\n  /** Returns `props.id` if available, or a fallback if not. */\n  private get _id(): string {\n    return this.props.id || this._fallbackId;\n  }\n\n  private get _isControlled(): boolean {\n    return isControlled(this.props, 'value');\n  }\n\n  private _onFocus = (ev: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus(ev);\n    }\n\n    this.setState({ isFocused: true }, () => {\n      if (this.props.validateOnFocusIn) {\n        this._validate(this.value);\n      }\n    });\n  };\n\n  private _onBlur = (ev: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n\n    this.setState({ isFocused: false }, () => {\n      if (this.props.validateOnFocusOut) {\n        this._validate(this.value);\n      }\n    });\n  };\n\n  private _onRenderLabel = (props: ITextFieldProps): JSX.Element | null => {\n    const { label, required } = props;\n    // IProcessedStyleSet definition requires casting for what Label expects as its styles prop\n    const labelStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.label as IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles>)\n      : undefined;\n\n    if (label) {\n      return (\n        <Label required={required} htmlFor={this._id} styles={labelStyles} disabled={props.disabled} id={this._labelId}>\n          {props.label}\n        </Label>\n      );\n    }\n    return null;\n  };\n\n  private _onRenderDescription = (props: ITextFieldProps): JSX.Element | null => {\n    if (props.description) {\n      return <span className={this._classNames.description}>{props.description}</span>;\n    }\n    return null;\n  };\n\n  private _onRenderPrefix(props: ITextFieldProps): JSX.Element {\n    const { prefix } = props;\n    return <span style={{ paddingBottom: '1px' }}>{prefix}</span>;\n  }\n\n  private _onRenderSuffix(props: ITextFieldProps): JSX.Element {\n    const { suffix } = props;\n    return <span style={{ paddingBottom: '1px' }}>{suffix}</span>;\n  }\n\n  /**\n   * Current error message from either `props.errorMessage` or the result of `props.onGetErrorMessage`.\n   *\n   * - If there is no validation error or we have not validated the input value, errorMessage is an empty string.\n   * - If we have done the validation and there is validation error, errorMessage is the validation error message.\n   */\n  private get _errorMessage(): string | JSX.Element {\n    const { errorMessage = this.state.errorMessage } = this.props;\n    return errorMessage || '';\n  }\n\n  /**\n   * Renders error message based on the type of the message.\n   *\n   * - If error message is string, it will render using the built in styles.\n   * - If error message is an element, user has full control over how it's rendered.\n   */\n  private _renderErrorMessage(): JSX.Element | null {\n    const errorMessage = this._errorMessage;\n\n    return errorMessage ? (\n      typeof errorMessage === 'string' ? (\n        <p className={this._classNames.errorMessage}>\n          <span data-automation-id=\"error-message\">{errorMessage}</span>\n        </p>\n      ) : (\n        <div className={this._classNames.errorMessage} data-automation-id=\"error-message\">\n          {errorMessage}\n        </div>\n      )\n    ) : null;\n  }\n\n  /**\n   * If a custom description render function is supplied then treat description as always available.\n   * Otherwise defer to the presence of description or error message text.\n   */\n  private get _isDescriptionAvailable(): boolean {\n    const props = this.props;\n    return !!(props.onRenderDescription || props.description || this._errorMessage);\n  }\n\n  private _renderTextArea(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\n    const { invalid = !!this._errorMessage } = this.props;\n    const textAreaProps = getNativeProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>>(\n      this.props,\n      textAreaProperties,\n      ['defaultValue'],\n    );\n    const ariaLabelledBy = this.props['aria-labelledby'] || (this.props.label ? this._labelId : undefined);\n    return (\n      <textarea\n        id={this._id}\n        {...textAreaProps}\n        ref={this._textElement as React.RefObject<HTMLTextAreaElement>}\n        value={this.value || ''}\n        onInput={this._onInputChange}\n        onChange={this._onInputChange}\n        className={this._classNames.field}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby']}\n        aria-invalid={invalid}\n        aria-label={this.props.ariaLabel}\n        readOnly={this.props.readOnly}\n        onFocus={this._onFocus}\n        onBlur={this._onBlur}\n      />\n    );\n  }\n\n  private _renderInput(): JSX.Element | null {\n    const {\n      ariaLabel,\n      invalid = !!this._errorMessage,\n      onRenderPrefix,\n      onRenderSuffix,\n      prefix,\n      suffix,\n      type = 'text',\n      label,\n    } = this.props;\n\n    // build aria-labelledby list from label, prefix, and suffix\n    const labelIds = [];\n    label && labelIds.push(this._labelId);\n    (prefix !== undefined || onRenderPrefix) && labelIds.push(this._prefixId);\n    (suffix !== undefined || onRenderSuffix) && labelIds.push(this._suffixId);\n\n    const inputProps: React.InputHTMLAttributes<HTMLInputElement> & React.RefAttributes<HTMLInputElement> = {\n      type: this.state.isRevealingPassword ? 'text' : type,\n      id: this._id,\n      ...getNativeProps(this.props, inputProperties, ['defaultValue', 'type']),\n      'aria-labelledby': this.props['aria-labelledby'] || (labelIds.length > 0 ? labelIds.join(' ') : undefined),\n      ref: this._textElement as React.RefObject<HTMLInputElement>,\n      value: this.value || '',\n      onInput: this._onInputChange,\n      onChange: this._onInputChange,\n      className: this._classNames.field,\n      'aria-label': ariaLabel,\n      'aria-describedby': this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby'],\n      'aria-invalid': invalid,\n      onFocus: this._onFocus,\n      onBlur: this._onBlur,\n    };\n\n    const defaultRender = (updatedInputProps: React.InputHTMLAttributes<HTMLInputElement>) => {\n      return <input {...updatedInputProps} />;\n    };\n    const onRenderInput = this.props.onRenderInput || defaultRender;\n    return onRenderInput(inputProps, defaultRender);\n  }\n\n  private _onRevealButtonClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    this.setState(prevState => ({ isRevealingPassword: !prevState.isRevealingPassword }));\n  };\n\n  private _onInputChange = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    // Previously, we needed to call both onInput and onChange due to some weird IE/React issues,\n    // which have *probably* been fixed now:\n    // - https://github.com/microsoft/fluentui/issues/744 (likely fixed)\n    // - https://github.com/microsoft/fluentui/issues/824 (confirmed fixed)\n\n    // TODO (Fabric 8?) - Switch to calling only onChange. This switch is pretty disruptive for\n    // tests (ours and maybe consumers' too), so it seemed best to do the switch in a major bump.\n\n    const element = event.target as HTMLInputElement;\n    const value = element.value;\n    // Ignore this event if any of the following are true:\n    // - the value is undefined (in case one of the IE bugs comes back)\n    // - it's a duplicate event (important since onInputChange is called twice per actual user event)\n    // - it's the same as the previous value\n    const previousValue = _getValue(this.props, this.state) || '';\n    if (value === undefined || value === this._lastChangeValue || value === previousValue) {\n      this._lastChangeValue = undefined;\n      return;\n    }\n    this._lastChangeValue = value;\n\n    this.props.onChange?.(event, value);\n\n    if (!this._isControlled) {\n      // ONLY if this is an uncontrolled component, update the displayed value.\n      // (Controlled components must update the `value` prop from `onChange`.)\n      this.setState({ uncontrolledValue: value });\n    }\n  };\n\n  private _validate(value: string | undefined): void {\n    // In case _validate is called again while validation promise is executing\n    if (this._latestValidateValue === value && _shouldValidateAllChanges(this.props)) {\n      return;\n    }\n\n    this._latestValidateValue = value;\n    const onGetErrorMessage = this.props.onGetErrorMessage;\n    const result = onGetErrorMessage && onGetErrorMessage(value || '');\n\n    if (result !== undefined) {\n      if (typeof result === 'string' || !('then' in result)) {\n        this.setState({ errorMessage: result });\n        this._notifyAfterValidate(value, result);\n      } else {\n        const currentValidation: number = ++this._lastValidation;\n\n        result.then((errorMessage: string | JSX.Element) => {\n          if (currentValidation === this._lastValidation) {\n            this.setState({ errorMessage });\n          }\n          this._notifyAfterValidate(value, errorMessage);\n        });\n      }\n    } else {\n      this._notifyAfterValidate(value, '');\n    }\n  }\n\n  private _notifyAfterValidate(value: string | undefined, errorMessage: string | JSX.Element): void {\n    if (value === this.value && this.props.onNotifyValidationResult) {\n      this.props.onNotifyValidationResult(errorMessage, value);\n    }\n  }\n\n  private _adjustInputHeight(): void {\n    if (this._textElement.current && this.props.autoAdjustHeight && this.props.multiline) {\n      const textField = this._textElement.current;\n      textField.style.height = '';\n      textField.style.height = textField.scrollHeight + 'px';\n    }\n  }\n}\n\n/** Get the value from the given state and props (converting from number to string if needed) */\nfunction _getValue(props: ITextFieldProps, state: ITextFieldState): string | undefined {\n  const { value = state.uncontrolledValue } = props;\n  if (typeof value === 'number') {\n    // not allowed per typings, but happens anyway\n    return String(value);\n  }\n  return value;\n}\n\n/**\n * If `validateOnFocusIn` or `validateOnFocusOut` is true, validation should run **only** on that event.\n * Otherwise, validation should run on every change.\n */\nfunction _shouldValidateAllChanges(props: ITextFieldProps): boolean {\n  return !(props.validateOnFocusIn || props.validateOnFocusOut);\n}\n\n// Only calculate this once across all TextFields, since will stay the same\nlet __browserNeedsRevealButton: boolean | undefined;\n\nfunction _browserNeedsRevealButton() {\n  if (typeof __browserNeedsRevealButton !== 'boolean') {\n    const win = getWindow();\n\n    if (win?.navigator) {\n      // Edge, Chromium Edge\n      const isEdge = /^Edg/.test(win.navigator.userAgent || '');\n\n      __browserNeedsRevealButton = !(isIE11() || isEdge);\n    } else {\n      __browserNeedsRevealButton = true;\n    }\n  }\n  return __browserNeedsRevealButton;\n}\n","import { getWindow } from './dom/getWindow';\n\nexport const isIE11 = (): boolean => {\n  const win = getWindow();\n\n  if (!win?.navigator?.userAgent) {\n    return false;\n  }\n\n  return win.navigator.userAgent.indexOf('rv:11.0') > -1;\n};\n","/**\n * Determines whether a component is controlled.\n * @param props - Component props\n * @param valueProp - Prop containing the controlled value\n * @returns true if controlled, false if uncontrolled\n */\nexport function isControlled<P>(props: P, valueProp: keyof P): boolean {\n  // React's built-in <input> considers a prop to be provided if its value is non-null/undefined.\n  // Mirror that behavior here (rather than checking for just undefined).\n  return props[valueProp] !== undefined && props[valueProp] !== null;\n}\n","import {\n  AnimationClassNames,\n  getFocusStyle,\n  getGlobalClassNames,\n  getInputFocusStyle,\n  HighContrastSelector,\n  normalize,\n  getPlaceholderStyles,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport type { IStyle } from '../../Styling';\nimport type { ILabelStyles, ILabelStyleProps } from '../../Label';\nimport type { ITextFieldStyleProps, ITextFieldStyles } from './TextField.types';\nimport type { IStyleFunctionOrObject } from '@fluentui/utilities';\n\nconst globalClassNames = {\n  root: 'ms-TextField',\n  description: 'ms-TextField-description',\n  errorMessage: 'ms-TextField-errorMessage',\n  field: 'ms-TextField-field',\n  fieldGroup: 'ms-TextField-fieldGroup',\n  prefix: 'ms-TextField-prefix',\n  suffix: 'ms-TextField-suffix',\n  wrapper: 'ms-TextField-wrapper',\n  revealButton: 'ms-TextField-reveal',\n\n  multiline: 'ms-TextField--multiline',\n  borderless: 'ms-TextField--borderless',\n  underlined: 'ms-TextField--underlined',\n  unresizable: 'ms-TextField--unresizable',\n\n  required: 'is-required',\n  disabled: 'is-disabled',\n  active: 'is-active',\n};\n\nfunction getLabelStyles(props: ITextFieldStyleProps): IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles> {\n  const { underlined, disabled, focused, theme } = props;\n  const { palette, fonts } = theme;\n\n  return () => ({\n    root: [\n      underlined &&\n        disabled && {\n          color: palette.neutralTertiary,\n        },\n      underlined && {\n        fontSize: fonts.medium.fontSize,\n        marginRight: 8,\n        paddingLeft: 12,\n        paddingRight: 0,\n        lineHeight: '22px',\n        height: 32,\n      },\n      underlined &&\n        focused && {\n          selectors: {\n            [HighContrastSelector]: {\n              height: 31, // -1px to prevent jumpiness in HC with the increased border-width to 2px\n            },\n          },\n        },\n    ],\n  });\n}\n\nexport function getStyles(props: ITextFieldStyleProps): ITextFieldStyles {\n  const {\n    theme,\n    className,\n    disabled,\n    focused,\n    required,\n    multiline,\n    hasLabel,\n    borderless,\n    underlined,\n    hasIcon,\n    resizable,\n    hasErrorMessage,\n    inputClassName,\n    autoAdjustHeight,\n    hasRevealButton,\n  } = props;\n\n  const { semanticColors, effects, fonts } = theme;\n\n  const classNames = getGlobalClassNames(globalClassNames, theme);\n\n  const fieldPrefixSuffix: IStyle = {\n    // Suffix/Prefix are not editable so the disabled slot perfectly fits.\n    background: semanticColors.disabledBackground,\n    color: !disabled ? semanticColors.inputPlaceholderText : semanticColors.disabledText,\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 10px',\n    lineHeight: 1,\n    whiteSpace: 'nowrap',\n    flexShrink: 0,\n    selectors: {\n      [HighContrastSelector]: {\n        background: 'Window',\n        color: disabled ? 'GrayText' : 'WindowText',\n      },\n    },\n  };\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = [\n    {\n      color: semanticColors.inputPlaceholderText,\n      opacity: 1,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  ];\n\n  const disabledPlaceholderStyles: IStyle = {\n    color: semanticColors.disabledText,\n    selectors: {\n      [HighContrastSelector]: {\n        color: 'GrayText',\n      },\n    },\n  };\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      required && classNames.required,\n      disabled && classNames.disabled,\n      focused && classNames.active,\n      multiline && classNames.multiline,\n      borderless && classNames.borderless,\n      underlined && classNames.underlined,\n      normalize,\n      {\n        position: 'relative',\n      },\n      className,\n    ],\n    wrapper: [\n      classNames.wrapper,\n\n      underlined && [\n        {\n          display: 'flex',\n          borderBottom: `1px solid ${!hasErrorMessage ? semanticColors.inputBorder : semanticColors.errorText}`,\n          width: '100%',\n        },\n        disabled && {\n          borderBottomColor: semanticColors.disabledBackground,\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n              ...getHighContrastNoAdjustStyle(),\n            },\n          },\n        },\n        !disabled && {\n          selectors: {\n            ':hover': {\n              borderBottomColor: !hasErrorMessage ? semanticColors.inputBorderHovered : semanticColors.errorText,\n              selectors: {\n                [HighContrastSelector]: {\n                  borderBottomColor: 'Highlight',\n                  ...getHighContrastNoAdjustStyle(),\n                },\n              },\n            },\n          },\n        },\n        focused && [\n          {\n            position: 'relative',\n          },\n          getInputFocusStyle(\n            !hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText,\n            0,\n            'borderBottom',\n          ),\n        ],\n      ],\n    ],\n    fieldGroup: [\n      classNames.fieldGroup,\n      normalize,\n      {\n        border: `1px solid ${semanticColors.inputBorder}`,\n        borderRadius: effects.roundedCorner2,\n        background: semanticColors.inputBackground,\n        cursor: 'text',\n        height: 32,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        position: 'relative',\n      },\n      multiline && {\n        minHeight: '60px',\n        height: 'auto',\n        display: 'flex',\n      },\n\n      !focused &&\n        !disabled && {\n          selectors: {\n            ':hover': {\n              borderColor: semanticColors.inputBorderHovered,\n              selectors: {\n                [HighContrastSelector]: {\n                  borderColor: 'Highlight',\n                  ...getHighContrastNoAdjustStyle(),\n                },\n              },\n            },\n          },\n        },\n\n      focused &&\n        !underlined &&\n        getInputFocusStyle(\n          !hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText,\n          effects.roundedCorner2,\n        ),\n      disabled && {\n        borderColor: semanticColors.disabledBackground,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n\n        cursor: 'default',\n      },\n      borderless && {\n        border: 'none',\n      },\n      borderless &&\n        focused && {\n          border: 'none',\n          selectors: {\n            ':after': {\n              border: 'none',\n            },\n          },\n        },\n      underlined && {\n        flex: '1 1 0px',\n        border: 'none',\n        textAlign: 'left',\n      },\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n\n      hasErrorMessage &&\n        !underlined && {\n          borderColor: semanticColors.errorText,\n          selectors: {\n            '&:hover': {\n              borderColor: semanticColors.errorText,\n            },\n          },\n        },\n      !hasLabel &&\n        required && {\n          selectors: {\n            ':before': {\n              content: `'*'`,\n              color: semanticColors.errorText,\n              position: 'absolute',\n              top: -5,\n              right: -10,\n            },\n            [HighContrastSelector]: {\n              selectors: {\n                ':before': {\n                  color: 'WindowText',\n                  right: -14, // moving the * 4 pixel to right to alleviate border clipping in HC mode.\n                },\n              },\n            },\n          },\n        },\n    ],\n    field: [\n      fonts.medium,\n      classNames.field,\n      normalize,\n      {\n        borderRadius: 0,\n        border: 'none',\n        background: 'none',\n        backgroundColor: 'transparent',\n        color: semanticColors.inputText,\n        padding: '0 8px',\n        width: '100%',\n        minWidth: 0,\n        textOverflow: 'ellipsis',\n        outline: 0,\n        selectors: {\n          '&:active, &:focus, &:hover': { outline: 0 },\n          '::-ms-clear': {\n            display: 'none',\n          },\n          [HighContrastSelector]: {\n            background: 'Window',\n            color: disabled ? 'GrayText' : 'WindowText',\n          },\n        },\n      },\n      getPlaceholderStyles(placeholderStyles),\n      multiline &&\n        !resizable && [\n          classNames.unresizable,\n          {\n            resize: 'none',\n          },\n        ],\n      multiline && {\n        minHeight: 'inherit',\n        lineHeight: 17,\n        flexGrow: 1,\n        paddingTop: 6,\n        paddingBottom: 6,\n        overflow: 'auto',\n        width: '100%',\n      },\n      multiline &&\n        autoAdjustHeight && {\n          overflow: 'hidden',\n        },\n      hasIcon &&\n        !hasRevealButton && {\n          paddingRight: 24,\n        },\n      multiline &&\n        hasIcon && {\n          paddingRight: 40,\n        },\n      disabled && [\n        {\n          backgroundColor: semanticColors.disabledBackground,\n          color: semanticColors.disabledText,\n          borderColor: semanticColors.disabledBackground,\n        },\n        getPlaceholderStyles(disabledPlaceholderStyles),\n      ],\n      underlined && {\n        textAlign: 'left',\n      },\n      focused &&\n        !borderless && {\n          selectors: {\n            [HighContrastSelector]: {\n              paddingLeft: 11,\n              paddingRight: 11,\n            },\n          },\n        },\n      focused &&\n        multiline &&\n        !borderless && {\n          selectors: {\n            [HighContrastSelector]: {\n              paddingTop: 4, // take into consideration the 2px increased border-width (not when borderless).\n            },\n          },\n        },\n      inputClassName,\n    ],\n    icon: [\n      multiline && {\n        paddingRight: 24,\n        alignItems: 'flex-end',\n      },\n      {\n        pointerEvents: 'none',\n        position: 'absolute',\n        bottom: 6,\n        right: 8,\n        top: 'auto',\n        fontSize: IconFontSizes.medium,\n        lineHeight: 18,\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n    description: [\n      classNames.description,\n      {\n        color: semanticColors.bodySubtext,\n        fontSize: fonts.xSmall.fontSize,\n      },\n    ],\n    errorMessage: [\n      classNames.errorMessage,\n      AnimationClassNames.slideDownIn20,\n      fonts.small,\n      {\n        color: semanticColors.errorText,\n        margin: 0,\n        paddingTop: 5,\n        display: 'flex',\n        alignItems: 'center',\n      },\n    ],\n    prefix: [classNames.prefix, fieldPrefixSuffix],\n    suffix: [classNames.suffix, fieldPrefixSuffix],\n    revealButton: [\n      classNames.revealButton,\n      'ms-Button',\n      'ms-Button--icon',\n      getFocusStyle(theme, { inset: 1 }),\n      {\n        height: 30,\n        width: 32,\n        border: 'none',\n        padding: '0px 4px',\n        backgroundColor: 'transparent',\n        color: semanticColors.link,\n        selectors: {\n          ':hover': {\n            outline: 0,\n            color: semanticColors.primaryButtonBackgroundHovered,\n            backgroundColor: semanticColors.buttonBackgroundHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n                color: 'Highlight',\n              },\n            },\n          },\n          ':focus': { outline: 0 },\n        },\n      },\n      hasIcon && {\n        marginRight: 28,\n      },\n    ],\n    revealSpan: {\n      display: 'flex',\n      height: '100%',\n      alignItems: 'center',\n    },\n    revealIcon: {\n      margin: '0px 4px',\n      pointerEvents: 'none',\n      bottom: 6,\n      right: 8,\n      top: 'auto',\n      fontSize: IconFontSizes.medium,\n      lineHeight: 18,\n    },\n    subComponentStyles: {\n      label: getLabelStyles(props),\n    },\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { TextFieldBase } from './TextField.base';\nimport { getStyles } from './TextField.styles';\nimport type { ITextFieldProps, ITextFieldStyles, ITextFieldStyleProps } from './TextField.types';\n\nexport const TextField: React.FunctionComponent<ITextFieldProps> = styled<\n  ITextFieldProps,\n  ITextFieldStyleProps,\n  ITextFieldStyles\n>(TextFieldBase, getStyles, undefined, {\n  scope: 'TextField',\n});\n\nexport type { ITextField } from './TextField.types';\n","import { getWindow } from './dom/getWindow';\n\ndeclare function setTimeout(cb: Function, delay: number): number;\ndeclare function setInterval(cb: Function, delay: number): number;\n\n/**\n * Bugs often appear in async code when stuff gets disposed, but async operations don't get canceled.\n * This Async helper class solves these issues by tying async code to the lifetime of a disposable object.\n *\n * Usage: Anything class extending from BaseModel can access this helper via this.async. Otherwise create a\n * new instance of the class and remember to call dispose() during your code's dispose handler.\n *\n * @public\n */\nexport class Async {\n  private _timeoutIds: { [id: number]: boolean } | null = null;\n  private _immediateIds: { [id: number]: boolean } | null = null;\n  private _intervalIds: { [id: number]: boolean } | null = null;\n  private _animationFrameIds: { [id: number]: boolean } | null = null;\n  private _isDisposed: boolean;\n  private _parent: object | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _onErrorHandler: ((e: any) => void) | undefined;\n  private _noop: () => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(parent?: object, onError?: (e: any) => void) {\n    this._isDisposed = false;\n    this._parent = parent || null;\n    this._onErrorHandler = onError;\n    this._noop = () => {\n      /* do nothing */\n    };\n  }\n\n  /**\n   * Dispose function, clears all async operations.\n   */\n  public dispose(): void {\n    let id;\n\n    this._isDisposed = true;\n    this._parent = null;\n\n    // Clear timeouts.\n    if (this._timeoutIds) {\n      for (id in this._timeoutIds) {\n        if (this._timeoutIds.hasOwnProperty(id)) {\n          this.clearTimeout(parseInt(id, 10));\n        }\n      }\n\n      this._timeoutIds = null;\n    }\n\n    // Clear immediates.\n    if (this._immediateIds) {\n      for (id in this._immediateIds) {\n        if (this._immediateIds.hasOwnProperty(id)) {\n          this.clearImmediate(parseInt(id, 10));\n        }\n      }\n\n      this._immediateIds = null;\n    }\n\n    // Clear intervals.\n    if (this._intervalIds) {\n      for (id in this._intervalIds) {\n        if (this._intervalIds.hasOwnProperty(id)) {\n          this.clearInterval(parseInt(id, 10));\n        }\n      }\n      this._intervalIds = null;\n    }\n\n    // Clear animation frames.\n    if (this._animationFrameIds) {\n      for (id in this._animationFrameIds) {\n        if (this._animationFrameIds.hasOwnProperty(id)) {\n          this.cancelAnimationFrame(parseInt(id, 10));\n        }\n      }\n\n      this._animationFrameIds = null;\n    }\n  }\n\n  /**\n   * SetTimeout override, which will auto cancel the timeout during dispose.\n   * @param callback - Callback to execute.\n   * @param duration - Duration in milliseconds.\n   * @returns The setTimeout id.\n   */\n  public setTimeout(callback: () => void, duration: number): number {\n    let timeoutId = 0;\n\n    if (!this._isDisposed) {\n      if (!this._timeoutIds) {\n        this._timeoutIds = {};\n      }\n\n      timeoutId = setTimeout(() => {\n        // Time to execute the timeout, enqueue it as a foreground task to be executed.\n\n        try {\n          // Now delete the record and call the callback.\n          if (this._timeoutIds) {\n            delete this._timeoutIds[timeoutId];\n          }\n          callback.apply(this._parent);\n        } catch (e) {\n          this._logError(e);\n        }\n      }, duration);\n\n      this._timeoutIds[timeoutId] = true;\n    }\n\n    return timeoutId;\n  }\n\n  /**\n   * Clears the timeout.\n   * @param id - Id to cancel.\n   */\n  public clearTimeout(id: number): void {\n    if (this._timeoutIds && this._timeoutIds[id]) {\n      clearTimeout(id);\n      delete this._timeoutIds[id];\n    }\n  }\n\n  /**\n   * SetImmediate override, which will auto cancel the immediate during dispose.\n   * @param callback - Callback to execute.\n   * @param targetElement - Optional target element to use for identifying the correct window.\n   * @returns The setTimeout id.\n   */\n  public setImmediate(callback: () => void, targetElement?: Element | null): number {\n    let immediateId = 0;\n    const win = getWindow(targetElement)!;\n\n    if (!this._isDisposed) {\n      if (!this._immediateIds) {\n        this._immediateIds = {};\n      }\n\n      let setImmediateCallback = () => {\n        // Time to execute the timeout, enqueue it as a foreground task to be executed.\n\n        try {\n          // Now delete the record and call the callback.\n          if (this._immediateIds) {\n            delete this._immediateIds[immediateId];\n          }\n          callback.apply(this._parent);\n        } catch (e) {\n          this._logError(e);\n        }\n      };\n\n      immediateId = win.setTimeout(setImmediateCallback, 0);\n\n      this._immediateIds[immediateId] = true;\n    }\n\n    return immediateId;\n  }\n\n  /**\n   * Clears the immediate.\n   * @param id - Id to cancel.\n   * @param targetElement - Optional target element to use for identifying the correct window.\n   */\n  public clearImmediate(id: number, targetElement?: Element | null): void {\n    const win = getWindow(targetElement)!;\n\n    if (this._immediateIds && this._immediateIds[id]) {\n      win.clearTimeout(id);\n      delete this._immediateIds[id];\n    }\n  }\n\n  /**\n   * SetInterval override, which will auto cancel the timeout during dispose.\n   * @param callback - Callback to execute.\n   * @param duration - Duration in milliseconds.\n   * @returns The setTimeout id.\n   */\n  public setInterval(callback: () => void, duration: number): number {\n    let intervalId = 0;\n\n    if (!this._isDisposed) {\n      if (!this._intervalIds) {\n        this._intervalIds = {};\n      }\n\n      intervalId = setInterval(() => {\n        // Time to execute the interval callback, enqueue it as a foreground task to be executed.\n        try {\n          callback.apply(this._parent);\n        } catch (e) {\n          this._logError(e);\n        }\n      }, duration);\n\n      this._intervalIds[intervalId] = true;\n    }\n\n    return intervalId;\n  }\n\n  /**\n   * Clears the interval.\n   * @param id - Id to cancel.\n   */\n  public clearInterval(id: number): void {\n    if (this._intervalIds && this._intervalIds[id]) {\n      clearInterval(id);\n      delete this._intervalIds[id];\n    }\n  }\n\n  /**\n   * Creates a function that, when executed, will only call the func function at most once per\n   * every wait milliseconds. Provide an options object to indicate that func should be invoked\n   * on the leading and/or trailing edge of the wait timeout. Subsequent calls to the throttled\n   * function will return the result of the last func call.\n   *\n   * Note: If leading and trailing options are true func will be called on the trailing edge of\n   * the timeout only if the throttled function is invoked more than once during the wait timeout.\n   *\n   * @param func - The function to throttle.\n   * @param wait - The number of milliseconds to throttle executions to. Defaults to 0.\n   * @param options - The options object.\n   * @returns The new throttled function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public throttle<T extends (...args: any[]) => any>(\n    func: T,\n    wait?: number,\n    options?: {\n      leading?: boolean;\n      trailing?: boolean;\n    },\n  ): T {\n    if (this._isDisposed) {\n      return this._noop as T;\n    }\n\n    let waitMS = wait || 0;\n    let leading = true;\n    let trailing = true;\n    let lastExecuteTime = 0;\n    let lastResult: T;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let lastArgs: any[];\n    let timeoutId: number | null = null;\n\n    if (options && typeof options.leading === 'boolean') {\n      leading = options.leading;\n    }\n\n    if (options && typeof options.trailing === 'boolean') {\n      trailing = options.trailing;\n    }\n\n    let callback = (userCall?: boolean) => {\n      let now = Date.now();\n      let delta = now - lastExecuteTime;\n      let waitLength = leading ? waitMS - delta : waitMS;\n      if (delta >= waitMS && (!userCall || leading)) {\n        lastExecuteTime = now;\n        if (timeoutId) {\n          this.clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n        lastResult = func.apply(this._parent, lastArgs);\n      } else if (timeoutId === null && trailing) {\n        timeoutId = this.setTimeout(callback, waitLength);\n      }\n\n      return lastResult;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let resultFunction = ((...args: any[]): any => {\n      lastArgs = args;\n      return callback(true);\n    }) as T;\n\n    return resultFunction;\n  }\n\n  /**\n   * Creates a function that will delay the execution of func until after wait milliseconds have\n   * elapsed since the last time it was invoked. Provide an options object to indicate that func\n   * should be invoked on the leading and/or trailing edge of the wait timeout. Subsequent calls\n   * to the debounced function will return the result of the last func call.\n   *\n   * Note: If leading and trailing options are true func will be called on the trailing edge of\n   * the timeout only if the debounced function is invoked more than once during the wait\n   * timeout.\n   *\n   * @param func - The function to debounce.\n   * @param wait - The number of milliseconds to delay.\n   * @param options - The options object.\n   * @returns The new debounced function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public debounce<T extends (...args: any[]) => any>(\n    func: T,\n    wait?: number,\n    options?: {\n      leading?: boolean;\n      maxWait?: number;\n      trailing?: boolean;\n    },\n  ): ICancelable<T> & T {\n    if (this._isDisposed) {\n      let noOpFunction = (() => {\n        /** Do nothing */\n      }) as ICancelable<T> & T;\n\n      noOpFunction.cancel = () => {\n        return;\n      };\n      noOpFunction.flush = ((() => null) as unknown) as () => ReturnType<T>;\n      noOpFunction.pending = () => false;\n\n      return noOpFunction;\n    }\n\n    let waitMS = wait || 0;\n    let leading = false;\n    let trailing = true;\n    let maxWait: number | null = null;\n    let lastCallTime = 0;\n    let lastExecuteTime = Date.now();\n    let lastResult: ReturnType<T>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let lastArgs: any[];\n    let timeoutId: number | null = null;\n\n    if (options && typeof options.leading === 'boolean') {\n      leading = options.leading;\n    }\n\n    if (options && typeof options.trailing === 'boolean') {\n      trailing = options.trailing;\n    }\n\n    if (options && typeof options.maxWait === 'number' && !isNaN(options.maxWait)) {\n      maxWait = options.maxWait;\n    }\n\n    let markExecuted = (time: number) => {\n      if (timeoutId) {\n        this.clearTimeout(timeoutId);\n        timeoutId = null;\n      }\n      lastExecuteTime = time;\n    };\n\n    let invokeFunction = (time: number) => {\n      markExecuted(time);\n      lastResult = func.apply(this._parent, lastArgs);\n    };\n\n    let callback = (userCall?: boolean) => {\n      let now = Date.now();\n      let executeImmediately = false;\n      if (userCall) {\n        if (leading && now - lastCallTime >= waitMS) {\n          executeImmediately = true;\n        }\n        lastCallTime = now;\n      }\n      let delta = now - lastCallTime;\n      let waitLength = waitMS - delta;\n      let maxWaitDelta = now - lastExecuteTime;\n      let maxWaitExpired = false;\n\n      if (maxWait !== null) {\n        // maxWait only matters when there is a pending callback\n        if (maxWaitDelta >= maxWait && timeoutId) {\n          maxWaitExpired = true;\n        } else {\n          waitLength = Math.min(waitLength, maxWait - maxWaitDelta);\n        }\n      }\n\n      if (delta >= waitMS || maxWaitExpired || executeImmediately) {\n        invokeFunction(now);\n      } else if ((timeoutId === null || !userCall) && trailing) {\n        timeoutId = this.setTimeout(callback, waitLength);\n      }\n\n      return lastResult;\n    };\n\n    let pending = (): boolean => {\n      return !!timeoutId;\n    };\n\n    let cancel = (): void => {\n      if (pending()) {\n        // Mark the debounced function as having executed\n        markExecuted(Date.now());\n      }\n    };\n\n    let flush = () => {\n      if (pending()) {\n        invokeFunction(Date.now());\n      }\n\n      return lastResult;\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let resultFunction = ((...args: any[]) => {\n      lastArgs = args;\n      return callback(true);\n    }) as ICancelable<T> & T;\n\n    resultFunction.cancel = cancel;\n    resultFunction.flush = flush;\n    resultFunction.pending = pending;\n\n    return resultFunction;\n  }\n\n  public requestAnimationFrame(callback: () => void, targetElement?: Element | null): number {\n    let animationFrameId = 0;\n    const win = getWindow(targetElement)!;\n\n    if (!this._isDisposed) {\n      if (!this._animationFrameIds) {\n        this._animationFrameIds = {};\n      }\n\n      let animationFrameCallback = () => {\n        try {\n          // Now delete the record and call the callback.\n          if (this._animationFrameIds) {\n            delete this._animationFrameIds[animationFrameId];\n          }\n\n          callback.apply(this._parent);\n        } catch (e) {\n          this._logError(e);\n        }\n      };\n\n      animationFrameId = win.requestAnimationFrame\n        ? win.requestAnimationFrame(animationFrameCallback)\n        : win.setTimeout(animationFrameCallback, 0);\n\n      this._animationFrameIds[animationFrameId] = true;\n    }\n\n    return animationFrameId;\n  }\n\n  public cancelAnimationFrame(id: number, targetElement?: Element | null): void {\n    const win = getWindow(targetElement)!;\n\n    if (this._animationFrameIds && this._animationFrameIds[id]) {\n      win.cancelAnimationFrame ? win.cancelAnimationFrame(id) : win.clearTimeout(id);\n      delete this._animationFrameIds[id];\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected _logError(e: any): void {\n    if (this._onErrorHandler) {\n      this._onErrorHandler(e);\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ICancelable<T extends (...args: any[]) => any> = {\n  flush: () => ReturnType<T>;\n  cancel: () => void;\n  pending: () => boolean;\n};\n","/**\n * Dictionary of booleans.\n *\n * @internal\n */\nexport interface IDictionary {\n  [className: string]: boolean;\n}\n\n/**\n * Serializable object.\n *\n * @internal\n */\nexport interface ISerializableObject {\n  toString?: () => string;\n}\n\n/**\n * css input type.\n *\n * @internal\n */\nexport type ICssInput = string | ISerializableObject | IDictionary | null | undefined | boolean;\n\n/**\n * Concatination helper, which can merge class names together. Skips over falsey values.\n *\n * @public\n */\nexport function css(...args: ICssInput[]): string {\n  let classes = [];\n\n  for (let arg of args) {\n    if (arg) {\n      if (typeof arg === 'string') {\n        classes.push(arg);\n      } else if (arg.hasOwnProperty('toString') && typeof arg.toString === 'function') {\n        classes.push(arg.toString());\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        for (let key in arg as any) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          if ((arg as any)[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n  }\n\n  return classes.join(' ');\n}\n","import { getWindow } from './dom/getWindow';\nimport { Stylesheet } from '@fluentui/merge-styles';\n\n// Initialize global window id.\nconst CURRENT_ID_PROPERTY = '__currentId__';\nconst DEFAULT_ID_STRING = 'id__';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet _global: any = getWindow() || {};\n\nif (_global[CURRENT_ID_PROPERTY] === undefined) {\n  _global[CURRENT_ID_PROPERTY] = 0;\n}\n\nlet _initializedStylesheetResets = false;\n\n/**\n * Generates a unique id in the global scope (this spans across duplicate copies of the same library.)\n *\n * @public\n */\nexport function getId(prefix?: string): string {\n  if (!_initializedStylesheetResets) {\n    // Configure ids to reset on stylesheet resets.\n    const stylesheet = Stylesheet.getInstance();\n\n    if (stylesheet && stylesheet.onReset) {\n      stylesheet.onReset(resetIds);\n    }\n    _initializedStylesheetResets = true;\n  }\n\n  let index = _global[CURRENT_ID_PROPERTY]++;\n\n  return (prefix === undefined ? DEFAULT_ID_STRING : prefix) + index;\n}\n\n/**\n * Resets id counter to an (optional) number.\n *\n * @public\n */\nexport function resetIds(counter: number = 0): void {\n  _global[CURRENT_ID_PROPERTY] = counter;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Returns a single function which will call each of the given functions in the context of the\n * parent.\n */\nexport function appendFunction(parent: any, ...functions: any[]): () => void {\n  if (functions.length < 2) {\n    return functions[0] as () => void;\n  }\n\n  return (...args: any[]): void => {\n    functions.forEach((f: () => void) => f && f.apply(parent, args));\n  };\n}\n","import * as React from 'react';\nimport { extendComponent } from './extendComponent';\nimport type { IBaseProps } from './BaseComponent.types';\n\n/**\n * Helper to manage componentRef resolution. Internally appends logic to\n * lifetime methods to resolve componentRef to the passed in object.\n *\n * Usage: call initializeComponentRef(this) in the constructor,\n */\nexport function initializeComponentRef<TProps extends IBaseProps, TState>(obj: React.Component<TProps, TState>): void {\n  extendComponent(obj, {\n    componentDidMount: _onMount,\n    componentDidUpdate: _onUpdate,\n    componentWillUnmount: _onUnmount,\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _onMount(this: any): void {\n  _setComponentRef(this.props.componentRef, this);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _onUpdate(this: any, prevProps: IBaseProps): void {\n  if (prevProps.componentRef !== this.props.componentRef) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _setComponentRef((prevProps as any).componentRef, null);\n    _setComponentRef(this.props.componentRef, this);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _onUnmount(this: any): void {\n  _setComponentRef(this.props.componentRef, null);\n}\n\nfunction _setComponentRef<TInterface>(componentRef: React.RefObject<TInterface>, value: TInterface | null): void {\n  if (componentRef) {\n    if (typeof componentRef === 'object') {\n      (componentRef as { current: TInterface | null }).current = value;\n    } else if (typeof componentRef === 'function') {\n      (componentRef as Function)(value);\n    }\n  }\n}\n","import * as React from 'react';\nimport { appendFunction } from './appendFunction';\n\n/**\n * Extends a component's lifetime methods by appending new functions to the existing lifetime functions.\n */\nexport function extendComponent<T extends React.Component>(parent: T, methods: { [key in keyof T]?: T[key] }): void {\n  for (let name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parent[name] = appendFunction(parent, parent[name], methods[name]) as any;\n    }\n  }\n}\n"],"names":["useMergedRefs","refs","mergedCallback","React","value","current","_i","ref","__spreadArray","arraysEqual","array1","array2","length","i","createResolver","local","newValue","createMergedRef","newRefs","resolver","getParent","child","allowVirtualParents","parent","element","_virtual","getVirtualParent","parentNode","findElementRecursive","matchFunction","document","body","DATA_PORTAL_ATTRIBUTE","portalContainsElement","target","elementMatch","testElement","hasAttribute","KeyCodes","shallowCompare","a","b","propName","hasOwnProperty","assign","args","filteredAssign","apply","this","concat","isAllowed","_a","sourceObject","_id","EventGroup","_uniqueId","_parent","_eventRecords","eventName","eventArgs","bubbleEvent","retVal","_isElement","createEvent","ev","initEvent","dispatchEvent","createEventObject","evObj","fireEvent","events","__events__","eventRecords","id","eventRecordList","listIndex","record","objectCallback","call","declaredEvents","__declaredEvents","event","stopPropagation","cancelBubble","addEventListener","HTMLElement","_isDisposed","off","useCapture","on","callback","options","indexOf","split","parent_1","eventRecord","count","push","processElementEvent","_this","result","e","preventDefault","elementCallback","attachEvent","targetArrayLookup","targetArray","splice","removeEventListener","detachEvent","raise","props","context","_super","obj","prototype","methodNames","len","_makeSafe","_makeAllSafe","BaseComponent","__extends","prevProps","prevState","_updateComponentRef","_setComponentRef","componentRef","__disposables","_disposables","disposable","dispose","Object","__className","results","exec","constructor","toString","__async","Async","__events","refName","__resolves","currentProps","newProps","deprecationMap","className","mutuallyExclusiveMap","requiredProps","conditionalPropName","condition","_skipComponentRefResolution","methodName","classMethod","prototypeMethod","nullRender","DirectionalKeyCodes","mountCounters","WeakMap","setMountCounters","key","delta","currValue","get","set","useFocusRects","rootRef","win","getWindow","FabricConfig","disableFocusRects","_onMouseDown","_onPointerDown","_onKeyDown","FocusRects","setFocusVisibility","pointerType","which","mergeAriaAttributeValues","ariaAttributes","mergedAttribute","filter","arg","join","trim","undefined","ImageIcon","imageProps","nativeProps","getNativeProps","htmlElementProperties","altText","alt","hasName","title","imageNameProps","containerProps","css","MS_ICON","classNames","Image","__assign","DirectionalHint","ContextualMenuItemType","memoizer","createMemoizer","outer","inner","innerMemoizer","defaultRender","innerProps","outerProps","FocusZoneDirection","FocusZoneTabbableElements","elementContains","isContained","nextParent","contains","focusFirstChild","rootElement","getNextElement","targetToFocusOnNextRepaint","requestAnimationFrame","focus","focusAsync","getPreviousElement","currentElement","checkNode","suppressParentTraversal","traverseChildren","includeElementsInFocusZones","allowFocusRoot","tabbable","isCurrentElementVisible","isElementVisible","isElementFocusZone","isElementFocusSubZone","childMatch","lastElementChild","isElementTabbable","childMatchSiblingMatch","previousElementSibling","childMatchParent","parentElement","childMatchParentMatch","siblingMatch","suppressChildTraversal","firstElementChild","nextElementSibling","getAttribute","visibilityAttribute","offsetHeight","offsetParent","isVisible","checkTabIndex","disabled","tabIndex","tabIndexAttributeValue","parseInt","isFocusableAttribute","isTabIndexSet","tagName","shouldWrapFocus","noWrapDataAttribute","attribute","elementContainsAttribute","raiseClick","Event","createNewEvent","_scrollbarWidth","DATA_IS_SCROLLABLE_ATTRIBUTE","mergeStyles","overflow","findScrollableParent","startingElement","el","doc","getDocument","computedStyles","getComputedStyle","overflowY","getPropertyValue","focusZoneStyles","IS_FOCUSABLE_ATTRIBUTE","FOCUSZONE_ID_ATTRIBUTE","TABINDEX","NO_VERTICAL_WRAP","NO_HORIZONTAL_WRAP","LARGE_DISTANCE_FROM_CENTER","LARGE_NEGATIVE_DISTANCE_FROM_CENTER","isMacResult","_allInstances","_outerZones","Set","ALLOWED_INPUT_TYPES","ALLOW_VIRTUAL_ELEMENTS","_portalContainsElement","newActiveElement","onActiveElementChanged","doNotAllowFocusEventToPropagate","stopFocusPropagation","onFocusNotification","onFocus","shouldFocusInnerElementWhenReceivedFocus","defaultTabbableElement","isImmediateDescendant","_isImmediateDescendantOfZone","_root","maybeElementToFocus","_activeElement","initialElementFocused","_setFocusAlignment","_updateTabIndexes","_setParkedFocus","path","pop","_setActiveElement","theme","direction","isInnerZoneKeystroke","pagingSupportDisabled","shouldEnterInnerZone","onKeyDown","isDefaultPrevented","_getDocument","activeElement","_isInnerZone","innerZone","_getFirstInnerZone","focusElement","firstChild","altKey","_shouldRaiseClicksOnSpace","_tryInvokeClickForFocusable","vertical","_preventDefaultWhenHandled","_moveFocusLeft","_moveFocusRight","horizontal","_moveFocusUp","_moveFocusDown","_moveFocusPaging","allowTabKey","handleTabKey","_isElementInput","focusChanged","_processingTabKey","_shouldWrapFocus","getRTL","shiftKey","shouldResetActiveElementWhenTabFromZone","_isContentEditableElement","_shouldInputLoseFocus","lastChild","_shouldRaiseClicksOnEnter","isForward","activeRect","targetRect","leftAlignment","_focusAlignment","left","x","targetRectTop","Math","floor","top","activeRectBottom","bottom","targetRectBottom","activeRectTop","width","abs","initializeComponentRef","getId","shouldRaiseClicksFallback","shouldRaiseClicks","FocusZone","defaultProps","_b","shouldRaiseClicksOnEnter","_c","shouldRaiseClicksOnSpace","_d","size","forEach","zone","root","_windowElement","nodeType","add","_onKeyDownCapture","_onBlur","querySelector","defaultActiveElement","shouldFocusOnMount","preventFocusRestoration","_lastIndexPath","elementToFocus","index","nextChild","children","min","getFocusableByIndexPath","delete","_defaultFocusElement","tag","elementType","rootProps","ariaDescribedBy","ariaLabelledBy","divProps","Tag","_evaluateFocusBeforeRender","getTheme","selectors","outline","_mergedRef","elementRef","_onFocus","onMouseDownCapture","forceIntoFirstElement","ownerZoneElement","_getOwnerZone","ownerZone","forceAlignment","onBeforeFocus","shouldReceiveFocus","point","focusedElement","shouldRestoreFocus","fromElement","toElement","unshift","Array","getElementIndexPath","isParked","_isParked","_parkedTabIndex","setAttribute","removeAttribute","previousActiveElement","preventDefaultWhenHandled","match","getDistanceFromCenter","useDefaultWrap","candidateDistance","candidateElement","changedFocus","isBidirectional","bidirectional","getBoundingClientRect","elementDistance","isCircularNavigation","targetTop","_moveFocus","distance","shouldWrap","parseFloat","toFixed","right","scrollableParent","targetBottom","pagesize","clientHeight","_getHorizontalDistanceFromCenter","isHorizontal","isVertical","rect","top_1","height","childNodes","childIndex","toLowerCase","type","selectionStart","isRangeSelected","selectionEnd","inputValue","isReadonly","readOnly","shouldInputLoseFocusOnArrowKey","checkForNoWrap","isMac","reset","userAgent","navigator","RectangleEdge","Position","isIOS","window","test","getPropsWithDefaults","propsWithoutDefaults","keys","getIsChecked","item","canCheck","isChecked","checked","hasSubmenu","subMenuProps","items","isItemDisabled","isDisabled","getMenuItemAriaRole","Rectangle","_createPositionData","targetEdge","alignmentEdge","isAuto","DirectionalDictionary","_isRectangleWithinBounds","boundingRect","_getOutOfBoundsEdges","outOfBounds","_getEdgeValue","edge","_setEdgeValue","_getCenterValue","edges","_getFlankingEdges","positiveEdge","negativeEdge","_getRelativeEdgeValue","_getRelativeRectEdgeValue","_getRelativeEdgeDifference","hostRect","_moveEdge","maintainSize","difference","returnRect","_alignEdges","gap","_isEdgeInBounds","bounds","_getOutOfBoundsDegree","total","_adjustFitWithinBounds","bounding","positionData","directionalHintFixed","coverTarget","alignTargetEdge","elementEstimate","elementRectangle","directions","oobDegree","currentEstimate","currentEdge","currentAlignment","bestEdge","bestAlignment","currentOOBDegree","slice","_estimatePosition","_flipToFit","fixedEdge","flippedElementEstimate","oppositeEdge","_flipAlignmentEdge","_alignOutOfBoundsEdges","outOfBoundsEdges","preserveEdge","edgeAttempt","forcedInBounds","_centerEdgeToPoint","elementToPosition","estimatedElementPosition","elementEdge","adjustedGap","_alignOppositeEdges","_finalizeReturnEdge","returnEdge","_finalizeElementPosition","hostElement","doNotFinalizeReturnEdge","forceWithinBounds","returnValue","_getRectangleFromElement","_isEdgeOnBounds","_calculateActualBeakWidthInPixels","beakWidth","sqrt","_getPositionData","directionalHint","directionalHintForRTL","previousPositions","positionInformation","getClosestEdge","targetCenter","boundingCenter","_positionElementWithinBounds","_finalizeBeakPosition","elementPosition","positionedBeak","actualElement","showBeak","targetRectangle","closestEdge","hideBeak","_positionBeak","beakTargetPoint","elementBounds","beakPosition","clientRect","_getRectangleFromIRect","_positionElementRelative","gapSpace","clientX","clientY","rectOrPoint","y","_getTargetRect","_getAlignmentData","positionedElement","_finalizePositionData","_positionCallout","callout","isBeakVisible","positionProps","innerWidth","scrollDiv","createElement","style","setProperty","appendChild","offsetWidth","clientWidth","removeChild","getScrollbarWidth","innerHeight","finalizedBeakPosition","positionCard","_positionCard","useConst","initialValue","useAsync","async","useOnEvent","callbackRef","WindowContext","useWindow","defaultFocusRestorer","originalElement","containsFocus","setTimeout","useRestoreFocus","onRestoreFocus","originalFocusedElement","currentActiveElement","doesElementContainFocus","documentContainsFocus","hasFocus","relatedTarget","findSiblingNodes","node","Popup","forwardedRef","mergedRootRef","isModalOrPanel","targetDocument","popupPortalNode","nodesToHide_1","popupAncestorNode","currNode","findAncestorNode","useHideSiblingNodes","role","ariaLabel","onDismiss","needsVerticalScrollBar","needsVerticalScrollBarState","setNeedsVerticalScrollBar","rootHeight","firstChildHeight","useScrollbarAsync","divProperties","useTarget","previousTargetProp","targetRef","targetWindow","currentDoc","ANIMATIONS","AnimationClassNames","BEAK_ORIGIN_POSITION","OFF_SCREEN_STYLE","opacity","pointerEvents","ARIA_ROLE_ATTRIBUTES","DEFAULT_PROPS","preventDismissOnLostFocus","preventDismissOnScroll","preventDismissOnResize","minPagePadding","getClassNames","classNamesFunction","disableCaching","usePositions","calloutElement","getBounds","positions","setPositions","positionAttempts","previousTarget","hidden","finalHeight","calloutMaxHeight","onPositioned","timerId_1","prevElementPositions","newElementPosition","dupeCalloutElement","cloneNode","maxHeight","visibility","newPositions","positionCallout","comparePositions","cancelAnimationFrame","CalloutContentBase","styles","calloutWidth","calloutMaxWidth","calloutMinWidth","doNotLayer","hideOverflow","backgroundColor","onScroll","onLayerMounted","setCalloutElement","calloutCallback","calloutEl","targetWindowResized","setTargetWindowResized","cachedBounds","currentBounds","segments","getWindowSegments","segment","_getBoundsFromTargetWindow","getBoundsFromTargetWindow","debounce","leading","useBounds","setMaxHeight","topBounds","bottomBounds","useMaxHeight","dismissOnTargetClick","shouldDismissOnWindowFocus","preventDismissOnEvent","isMouseDownOnPopup","mouseDownHandlers","positionsExists","dismissOnScroll","dismissOnClickOrScroll","dismissOnResize","dismissOnLostFocus","eventPaths","composedPath","isEventTargetOutsideCallout","dismissOnTargetWindowBlur","disposablesPromise","Promise","resolve","disposables_1","documentElement","then","useDismissHandlers","mouseDownOnPopup","mouseUpOnPopup","isForcedInBounds","cssPositions","setInitialFocus","hasPositions","timerId_2","useAutoFocus","overflowYHidden","beakVisible","overflowStyle","visibilityStyle","container","beak","getBeakPosition","beakCurtain","calloutMain","onMouseDown","onMouseUp","previousProps","nextProps","shouldUpdateWhenHidden","beakPositionStyle","display","newElementPositions","oldPositionEdge","newPositionEdge","getBeakStyle","displayName","GlobalClassNames","CalloutContent","styled","getGlobalClassNames","semanticColors","effects","position","fonts","medium","zIndex","ZIndexes","boxSizing","borderRadius","roundedCorner2","boxShadow","elevation16","HighContrastSelector","borderWidth","borderStyle","borderColor","focusClear","maxWidth","minWidth","menuBackground","border","transform","overflowX","scope","mergeSettings","oldSettings","newSettings","mergeSettingsWith","_isSettingsFunction","settings","_settingsMergeWith","mergeScopedSettings","scopedSettingsFromProps","oldScopedSettings","newScopedSettings","scopeName","_scopedSettingsMergeWith","forceUpdate","Customizer","Customizations","_onCustomizationChange","contextTransform","CustomizerContext","parentContext","newContext","customizations","scopedSettings","inCustomizerContext","mergeCustomizations","getFabricTheme","memoizeFunction","isRTL","createTheme","rtl","FabricBase","applyTheme","applyThemeToBody","bodyThemed","currentDoc_1","classList","remove","useApplyThemeToBody","Root","dir","contextDir","pageDir","componentDir","rootDir","needsTheme","getDir","renderedContent","useRenderedContent","inheritFont","fontFamily","Fabric","color","palette","neutralPrimary","bodyText","bodyBackground","_defaultHostSelector","_layersByHostId","filteredEventProps","LayerBase","mergedRef","layerRef","needRaiseLayerMount","setNeedRaiseLayerMount","useDocument","eventBubblingEnabled","hostId","onLayerDidMount","onLayerWillUnmount","insertFirst","isNotHost","getHost","getElementById","defaultHostSelector","removeLayerElement","elem","createLayerElement","host","virtualChild","virtualParent","oldParent","setVirtualParent","insertBefore","registerLayer","idx","unregisterLayer","ReactDOM","name","onFilterEvent","getFilteredEvents","content","eventPhase","BUBBLING_PHASE","rootNoHost","Layer","fields","Callout","layerProps","rest","KeytipEvents","defaultIconRenderer","iconProps","Icon","icon","renderItemIcon","onRenderIcon","renderCheckMarkIcon","onCheckmarkClick","isItemChecked","iconName","checkmarkIcon","onClick","renderItemName","text","label","renderSecondaryText","secondaryText","renderSubMenuIcon","submenuIconProps","subMenuIcon","openSubMenu","getSubmenuTarget","submenuTarget","dismissSubMenu","dismissAll","dismissMenu","ContextualMenuItemBase","renderContent","onRenderContent","_renderLayout","linkContentMenu","linkContent","defaultRenders","getDividerClassNames","mergeStyleSets","wrapper","alignItems","divider","neutralTertiaryAlt","CONTEXTUAL_MENU_ITEM_HEIGHT","MediumScreenSelector","getScreenSelector","ScreenWidthMaxMedium","getItemHighContrastStyles","getHighContrastNoAdjustStyle","getMenuItemStyles","ContextualMenuItemBackgroundHoverColor","menuItemBackgroundHovered","ContextualMenuItemTextHoverColor","menuItemTextHovered","ContextualMenuItemBackgroundSelectedColor","menuItemBackgroundPressed","ContextualMenuItemDividerColor","bodyDivider","menuItemStyles","getFocusStyle","lineHeight","cursor","padding","textAlign","rootDisabled","disabledBodyText","rootHovered","themeDarkAlt","rootFocused","white","rootChecked","rootPressed","themeDark","rootExpanded","bodyTextChecked","whiteSpace","anchorLink","textRendering","letterSpacing","wordSpacing","textTransform","textIndent","textShadow","textDecoration","margin","verticalAlign","flexGrow","textOverflow","neutralSecondary","paddingLeft","minHeight","fontSize","IconFontSizes","flexShrink","iconColor","menuIcon","_e","iconDisabled","bodySubtext","_f","_g","splitButtonFlexContainer","flexWrap","justifyContent","concatStyleSets","CONTEXTUAL_SPLIT_MENU_MINWIDTH","getSplitButtonVerticalDividerClassNames","isExpanded","splitMenu","screenReaderText","getItemClassNames","expanded","isAnchorLink","knownIcon","itemClassName","dividerClassName","iconClassName","subMenuClassName","primaryDisabled","IsFocusVisibleClassName","background","splitPrimary","flexBasis","splitContainer","hiddenContentStyle","getItemStyles","ContextualMenuItem","onItemMouseEnter","currentTarget","onItemClickBase","onItemMouseLeave","onItemKeyDown","onItemMouseMove","ContextualMenuItemWrapper","usePrevious","useRef","useEffect","keytips","persistedKeytips","sequenceMapping","inKeytipMode","shouldEnterKeytipMode","delayUpdatingKeytipChange","KeytipManager","_instance","keytipProps","persisted","addParentOverflow","keySequences","uniqueKeytip","_getUniqueKtp","uniqueID","event_1","PERSISTED_KEYTIP_ADDED","KEYTIP_ADDED","keytip","newKeytipProps","oldKeyTip","visible","KEYTIP_UPDATED","keytipToRemove","PERSISTED_KEYTIP_REMOVED","KEYTIP_REMOVED","ENTER_KEYTIP_MODE","EXIT_KEYTIP_MODE","map","fullSequence","parentKeytip","overflowSetSequence","overflowButtonSequences","keytipSequences","PERSISTED_KEYTIP_EXECUTE","sequencesToID","reduce","prevValue","keySequence","useKeytipData","uniqueId","keytipManager","getInstance","prevOptions","update","register","unregister","nativeKeytipProps","keytipId","describedByPrepend","describedby","getAriaDescribedBy","overflowKeySequences","overflowSequenceLen","overflowSequence","array","itemToAdd","copy","addElementAtIndex","mergeOverflows","getKeytipData","KeytipData","hasMenu","_anchor","onItemClick","ariaDescription","_ariaDescriptionId","ContextualMenuAnchor","focusableElementIndex","totalItemCount","hasCheckmarks","hasIcons","ChildrenRenderer","expandedMenuItemKey","anchorRel","rel","itemHasSubmenu","anchorProperties","itemProps","_getMemoizedMenuButtonKeytipProps","ariaDescribedByIds","additionalItemProperties","keytipAttributes","href","_onItemClick","onMouseEnter","_onItemMouseEnter","onMouseLeave","_onItemMouseLeave","onMouseMove","_onItemMouseMove","_onItemKeyDown","_getSubmenuTarget","_renderAriaDescription","VerticalDividerBase","deprecatedGetClassNames","VerticalDivider","Error","names","_executeItemClick","_splitButton","executeItemClick","_processingTouch","_handleTouchAndPointerEvent","stopImmediatePropagation","_async","_events","ContextualMenuSplitButton","splitButton","_onItemMouseEnterPrimary","bind","_onItemMouseMovePrimary","onTouchStart","_onTouchStart","_renderSplitPrimaryButton","_renderSplitDivider","_renderSplitIconButton","data","itemComponentProps","buttonProperties","onItemMouseDown","_onIconItemClick","buttonProps","_onItemMouseEnterIcon","_onItemMouseMoveIcon","onTap","_lastTouchTimeoutId","clearTimeout","_btn","ContextualMenuButton","defaultRole","buttonNativeProperties","itemRole","itemButtonProperties","useId","prefix","providedId","ResponsiveMode","_defaultMode","_lastMode","RESPONSIVE_MAX_CONSTRAINT","getInitialResponsiveMode","large","getResponsiveMode","currentWindow","responsiveMode","small","MenuContext","getContextualMenuItemClassNames","getSubmenuItems","overrideItems","subItem","preferMenuTargetAsEventTarget","contextItem","getOnClickWithOverrideTarget","COMPONENT_NAME","_getMenuItemStylesFunction","styleProps","useSubMenuState","dismiss","menuTarget","setExpandedMenuItemKey","setSubmenuTarget","subMenuId","closeSubMenu","submenuItemKey","onSubMenuDismiss","isMountedRef","useOnSubmenuDismiss","findItemByKeyFromItems","submenuProps","isSubMenu","useKeyHandlers","focusZoneDirection","lastKeyDownWasAltOrMeta","keyHandler","shouldHandleKey","dismissAllMenus","handled","shouldHandleKeyDown","submenuCloseKey","shouldCloseSubMenu","metaKey","isAltOrMeta","shouldHandleKeyUp","keyPressIsAltOrMetaAlone","hasModifier","isUp","isDown","getFirstFocusable","openKey","ContextualMenuBase","asyncTracker","menuId","tryFocusPreviousActiveElement","usePreviousActiveElement","getSubmenuProps","delayUpdateFocusOnHover","shouldUpdateFocusOnMouseEvent","gotMouseMove","onMenuFocusCapture","useShouldUpdateFocusOnMouseMove","isScrollIdle","scrollIdleTimeoutId","useScrollHandler","subMenuHoverDelay","enterTimerRef","cancelSubMenuTimer","onTimerExpired","useSubmenuEnterTimer","startSubmenuTimer","subMenuEntryTimer","overrideResponsiveMode","lastResponsiveMode","setLastResponsiveMode","onResize","newResponsiveMode","useResponsiveMode","onMenuDismissed","onMenuOpened","previousHidden","onMenuOpenedRef","onMenuClosedRef","propsRef","useVisibility","onKeyUp","onMenuKeyDown","shouldIgnoreMouseEvent","updateFocusOnMouseEvent","targetElement","nativeEvent","detail","overrideTarget","shouldDismiss","defaultPrevented","setActive","useMouseHandlers","onItemMouseEnterBase","onItemMouseMoveBase","onMouseItemLeave","onAnchorClick","onDefaultRenderMenuList","menuListProps","menuClassNames","indexCorrection","list","menuItem","renderMenuItem","itemType","Divider","Header","indexIncrease","customOnRenderListLength","itemClassNames","renderedItems","subMenuIconClassName","itemStyleProps","subComponentStyles","renderSeparator","headerItem","renderHeaderMenuItem","renderListItem","Section","renderSectionItem","renderNormalItem","sectionItem","sectionProps","groupProps","headerContextualMenuItem","ariaLabelledby","id_1","replace","id_2","topDivider","contextualMenuItem","itemsIndex","bottomDivider","fromSection","onRender","commonProps","contextualMenuItemAs","divHtmlProperties","header","labelElementId","useTargetWidth","useTargetAsMinWidth","shouldFocusOnContainer","calloutProps","_k","onRenderSubMenu","onDefaultRenderSubMenu","_l","onRenderMenuList","focusZoneProps","getMenuClassNames","itemsHaveIcons","contextualMenuItems","contextMenuStyle","adjustedFocusZoneProps","some","submenuItem","canAnyMenuItemsCheck","targetAsHtmlElement","targetWidth","totalItemCount_1","itemCount","calloutStyles_1","Consumer","menuContext","onFocusCapture","renderFocusZone","defaultMenuItemRenderer","persist","Element","isopen","LocalContextualMenu","listStyleType","fontWeight","FontWeights","menuHeader","userSelect","mediumPlus","paddingRight","paddingBottom","paddingTop","elevation8","ContextualMenu","ButtonGlobalClassNames","msButton","msButtonHasMenu","msButtonIcon","msButtonMenuIcon","msButtonLabel","msButtonDescription","msButtonScreenReaderText","msButtonFlexContainer","msButtonTextContainer","getBaseButtonClassNames","variantClassName","menuIconClassName","isSplit","iconExpandedHovered","menuIconExpandedHovered","rootExpandedHovered","rootHasMenu","labelHovered","iconHovered","descriptionHovered","menuIconHovered","iconPressed","descriptionPressed","menuIconPressed","rootCheckedDisabled","rootCheckedHovered","rootCheckedPressed","flexContainer","textContainer","iconExpanded","iconChecked","labelChecked","labelDisabled","menuIconChecked","menuIconDisabled","menuIconExpanded","description","descriptionChecked","descriptionDisabled","getSplitButtonClassNames","splitButtonMenuButton","splitButtonMenuButtonExpanded","splitButtonMenuButtonDisabled","splitButtonMenuButtonChecked","splitButtonMenuFocused","splitButtonContainer","splitButtonContainerChecked","splitButtonContainerCheckedHovered","splitButtonContainerHovered","splitButtonContainerFocused","splitButtonContainerDisabled","splitButtonMenuIcon","splitButtonMenuIconDisabled","splitButtonDivider","splitButtonDividerDisabled","componentAsMemoizer","Outer","Inner","_classNames","FontIcon","onRenderText","_onRenderText","onRenderDescription","_onRenderDescription","_hasText","_labelId","_descriptionId","menuIconProps","menuProps","MenuType","menuAs","_dismissMenu","_menuShouldFocusOnMount","_menuShouldFocusOnContainer","setState","menuHidden","_renderedVisibleMenu","state","_openMenu","_splitButtonContainer","_onMenuClick","_onMenuKeyDown","onKeyPress","_buttonElement","click","_isValidMenuOpenKey","onMenuClick","_onToggleMenu","_isSplitButton","BaseButton","ariaHidden","allowDisabledFocus","toggle","isPrimaryButtonDisabled","renderAsAnchor","resolvedAriaLabel","dataIsFocusable","isCheckboxTypeRole","checkedOrPressedValue","_onKeyPress","_onKeyUp","_onMouseUp","_onClick","_onRenderSplitButtonContent","_onRenderContent","onPointerUp","onAfterMenuDismiss","_onRenderIcon","onRenderAriaDescription","_onRenderAriaDescription","onRenderChildren","_onRenderChildren","onRenderMenu","_onRenderMenu","onRenderMenuIcon","_onRenderMenuIcon","Button","_onRenderTextContents","_shouldRenderMenu","_getMenuProps","Content","persistMenu","renderPersistedMenuHiddenOnMount","_onDismissMenu","primaryActionButtonProps","getBaseSplitButtonClassNames","onPointerDown","SplitButton","_onSplitButtonContainerKeyDown","_onSplitButtonPrimaryClick","_onSplitContainerFocusCapture","_onRenderSplitButtonMenuButton","_onRenderSplitButtonDivider","splitButtonMenuProps","splitButtonAriaLabel","splitButtonProps","menuTriggerKeyCode","baseClassName","noOutline","iconStyle","getStyles","buttonBorder","disabledBackground","disabledText","buttonHighContrastFocus","outlineColor","inset","highContrastStyle","customStyles","splitButtonDividerBaseStyles","splitButtonStyles","borderTopRightRadius","borderBottomRightRadius","borderRight","borderRightWidth","borderLeftWidth","buttonTextDisabled","neutralSecondaryAlt","borderLeft","marginLeft","marginTop","marginRight","marginBottom","_h","_j","_m","_o","primary","baseButtonStyles","getBaseButtonStyles","getSplitButtonStyles","defaultButtonStyles","p","s","primaryButtonBackground","primaryButtonText","primaryButtonBackgroundHovered","primaryButtonTextHovered","primaryButtonBackgroundPressed","primaryButtonTextPressed","primaryButtonTextDisabled","primaryButtonBackgroundDisabled","neutralTertiary","primaryStyles","buttonBackground","buttonBackgroundPressed","buttonBackgroundHovered","buttonBackgroundDisabled","buttonText","buttonTextHovered","buttonTextChecked","buttonTextCheckedHovered","neutralLight","neutralQuaternaryAlt","standardStyles","concatStyles","DefaultButton","ComposedComponent","resultClass","_onSettingChanged","ComponentWithInjectedProps","componentProps","_styleCache","default","component","mergedStyles","merged","source","dest","name_1","hoistStatics","getIconContent","getIcon","subset","code","fontFace","mergeImageProps","iconContent","accessibleName","finalChildren","IconType","cacheSize","onLoadingStateChange","ImageLoadState","imageLoadError","IconBase","imageErrorAs","isPlaceholder","isImage","iconType","image","iconContentChildren","RootType","_onImageLoadingStateChange","ImageType","finalIconContentChildren","placeholder","imageContainer","SVG_REGEX","ImageBase","frameElement","imageElement","onLoad","onError","src","loadState","setLoadState","naturalWidth","naturalHeight","complete","onImageLoaded","onImageError","useLoadState","imgProperties","shouldFadeIn","shouldStartVisible","imageFit","maximizeFrame","loading","coverStyle","previousLoadState","ImageFit","desiredRatio","ImageCoverStyle","computeCoverStyle","useCoverStyle","isLoaded","isLandscape","isCenter","isCenterContain","isCenterCover","isContain","isCover","isNone","isError","isNotImageFit","rootMaximizeFrame","imageCenter","imageContain","imageCover","imageCenterContain","imageCenterCover","imageNone","imageLandscape","imagePortrait","ImageFitStyles","supportsObjectFit","msMaxTouchPoints","fallbackObjectFitStyles","objectFit","LabelBase","required","Label","labelFontWeight","labelColor","labelDisabledColor","labelRequiredStarColor","errorText","wordWrap","overflowWrap","__browserNeedsRevealButton","isFocused","validateOnFocusIn","_validate","onBlur","validateOnFocusOut","labelStyles","htmlFor","isRevealingPassword","previousValue","_getValue","_lastChangeValue","onChange","_isControlled","uncontrolledValue","_fallbackId","_prefixId","_suffixId","_warnControlledUsage","defaultValue","String","errorMessage","_delayedValidate","deferredValidationTime","_lastValidation","TextFieldBase","_adjustInputHeight","validateOnLoad","selection","snapshot","start","end","multiline","setSelectionRange","_shouldValidateAllChanges","borderless","invalid","inputClassName","underlined","resizable","suffix","autoAdjustHeight","canRevealPassword","revealPasswordAriaLabel","onRenderPrefix","_onRenderPrefix","onRenderSuffix","_onRenderSuffix","onRenderLabel","_onRenderLabel","_errorMessage","isInvalid","hasRevealButton","isEdge","isIE11","_browserNeedsRevealButton","focused","hasLabel","hasErrorMessage","hasIcon","fieldGroup","_renderTextArea","_renderInput","revealButton","_onRevealButtonClick","revealSpan","revealIcon","_isDescriptionAvailable","DelayedRender","_renderErrorMessage","_textElement","blur","select","_hasWarnedNullValue","warn","valueProp","textAreaProps","textAreaProperties","onInput","_onInputChange","field","labelIds","inputProps","inputProperties","updatedInputProps","onRenderInput","_latestValidateValue","onGetErrorMessage","currentValidation_1","_notifyAfterValidate","onNotifyValidationResult","textField","scrollHeight","globalClassNames","unresizable","active","getLabelStyles","TextField","fieldPrefixSuffix","inputPlaceholderText","placeholderStyles","disabledPlaceholderStyles","normalize","borderBottom","inputBorder","borderBottomColor","inputBorderHovered","getInputFocusStyle","inputFocusBorderAlt","inputBackground","flexDirection","flex","inputText","getPlaceholderStyles","resize","xSmall","link","_timeoutIds","_immediateIds","_intervalIds","_animationFrameIds","_onErrorHandler","_noop","clearImmediate","clearInterval","duration","timeoutId","_logError","immediateId","intervalId","setInterval","func","wait","lastResult","lastArgs","waitMS","trailing","lastExecuteTime","userCall","now","Date","waitLength","noOpFunction","cancel","flush","pending","maxWait","lastCallTime","isNaN","markExecuted","time","invokeFunction","executeImmediately","maxWaitDelta","maxWaitExpired","resultFunction","animationFrameId","animationFrameCallback","classes","_global","_initializedStylesheetResets","stylesheet","Stylesheet","onReset","resetIds","counter","appendFunction","functions","f","methods","extendComponent","componentDidMount","_onMount","componentDidUpdate","_onUpdate","componentWillUnmount","_onUnmount"],"sourceRoot":""}