{"version":3,"file":"static/js/914.31cf91ce.chunk.js","mappings":"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","sources":["common/errorModal.tsx","pages/shakespeareanPokemonSearch.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport { DefaultButton, FontIcon, Modal,getTheme, mergeStyleSets, FontWeights, IconButton, IButtonStyles, IIconProps} from '@fluentui/react';\r\n\r\ntype ErrorModalProps = {\r\n    message: string\r\n    onDismiss: (ev?: React.MouseEvent<HTMLElement | HTMLButtonElement, MouseEvent> | undefined) => any,\r\n    showMessage: boolean\r\n}\r\nconst cancelIcon: IIconProps = { iconName: 'Cancel' };\r\n\r\nconst theme = getTheme();\r\n\r\nconst contentStyles = mergeStyleSets({\r\n    container: {\r\n        display: 'flex',\r\n        flexFlow: 'column nowrap',\r\n        alignItems: 'stretch',\r\n        backgroundColor: '#F87171',\r\n        border: `4px solid #F85858`,\r\n        maxWidth: '400px'\r\n    },\r\n    header: [\r\n        theme.fonts.xLarge,\r\n        {\r\n            flex: '1 1 auto',\r\n            color: 'white',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontWeight: FontWeights.semibold,\r\n            padding: '12px 12px 14px 24px',\r\n        },\r\n    ],\r\n    body: {\r\n        fontSize: theme.fonts.large,\r\n        flex: '4 4 auto',\r\n        color: 'white',\r\n        padding: '0 24px 24px 24px',\r\n        overflowY: 'hidden',\r\n        fontWeight: FontWeights.semibold,\r\n        selectors: {\r\n            p: { margin: '14px 0' },\r\n            'p:first-child': { marginTop: 0 },\r\n            'p:last-child': { marginBottom: 0 },\r\n            \r\n        },\r\n    },\r\n  });\r\n\r\n  const iconButtonStyles: Partial<IButtonStyles> = {\r\n    root: {\r\n      color: theme.palette.neutralPrimary,\r\n      marginLeft: 'auto',\r\n      marginTop: '4px',\r\n      marginRight: '2px',\r\n    },\r\n    rootHovered: {\r\n      color: theme.palette.neutralDark,\r\n    },\r\n  };\r\n  \r\nconst ErrorModal: FunctionComponent<ErrorModalProps> = ({ message, onDismiss, showMessage }) => {\r\n    return (\r\n        \r\n        <div className=\"flex justify-center custom-font\">\r\n            {/*<Modal\r\n                isOpen={showMessage}\r\n                onDismiss={onDismiss}\r\n                isBlocking={false}\r\n                containerClassName={contentStyles.container}\r\n            >\r\n                <div className={contentStyles.header}>\r\n                <span >Error:</span>\r\n                            \r\n                \r\n                </div>\r\n                <div className={contentStyles.body}>\r\n                    <span>\r\n                        <br />\r\n                        <br />\r\n                        {message}\r\n                    </span>\r\n                </div>\r\n                \r\n            </Modal>*/}\r\n            \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default ErrorModal;","import { Component, FormEvent, createRef } from 'react';\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport {withRouter } from \"react-router-dom\";\r\nimport { RootState } from '../store/store';\r\nimport { connect, ConnectedProps } from \"react-redux\"\r\nimport { \r\n    DefaultButton, \r\n    TextField\r\n} from '@fluentui/react';\r\nimport {\r\n    getPokemon,\r\n} from '../store/asyncActions/pokemonAsyncActions';\r\nimport { Pokemon } from '../store/models/pokemon';\r\nimport ErrorModal from '../common/errorModal';\r\nimport Spinner from '../common/spinner';\r\nimport { getErrorMessage } from '../helpers/errorHelper';\r\nimport { setErrorMessage } from '../store/reducers/configSlice';\r\n\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    pokemon: state.config.pokemon,\r\n    searchPokemon: state.config.searchPokemon,\r\n    searchFinished: state.config.searchFinished,\r\n    errorMessage: state.config.errorMessage\r\n    \r\n})\r\n\r\nconst mapDispatch = {\r\n    setErrorMessage: setErrorMessage,\r\n    getPokemonAction: getPokemon,\r\n}\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ninterface ShakespeareanPokemonSearchProps {\r\n    pokemon?: Pokemon,\r\n}\r\n\r\ninterface ShakespeareanPokemonSearchState {\r\n    pokemonName?: string,\r\n    \r\n}\r\n\r\n\r\n\r\ntype ShakespeareanPokemonSearchCombinedProps = ConnectedProps<typeof connector> & ShakespeareanPokemonSearchProps & RouteComponentProps<any>;\r\n\r\nclass ShakespeareanPokemonSearch extends Component<ShakespeareanPokemonSearchCombinedProps, ShakespeareanPokemonSearchState> {\r\n    myDiv: React.RefObject<HTMLDivElement>;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.myDiv = createRef();\r\n    }\r\n\r\n\r\n    private async updatePokemon() {\r\n\r\n        await this.props.getPokemonAction(this.state.pokemonName);\r\n\r\n    }\r\n\r\n    onDismissError = (ev?: React.MouseEvent<HTMLElement | HTMLButtonElement, MouseEvent> | any | undefined ) => {\r\n        this.props.setErrorMessage(undefined);\r\n    }\r\n\r\n    private onChangeField(event: FormEvent<HTMLInputElement | HTMLTextAreaElement >, newValue?: string | undefined) {\r\n        if(event.currentTarget.id.includes(\"pokemonName\")){\r\n            this.setState({pokemonName: newValue});\r\n        }\r\n    };\r\n\r\n    \r\n    componentDidMount() {\r\n        this.setState({ pokemonName: undefined});\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.state);\r\n        return (\r\n            <div>\r\n                <img src=\"/logo.png\" alt=\"Logo\" className=\"bgImage\" />\r\n                <div style={{ backgroundColor: \"white\", minWidth: '94vw',paddingTop: 20, paddingLeft: 35, paddingRight: 35, paddingBottom: 20 }}>\r\n                    <div>\r\n                        <span className=\"title\">Shakespearean Pokemon Search</span>\r\n                    </div>\r\n                    <div className=\"flex flex-row justify-center\">  \r\n                        <div className=\"bootstrap-wrapper container-fluid\">\r\n                            <div className=\"flex flex-row justify-center\">\r\n                                <div className=\"bootstrap-wrapper row\">\r\n                                    <div className=\"bootstrap-wrapper col-sm-12 col-md-6 col-lg-4 col-xl-4 col-xxl-2\">\r\n                                        <div></div>\r\n                                    </div>      \r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n                <div style={{ backgroundColor: \"white\", minWidth: '94vw', paddingBottom: 40, paddingLeft: 0, paddingRight: 0 }}>\r\n                    {(this.props.errorMessage) &&\r\n                        <ErrorModal onDismiss={this.onDismissError} message={this.props.errorMessage ?? ''} showMessage={this.props.errorMessage? true: false }/>\r\n                    }\r\n                    \r\n                    {this.props.searchPokemon &&\r\n                        <Spinner message='Loading Items' />\r\n                    }\r\n                    {this.state &&      \r\n                    <div className=\"flex flex-row justify-center\">\r\n                        <div className=\"bootstrap-wrapper row\">          \r\n                            <div className=\"bootstrap-wrapper col-sm-12 col-md-12 col-lg-12 col-xl-12 col-xxl-12\">\r\n                                <TextField label=\"Search by Pokemon Name\" className='textField' id=\"pokemonName\" value={this.state.pokemonName} style={{ minWidth:'300px'}} onChange={this.onChangeField.bind(this)}/>\r\n                            </div>\r\n                            <div className=\"bootstrap-wrapper col-sm-12 col-md-12 col-lg-12 col-xl-12 col-xxl-12\">\r\n                            <div className=\"flex flex-row justify-center\">\r\n                                <DefaultButton iconProps={{ iconName: \"Search\" }} title=\"Search\" text=\"Search\" ariaLabel=\"Search\" onClick={(ev) => this.updatePokemon()} />\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connector(ShakespeareanPokemonSearch));"],"names":["theme","getTheme","mergeStyleSets","container","display","flexFlow","alignItems","backgroundColor","border","maxWidth","header","fonts","xLarge","flex","color","fontWeight","FontWeights","padding","body","fontSize","large","overflowY","selectors","p","margin","marginTop","marginBottom","palette","neutralPrimary","neutralDark","message","onDismiss","showMessage","className","mapDispatch","setErrorMessage","getPokemonAction","getPokemon","connector","connect","state","pokemon","config","searchPokemon","searchFinished","errorMessage","ShakespeareanPokemonSearch","props","myDiv","onDismissError","ev","undefined","createRef","this","pokemonName","event","newValue","currentTarget","id","includes","setState","console","log","src","alt","style","minWidth","paddingTop","paddingLeft","paddingRight","paddingBottom","TextField","label","value","onChange","onChangeField","bind","DefaultButton","iconProps","iconName","title","text","ariaLabel","onClick","updatePokemon","Component","withRouter"],"sourceRoot":""}